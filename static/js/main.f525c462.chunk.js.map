{"version":3,"sources":["components/Task.js","components/TaskGroup.js","components/DetailModal.js","components/SortAlt.js","components/ActiveFilter.js","components/Main.js","App.js","index.js"],"names":["Task","state","showDetails","this","props","classes","task","completeTask","launchModal","className","taskContainer","key","id","status","Checkbox","checked","checkbox","onChange","color","size","TextField","taskStyle","disabled","InputProps","disableUnderline","style","paddingLeft","blackColor","value","description","multiline","IconButton","onClick","moveButtons","Component","withStyles","theme","border","borderRadius","width","marginTop","display","TaskGroup","header","tasks","currentSort","edit","getKeyName","filterOption","lowercurrentSort","groupTasks","filter","isActive","Fragment","length","map","i","styles","fieldStyle","fieldLabel","alignContent","minWidth","maxWidth","fieldContainer","alignItems","margin","inputStyle","paddingTop","paddingBottom","dateStyle","height","padding","dateContainer","buttonContainer","justifyContent","buttonStyle","headerName","headerClose","headerContainer","dialogContainer","DetailModal","type","taskDetails","category","dueDate","moment","format","actual","goal","priority","assigned","contact","activeDate","workTime","tags","completedDate","dueWeek","dueweek","startOf","dueMonth","notes","recurDays","isUpdating","e","setState","target","name","dateChange","activeDateChange","onAutoChange","newValue","fieldName","onStatusChange","add","onCheck","uuidv4","Math","random","toString","substring","Date","now","addTask","createTask","toggleModal","saveCurrentTask","saveTask","deleteCurrentTask","deleteTask","openModal","categories","assignedUsers","contactUsers","Dialog","onClose","open","fullWidth","disableBackdropClick","disableEscapeKeyDown","Typography","variant","Autocomplete","options","defaultValue","getOptionLabel","option","renderInput","params","freeSolo","inputValue","onInputChange","utils","DateFnsUtils","disableToolbar","autoOk","KeyboardButtonProps","inputVariant","Button","SortAlt","sortOptions","anchorEl","setAnchorEl","handleMenu","event","currentTarget","handleClose","handleClick","sortOption","handleSortChange","edge","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","ActiveFilter","filterOptions","handleFilterChange","Main","headers","lastSaved","isLoading","trackerName","selectedTask","modalType","componentDidMount","getServerData","componentDidUpdate","prevProps","prevState","getSortHeaders","getUniqueValues","search","window","location","listId","URLSearchParams","get","undefined","axios","then","res","data","listName","list","activateTasks","saveData","currentDT","post","alert","newId","_id","a","document","createElement","href","click","downloadFile","content","fileName","contentType","file","Blob","URL","createObjectURL","download","exportJSON","JSON","stringify","getFile","files","reader","FileReader","readAsText","onload","parse","result","createNew","taskDetail","newTasks","keyName","lowerKeyName","resArr","item","findIndex","x","push","sort","sortName","arrayName","handleTitleChange","handleSwitchChange","AppBar","position","Toolbar","accept","htmlFor","grow","addButton","fontStyle","fontSize","marginBottom","Divider","appBar","Fab","aria-label","fabButton","formControl","actionBar","top","bottom","flexGrow","zIndex","left","right","createMuiTheme","palette","primary","blue","typography","overrides","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f525c462.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreHoriz from '@material-ui/icons/MoreHoriz';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  taskStyle:{\r\n    border: '1px solid #ccc',\r\n    borderRadius: '25px',\r\n    width:'700px',\r\n    marginTop: '5px',\r\n  },\r\n  checkbox:{\r\n    // height: 0,\r\n    width: '5px',\r\n  },\r\n  taskContainer: {\r\n    display:'flex',\r\n  },\r\n  blackColor: {\r\n    color: 'black'\r\n  }\r\n});\r\n\r\nclass Task extends Component {\r\n\r\n  state = {\r\n    showDetails: false,\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      task,\r\n      completeTask,\r\n      launchModal\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={classes.taskContainer} key={task.id}>\r\n        {task.status !== 'Completed' &&\r\n          <Checkbox\r\n            checked={task.status === 'Completed' ? true : false}\r\n            className={classes.checkbox}\r\n            onChange={() => completeTask(task.id)}\r\n            color=\"primary\"\r\n            size='small'\r\n            />\r\n        }\r\n        <TextField\r\n          className={classes.taskStyle}\r\n          disabled\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              paddingLeft: '5px',\r\n            },\r\n            classes:{\r\n              disabled: classes.blackColor\r\n            },\r\n          }}\r\n          value={task.description}\r\n          multiline\r\n        />\r\n          <IconButton\r\n          onClick={() => launchModal('Edit', task.id)} \r\n          size='small'\r\n          >\r\n          <MoreHoriz\r\n            className={classes.moveButtons}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Task)","import React, { Component } from 'react';\r\nimport Task from './Task';\r\n\r\nexport default class TaskGroup extends Component {\r\n  render() {\r\n\r\n    const {\r\n      header,\r\n      tasks,\r\n      currentSort,\r\n      completeTask,\r\n      edit,\r\n      launchModal,\r\n      getKeyName,\r\n      filterOption\r\n    } = this.props;\r\n\r\n    const lowercurrentSort = getKeyName(currentSort);\r\n    let groupTasks = [];\r\n\r\n    if (filterOption === 'Active') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.isActive === true ))\r\n    } else if(filterOption === 'Inactive') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.isActive === false ))\r\n    } else {\r\n      groupTasks = tasks.filter((task) => task[lowercurrentSort] === header)\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {groupTasks.length !== 0 &&\r\n        <h2>{header}</h2>\r\n        }\r\n        {groupTasks.map ((task, i) => (\r\n          <Task\r\n          task={task}\r\n          key={i}\r\n          completeTask={completeTask}\r\n          edit={edit}\r\n          launchModal={launchModal}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = {\r\n  fieldStyle:{\r\n    width:'700px',\r\n    // margin: '5px',\r\n  },\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n    maxWidth: '90px'\r\n  },\r\n  fieldContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.5rem',\r\n  },\r\n  inputStyle: {\r\n    paddingLeft: '15px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px'\r\n  },\r\n  dateStyle: {\r\n    height: '40px',\r\n    padding: 0\r\n  },\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonStyle: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '5px'\r\n  },\r\n  headerName: {\r\n    color: '#aaa',\r\n    margin: '10px',\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px'\r\n  },\r\n  dialogContainer: {\r\n    display: 'flex'\r\n  }\r\n};\r\n\r\nexport default class DetailModal extends Component {\r\n\r\n  state = {\r\n    id: this.props.type === 'Edit'? this.props.taskDetails.id : '',\r\n    description:  this.props.type === 'Edit'? this.props.taskDetails.description : '',\r\n    category: this.props.type === 'Edit'? this.props.taskDetails.category : '',\r\n    status: this.props.type === 'Edit'? this.props.taskDetails.status : '',\r\n    dueDate: this.props.type === 'Edit'? this.props.taskDetails.dueDate : moment().format('MM/DD/YYYY'),\r\n    actual: this.props.type === 'Edit'? this.props.taskDetails.actual : 0,\r\n    goal: this.props.type === 'Edit'? this.props.taskDetails.goal : 0,\r\n    priority: this.props.type === 'Edit'? this.props.taskDetails.priority : '',\r\n    assigned: this.props.type === 'Edit'? this.props.taskDetails.assigned : '',\r\n    contact: this.props.type === 'Edit'? this.props.taskDetails.contact : '',\r\n    isActive: this.props.type === 'Edit'? this.props.taskDetails.isActive : true,\r\n    activeDate: this.props.type === 'Edit'? this.props.taskDetails.activeDate : moment().format('MM/DD/YYYY'),\r\n    workTime: this.props.type === 'Edit'? this.props.taskDetails.workTime : [],\r\n    tags: this.props.type === 'Edit'? this.props.taskDetails.tags : [],\r\n    completedDate: this.props.type === 'Edit'? this.props.taskDetails.completedDate : '',\r\n    dueWeek: this.props.type === 'Edit'? this.props.taskDetails.dueweek : moment().startOf('isoweek').format('MM/DD/YYYY'),\r\n    dueMonth: this.props.type === 'Edit'? this.props.taskDetails.dueMonth : moment().format('MMMM YYYY'),\r\n    notes: this.props.type === 'Edit'? this.props.taskDetails.notes : '',\r\n    type: this.props.type === 'Edit'? this.props.taskDetails.type : 'One-time',\r\n    recurDays: this.props.type === 'Edit'? this.props.taskDetails.recurDays : 0,\r\n    isUpdating: false,\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  dateChange = (e) => {\r\n    this.setState({\r\n      dueDate: moment(e).format('MM/DD/YYYY'),\r\n      dueWeek: moment(e).startOf('week').format('MM/DD/YYYY'),\r\n      dueMonth: moment(e).format('MMMM YYYY'),\r\n    })\r\n  }\r\n\r\n  activeDateChange = (e) => {\r\n    this.setState({\r\n      activeDate: moment(e).format('MM/DD/YYYY'),\r\n      isActive: moment().format('YYYY-MM-DD') >= moment(e).format('YYYY-MM-DD') ? true : this.state.isActive\r\n    })\r\n  }\r\n\r\n  onAutoChange = (e, newValue, fieldName) => {\r\n    this.setState({\r\n      [fieldName]: newValue\r\n    });\r\n  }\r\n\r\n  onStatusChange = (e, newValue, fieldName) => {\r\n    const {\r\n      type,\r\n      dueDate,\r\n      activeDate,\r\n      recurDays,\r\n      isUpdating\r\n    } = this.state\r\n    if (isUpdating === false) {\r\n      if (newValue === 'Completed') {\r\n        if (type === 'Recurring') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            status: '',\r\n            completedDate: '',\r\n            dueDate: moment(dueDate).add(recurDays, 'days').format('MM/DD/YYYYY'),\r\n            dueWeek: moment(dueDate).add(recurDays, 'days').startOf('week').format('MM/DD/YYYY'),\r\n            dueMonth: moment(dueDate).add(recurDays, 'days').format('MMMM YYYY'),\r\n            activeDate: moment(activeDate).add(recurDays, 'days'),\r\n            isActive: moment(activeDate).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD') ? true : false\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            })\r\n          });\r\n        } else if (type === 'One-time') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            completedDate: moment().format('MM/DD/YYYY'),\r\n            status: 'Completed',\r\n            isActive: false\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            })\r\n          })\r\n        }\r\n      } else {\r\n        this.setState({\r\n          [fieldName]: newValue,\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  onCheck = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    })\r\n  }\r\n\r\n  uuidv4 = () => {\r\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n  }\r\n\r\n  addTask = () => {\r\n    this.props.createTask({\r\n      id: this.uuidv4(),\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      actual: this.state.actual,\r\n      goal: this.state.goal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      isActive: this.state.isActive,\r\n      activeDate: this.state.activeDate,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDate: this.state.completedDate,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n    });\r\n    this.props.toggleModal();\r\n  }\r\n\r\n  saveCurrentTask = () => {\r\n    this.props.saveTask(this.state.id, {\r\n      id: this.state.id,\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      actual: this.state.actual,\r\n      goal: this.state.goal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      isActive: this.state.isActive,\r\n      activeDate: this.state.activeDate,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDate: this.state.completedDate,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n    });\r\n    this.props.toggleModal();\r\n  }\r\n\r\n  deleteCurrentTask = () => {\r\n    this.props.deleteTask(this.state.id);\r\n    this.props.toggleModal();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      toggleModal,\r\n      openModal,\r\n      type,\r\n      categories,\r\n      assignedUsers,\r\n      contactUsers,\r\n    } = this.props;\r\n\r\n    // console.log(this.props)\r\n    // console.log(this.state)\r\n\r\n    return (\r\n      <Dialog \r\n        onClose={() => toggleModal()} \r\n        open={openModal}\r\n        maxWidth='md'\r\n        fullWidth\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\t\r\n        >\r\n        <div\r\n          className={styles.dialogContainer}\r\n        >\r\n          <div style={styles.headerContainer}>\r\n            <div style={styles.headerName}>\r\n              <Typography variant=\"h5\">\r\n                  Task Management\r\n              </Typography>\r\n            </div>\r\n            <div style={styles.headerClose}>\r\n              <IconButton\r\n                onClick={() => toggleModal()}\r\n                size='small'\r\n                >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Description\r\n            </Typography>\r\n            <TextField \r\n              style={styles.fieldStyle}\r\n              name='description'\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                style: styles.inputStyle\r\n              }}\r\n              onChange={this.onChange}\r\n              value={this.state.description}\r\n              multiline\r\n            />\r\n          </div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Category\r\n            </Typography>\r\n            <Autocomplete\r\n              size='small'\r\n              style={styles.fieldStyle}\r\n              options={categories}\r\n              defaultValue={this.state.category}\r\n              getOptionLabel={(option) => typeof option === 'string' ? option : option.category}\r\n              renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n              freeSolo\r\n              inputValue={this.state.category}\r\n              onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'category')}\r\n              />\r\n          </ div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Type\r\n            </Typography>\r\n            <Autocomplete\r\n              options={['One-time','Recurring']}\r\n              defaultValue={this.state.type}\r\n              getOptionLabel={(option) => typeof option === 'string' ? option : option.type}\r\n              style={styles.fieldStyle}\r\n              size='small'\r\n              renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n              inputValue={this.state.type}\r\n              onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'type')}\r\n              />\r\n          </ div>\\\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Recurring Days\r\n            </Typography>\r\n            <TextField \r\n              style={styles.fieldStyle}\r\n              name='recurDays'\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                style: styles.inputStyle\r\n              }}\r\n              onChange={this.onChange}\r\n              value={this.state.recurDays}\r\n              multiline\r\n            />\r\n          </div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Status\r\n            </Typography>\r\n            <Autocomplete\r\n              options={['Not Started','In Progress','On Hold','Completed']}\r\n              defaultValue={this.state.status}\r\n              getOptionLabel={(option) => typeof option === 'string' ? option : option.status}\r\n              style={styles.fieldStyle}\r\n              size='small'\r\n              renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n              inputValue={this.state.status}\r\n              onInputChange={(e, newValue) => this.onStatusChange(e, newValue, 'status')}\r\n              />\r\n          </ div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Priority\r\n            </Typography>\r\n            <Autocomplete\r\n              options={['1','2','3','4','5']}\r\n              defaultValue={this.state.priority}\r\n              getOptionLabel={(option) => typeof option === 'string' ? option : option.priority}\r\n              style={styles.fieldStyle}\r\n              size='small'\r\n              renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n              inputValue={this.state.priority}\r\n              onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'priority')}\r\n              />\r\n          </ div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Due Date\r\n            </Typography>\r\n            <div style={styles.dateContainer}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  autoOk={true}\r\n                  variant=\"inline\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  value={this.state.dueDate}\r\n                  onChange={(e) => this.dateChange(e)}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                  inputVariant=\"outlined\"\r\n                  InputProps={{\r\n                    style: styles.dateStyle\r\n                  }}\r\n                  />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          </div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Active Date\r\n            </Typography>\r\n            <div style={styles.dateContainer}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  autoOk={true}\r\n                  variant=\"inline\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  value={this.state.activeDate}\r\n                  onChange={(e) => this.activeDateChange(e)}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                  inputVariant=\"outlined\"\r\n                  InputProps={{\r\n                    style: styles.dateStyle\r\n                  }}\r\n                  />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          </div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Actual\r\n            </Typography>\r\n            <TextField \r\n              style={styles.fieldStyle}\r\n              name='actual'\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                style: styles.inputStyle\r\n              }}\r\n              onChange={this.onChange}\r\n              value={this.state.actual}\r\n              multiline\r\n            />\r\n          </div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Goal\r\n            </Typography>\r\n            <TextField \r\n              style={styles.fieldStyle}\r\n              name='goal'\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                style: styles.inputStyle\r\n              }}\r\n              onChange={this.onChange}\r\n              value={this.state.goal}\r\n              multiline\r\n            />\r\n          </div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Assigned\r\n            </Typography>\r\n            <Autocomplete\r\n              options={assignedUsers}\r\n              defaultValue={this.state.assigned}\r\n              getOptionLabel={(option) => typeof option === 'string' ? option : option.assigned}\r\n              style={styles.fieldStyle}\r\n              size='small'\r\n              renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n              freeSolo\r\n              inputValue={this.state.assigned}\r\n              onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'assigned')}\r\n              />\r\n          </ div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Contact\r\n            </Typography>\r\n            <Autocomplete\r\n              options={contactUsers}\r\n              defaultValue={this.state.contact}\r\n              getOptionLabel={(option) => typeof option === 'string' ? option : option.contact}\r\n              style={styles.fieldStyle}\r\n              size='small'\r\n              renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n              freeSolo\r\n              inputValue={this.state.contact}\r\n              onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'contact')}\r\n              />\r\n          </div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Active\r\n            </Typography>\r\n            <Checkbox\r\n              checked={this.state.isActive}\r\n              name='isActive'\r\n              onChange={this.onCheck}\r\n              color=\"primary\"\r\n              size='small'\r\n            />\r\n          </div>\r\n          <div style={styles.fieldContainer}>\r\n            <Typography style={styles.fieldLabel}>\r\n              Notes\r\n            </Typography>\r\n            <TextField \r\n              style={styles.fieldStyle}\r\n              name='notes'\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                style: styles.inputStyle\r\n              }}\r\n              onChange={this.onChange}\r\n              value={this.state.notes}\r\n              multiline\r\n            />\r\n          </div>\r\n          <div style={styles.buttonContainer}>\r\n            {type === 'Add' &&\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.addTask}\r\n                  >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            }\r\n            {type === 'Edit' &&\r\n              <React.Fragment>\r\n                <div style={styles.buttonStyle}>\r\n                  <Button \r\n                    style={styles.buttonStyle}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.saveCurrentTask}\r\n                    >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n                <div style={styles.buttonStyle}>\r\n                  <Button \r\n                    style={styles.buttonStyle}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.deleteCurrentTask}\r\n                    >\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            }\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collections from '@material-ui/icons/Collections';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class SortAlt extends Component {\r\n\r\n  state = {\r\n    sortOptions: [\r\n      'Category',\r\n      'Status',\r\n      'Priority',\r\n      'Assigned',\r\n      'Contact',\r\n      'Due Date',\r\n      'Due Week',\r\n      'Due Month',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (sortOption) => {\r\n    this.props.handleSortChange(sortOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <Collections />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.sortOptions.map((sortOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={sortOption}\r\n              onClick={() => this.handleClick(sortOption)}\r\n              >\r\n              {sortOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class ActiveFilter extends Component {\r\n\r\n  state = {\r\n    filterOptions: [\r\n      'Active',\r\n      'Inactive',\r\n      'Both',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleFilterChange(filterOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <FilterList />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.filterOptions.map((filterOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={filterOption}\r\n              onClick={() => this.handleClick(filterOption)}\r\n              >\r\n              {filterOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TaskGroup from './TaskGroup';\r\nimport DetailModal from './DetailModal';\r\nimport {tasks} from './TestTasks';\r\nimport SortAlt from './SortAlt';\r\nimport ActiveFilter from './ActiveFilter';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n  taskContainer: {\r\n    maxWidth: '700px',\r\n    marginBottom: '70px'\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n    margin: '5px',\r\n  },\r\n  addButton: {\r\n    margin: '5px',\r\n    alignContent: 'center',\r\n    fontSize: '17px',\r\n    color: 'white'\r\n  },\r\n  actionBar: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  state = {\r\n    tasks: [],\r\n    headers: [],\r\n    lastSaved: null,\r\n    isLoading: false,\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n    currentSort: 'Category',\r\n    trackerName: 'Test Title',\r\n    selectedTask: null,\r\n    openModal: false,\r\n    modalType: null,\r\n    categories: [],\r\n    assignedUsers: [],\r\n    contactUsers: [],\r\n    taskDetails: {},\r\n    filterOption: 'Active'\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getServerData();\r\n    // this.setState({\r\n    //   tasks: tasks\r\n    // })\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.state.tasks !== prevState.tasks) {\r\n      this.getSortHeaders(this.state.tasks, this.state.currentSort);\r\n      this.getUniqueValues(this.state.tasks, 'category', 'categories');\r\n      this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers');\r\n      this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers');\r\n    }\r\n  }\r\n\r\n  getServerData = () => {\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n\r\n    if(listId !== undefined && listId !== null){\r\n      this.setState({\r\n        isLoading: true\r\n      },() => {\r\n        axios\r\n        .get(`https://guarded-mesa-76047.herokuapp.com/api/lists/${listId}`)\r\n        .then(res => this.setState({\r\n          trackerName: res.data.listName,\r\n          tasks: res.data.list,\r\n          lastSaved: res.data.lastSaved,\r\n          isLoading: false\r\n        }))\r\n        .then(() => {\r\n          this.activateTasks()\r\n          this.getSortHeaders(this.state.tasks, this.state.currentSort)\r\n          this.getUniqueValues(this.state.tasks, 'category', 'categories')\r\n          this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers')\r\n          this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers')\r\n        })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  saveData = () => {\r\n    this.handleClose();\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n    const currentDT = new Date();\r\n\r\n    if(listId === null){\r\n      axios\r\n      .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n        list: this.state.tasks,\r\n        listName: this.state.trackerName,\r\n        lastSaved: new Date()\r\n      })\r\n      .then((res) => {\r\n        alert('New list created!')\r\n        return(res);\r\n      })\r\n      .then((res) => {\r\n        const newId = res.data._id;\r\n        const a = document.createElement(\"a\");\r\n        a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n        a.click();\r\n      })\r\n    } else {\r\n      axios\r\n      .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/update/${listId}`, {\r\n        list: this.state.tasks,\r\n        listName: this.state.trackerName,\r\n        lastSaved: currentDT\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          lastSaved: currentDT\r\n        })\r\n        alert('Data saved successfully!')\r\n      });\r\n    }\r\n  }\r\n\r\n  downloadFile = (content, fileName, contentType) => {\r\n    const a = document.createElement(\"a\");\r\n    const file = new Blob([content], { type: contentType });\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = fileName;\r\n    a.click();\r\n  }\r\n\r\n  exportJSON = () => {\r\n    this.handleClose();\r\n    this.downloadFile(JSON.stringify(this.state.tasks), \"data.json\", \"text/plain\");\r\n  }\r\n\r\n  getFile = (e) => {\r\n    this.handleClose();\r\n    let files = e.target.files;\r\n    let reader = new FileReader();\r\n    reader.readAsText(files[0]);\r\n\r\n    reader.onload = e => {\r\n      this.setState({\r\n        tasks: JSON.parse(e.target.result)\r\n      })\r\n    };\r\n  }\r\n\r\n  createNew = () => {\r\n    this.handleClose();\r\n\r\n    axios\r\n    .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n      list: [],\r\n      listName: this.state.trackerName,\r\n      lastSaved: new Date()\r\n    })\r\n    .then((res) => {\r\n      alert('New list created!')\r\n      return(res);\r\n    })\r\n    .then((res) => {\r\n      const newId = res.data._id;\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n      a.click();\r\n    });\r\n  }\r\n\r\n  createTask = (task) => {\r\n    this.setState({ tasks: [...this.state.tasks, task]}\r\n    )\r\n  }\r\n\r\n  launchModal = (type, id) => {\r\n    const taskDetail = this.state.tasks.filter((task) => task.id === id)\r\n    this.setState({\r\n      modalType: type,\r\n      taskDetails: taskDetail[0]\r\n    },\r\n    () => this.toggleModal());\r\n  }\r\n\r\n  completeTask = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n        if (task.type === 'Recurring') {\r\n          task.dueDate = moment(task.dueDate).add(task.recurDays, 'days').format('MM/DD/YYYY');\r\n          task.dueWeek = moment(task.dueDate).add(task.recurDays, 'days').startOf('week').format('MM/DD/YYYY');\r\n          task.dueMonth = moment(task.dueDate).add(task.recurDays, 'days').format('MMMM YYYY');\r\n          task.activeDate = moment(task.activeDate).add(task.recurDays, 'days');\r\n          task.isActive = moment(task.activeDate).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD') ? true : false\r\n        } else if (task.type === 'One-time') {\r\n          task.completedDate = moment().format('MM/DD/YYYY');\r\n          task.status = 'Completed';\r\n          task.isActive = false;\r\n        }\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    })\r\n  }\r\n\r\n  activateTasks = () => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (moment().format('YYYY-MM-DD') >= moment(task.activeDate).format('YYYY-MM-DD') && task.activeDate !== '') {\r\n        task.isActive = true;\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    })\r\n  }\r\n\r\n  saveTask = (id, task) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState({ tasks: [...newTasks, task]})\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState({\r\n      tasks: newTasks,\r\n    })\r\n  }\r\n\r\n  getSortHeaders = (data, keyName) => {\r\n    const lowerKeyName = this.getKeyName(keyName)\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[lowerKeyName] );\r\n      if(i <= -1){\r\n        resArr.push(item[lowerKeyName]);\r\n      }\r\n      return null;\r\n    });\r\n    resArr.sort();\r\n    this.setState({\r\n      headers: resArr,\r\n      currentSort: keyName,\r\n    })\r\n  }\r\n\r\n  getKeyName = (sortName) => {\r\n    let keyName = '';\r\n    switch (sortName) {\r\n      case 'Category':\r\n        keyName = \"category\";\r\n        break;\r\n      case 'Status':\r\n        keyName = \"status\";\r\n        break;\r\n      case 'Priority':\r\n        keyName = \"priority\";\r\n        break;\r\n      case 'Assigned':\r\n        keyName = \"assigned\";\r\n        break;\r\n      case 'Contact':\r\n        keyName = \"contact\";\r\n        break;\r\n      case 'Due Date':\r\n        keyName = \"dueDate\";\r\n        break;\r\n      case 'Due Week':\r\n        keyName = \"dueWeek\";\r\n        break;\r\n      case 'Due Month':\r\n        keyName = \"dueMonth\";\r\n        break;\r\n      default:\r\n        keyName = \"\";\r\n    }\r\n    return keyName;\r\n  }\r\n\r\n  getUniqueValues = (data, fieldName, arrayName) => {\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[fieldName] );\r\n      if(i <= -1){\r\n        resArr.push(item[fieldName]);\r\n      }\r\n      return null;\r\n    });\r\n    this.setState({\r\n      [arrayName]: resArr\r\n    })\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleTitleChange = (e) => {\r\n    this.setState({\r\n      trackerName: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSwitchChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.checked\r\n    })\r\n  }\r\n\r\n  handleSortChange = (sortOption) => {\r\n    this.getSortHeaders(this.state.tasks, sortOption)\r\n  };\r\n\r\n  handleFilterChange = (filterOption) => {\r\n    this.setState({\r\n      filterOption\r\n    })\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      openModal: !this.state.openModal,\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      classes\r\n    } = this.props;\r\n\r\n    // console.log('Main State:', this.state);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar \r\n          position=\"fixed\" \r\n          color=\"primary\"\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={this.handleMenu}\r\n                >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={this.state.anchorEl}\r\n                  getContentAnchorEl={null}\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  open={this.state.setAnchorEl}\r\n                  onClose={this.handleClose}\r\n                >\r\n                  <input \r\n                    type=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    name=\"file\" \r\n                    onChange={this.getFile}\r\n                    accept=\".json\"\r\n                    />\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <MenuItem onClick={() => this.getFile()}>Import JSON</MenuItem>\r\n                  </label>\r\n                  <MenuItem onClick={() => this.exportJSON()}>Export Data</MenuItem>\r\n                  <MenuItem onClick={() => this.saveData()}>Save Data</MenuItem>\r\n                  <MenuItem onClick={() => this.createNew()}>Create New</MenuItem>\r\n                </Menu>\r\n              <Typography variant=\"h6\">\r\n                  Task Tracker\r\n              </Typography>\r\n              <div className={classes.grow} />\r\n              <div className={classes.addButton}>\r\n                <SortAlt\r\n                  handleSortChange={this.handleSortChange}\r\n                />\r\n              </div>\r\n              <div className={classes.addButton}>\r\n                <ActiveFilter\r\n                  handleFilterChange={this.handleFilterChange}\r\n                />\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Toolbar />\r\n          <div\r\n            style={{\r\n              fontStyle:'italic',\r\n              color:'#bbb',\r\n            }}>\r\n              {this.state.lastSaved === null ? 'Not Saved' : 'Last Saved: ' + this.state.lastSaved}\r\n          </div>\r\n          <TextField\r\n            InputProps={{\r\n              disableUnderline: true,\r\n              style: {\r\n                display: 'block',\r\n                fontSize: '2em',\r\n                marginTop: '0.3em',\r\n                marginBottom: '0.3em',\r\n                // padding: 0\r\n              },\r\n            }}\r\n            value={this.state.trackerName}\r\n            onChange={this.handleTitleChange}\r\n          />\r\n          <Divider />\r\n          <div className={classes.taskContainer}>\r\n            {this.state.headers.map ((header, i) => (\r\n              <TaskGroup\r\n                tasks={this.state.tasks}\r\n                header={header}\r\n                currentSort={this.state.currentSort}\r\n                key={i}\r\n                completeTask={this.completeTask}\r\n                launchModal={this.launchModal}\r\n                getKeyName={this.getKeyName}\r\n                filterOption={this.state.filterOption}\r\n                />\r\n            ))}\r\n          </div>\r\n          {this.state.openModal === true &&\r\n            <DetailModal\r\n              toggleModal={this.toggleModal}\r\n              openModal={this.state.openModal}\r\n              type={this.state.modalType}\r\n              categories={this.state.categories}\r\n              assignedUsers={this.state.assignedUsers}\r\n              contactUsers={this.state.contactUsers}\r\n              createTask={this.createTask}\r\n              taskDetails={this.state.taskDetails}\r\n              saveTask={this.saveTask}\r\n              deleteTask={this.deleteTask}\r\n            />\r\n          }\r\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Fab \r\n            color=\"secondary\" \r\n            aria-label=\"add\" \r\n            className={classes.fabButton}\r\n            onClick={() => this.launchModal('Add')}\r\n            >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Main)","import React from 'react';\nimport Main from './components/Main';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { blue } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  },\n\n  typography: {\n\n  },\n  overrides: {\n\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}