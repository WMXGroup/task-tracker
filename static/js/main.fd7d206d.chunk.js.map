{"version":3,"sources":["components/ActionMenu.js","components/Task.js","components/TaskGroup.js","components/TaskDetails.js","components/CompletedDetail.js","components/TestTasks.js","components/SortAlt.js","components/RelatedLists.js","components/ActiveFilter.js","components/CategoryFilter.js","components/Report.js","components/AddRelatedList.js","components/Main.js","App.js","index.js"],"names":["ActionMenu","state","anchorEl","setAnchorEl","handleMenu","event","setState","currentTarget","handleClose","handleClick","filterOption","props","handleFilterChange","this","ignoreTask","makeCurrent","skipOccurence","snoozeWeek","Fragment","IconButton","size","onClick","Menu","id","getContentAnchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Component","Task","showDetails","classes","task","completeTask","launchDetails","className","taskContainer","key","status","Checkbox","checked","checkbox","onChange","color","TextField","taskStyle","style","borderColor","dueDate","disabled","InputProps","disableUnderline","paddingLeft","blackColor","value","description","multiline","moveButtons","withStyles","theme","border","borderRadius","width","marginTop","display","TaskGroup","header","tasks","currentSort","getKeyName","categoryFilter","lowercurrentSort","groupTasks","filter","isActive","sort","a","b","Date","startTime","includes","category","length","map","i","styles","fieldStyle","fieldLabel","alignContent","minWidth","maxWidth","fieldContainer","alignItems","margin","inputStyle","paddingTop","paddingBottom","dateStyle","height","padding","dateContainer","buttonContainer","justifyContent","buttonStyle","headerName","headerClose","headerContainer","dialogContainer","marginBottom","paperContainer","overflow","DetailModal","type","taskDetails","uuidv4","subCategory","moment","format","hours","weeklyGoal","priority","assigned","contact","activeDate","workTime","tags","completedDates","dueWeek","dueweek","startOf","dueMonth","notes","recurDays","isUpdating","points","e","target","name","sortCompleted","newCompleted","completedDate","console","log","dateChange","activeDateChange","startTimeChange","onAutoChange","newValue","fieldName","onStatusChange","curDueDate","undefined","curRecurDays","curActiveDate","newActiveDate","add","completedId","saveCurrentTask","onCheck","addTask","createTask","toggleDisplay","saveTask","deleteCurrentTask","deleteTask","handleTimeChange","handleDeleteCompleted","item","window","scrollTo","categories","subcategories","assignedUsers","contactUsers","Typography","variant","Autocomplete","options","defaultValue","getOptionLabel","option","renderInput","params","freeSolo","inputValue","onInputChange","utils","DateFnsUtils","disableToolbar","autoOk","toISOString","KeyboardButtonProps","inputVariant","helperText","error","placeholder","mask","date","Paper","List","ListItem","button","launchEditCompleted","ListItemSecondaryAction","edge","aria-label","Button","launchNewCompleted","CompletedDetail","completedDetails","Math","random","toString","substring","now","addCompleted","saveCompleted","startTimeValue","SortAlt","sortOptions","sortOption","handleSortChange","selected","RelatedLists","changeList","relatedLists","ActiveFilter","filterOptions","CategoryFilter","handleCategoryFilterChange","nextProps","prevProps","Report","categoryReport","updateReportWeek","reportWeek","reportContainer","countContainer","totalPoints","weeklyPoints","toFixed","flexWrap","AddRelatedList","listId","handleSave","addListValue","Main","headers","lastSaved","isLoading","trackerName","selectedTask","detailType","completedForm","debugMode","componentDidMount","updateData","getServerData","componentDidUpdate","prevState","getSortHeaders","getUniqueValues","data","newCompletedDates","taskDate","hasOwnProperty","push","search","location","URLSearchParams","get","axios","then","res","listName","list","activateTasks","document","createElement","href","click","saveData","currentDT","post","alert","newId","_id","downloadFile","content","fileName","contentType","file","Blob","URL","createObjectURL","download","exportJSON","JSON","stringify","getFile","files","reader","FileReader","readAsText","onload","parse","result","createNew","taskDetail","launchNewTask","newTasks","makeAllActiveCurrent","completedTasks","keyName","lowerKeyName","resArr","findIndex","x","startTimeNoNulls","startTimeDay","startTimeNight","sortName","arrayName","handleTitleChange","newCategoryFilter","displayName","calculatePoints","pointsArray","j","parseInt","k","newPoints","direction","subtract","launchReport","launchAddList","curTaskDetails","newTaskDetails","completed","AppBar","position","Toolbar","accept","htmlFor","grow","addButton","fontStyle","fontSize","Divider","appBar","Fab","fabButton","formControl","actionBar","top","bottom","flexGrow","zIndex","left","right","createMuiTheme","palette","primary","main","teal","secondary","indigo","typography","overrides","MuiAutocomplete","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd7d206d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SnoozeIcon from '@material-ui/icons/Snooze';\r\n\r\nexport default class ActionMenu extends Component {\r\n\r\n  state = {\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleFilterChange(filterOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      ignoreTask,\r\n      makeCurrent,\r\n      skipOccurence,\r\n      snoozeWeek\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          size='small'\r\n          onClick={this.handleMenu}\r\n          >\r\n          <SnoozeIcon />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          <MenuItem\r\n            onClick={ignoreTask}\r\n            >\r\n            Snooze to Next Day\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={snoozeWeek}\r\n            >\r\n            Snooze to Next Week\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={makeCurrent}\r\n            >\r\n            Make Current\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={skipOccurence}\r\n            >\r\n            Skip Occurence\r\n          </MenuItem>\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ActionMenu from './ActionMenu';\r\n\r\nconst styles = (theme) => ({\r\n  taskStyle:{\r\n    border: '1px solid',\r\n    borderRadius: '25px',\r\n    width:'700px',\r\n    marginTop: '5px',\r\n  },\r\n  checkbox:{\r\n    // height: 0,\r\n    width: '5px',\r\n  },\r\n  taskContainer: {\r\n    display:'flex',\r\n  },\r\n  blackColor: {\r\n    color: 'black'\r\n  }\r\n});\r\n\r\nclass Task extends Component {\r\n\r\n  state = {\r\n    showDetails: false,\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      task,\r\n      completeTask,\r\n      ignoreTask,\r\n      makeCurrent,\r\n      snoozeWeek,\r\n      skipOccurence,\r\n      launchDetails\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={classes.taskContainer} key={task.id}>\r\n        {task.status !== 'Completed' &&\r\n          <Checkbox\r\n            checked={task.status === 'Completed' ? true : false}\r\n            className={classes.checkbox}\r\n            onChange={() => completeTask(task.id)}\r\n            color=\"primary\"\r\n            size='small'\r\n            />\r\n        }\r\n        <ActionMenu \r\n          snoozeWeek={() => snoozeWeek(task.id)}\r\n          skipOccurence={() => skipOccurence(task.id)}\r\n          ignoreTask={() => ignoreTask(task.id)}\r\n          makeCurrent={() => makeCurrent(task.id)}\r\n        />\r\n        <TextField\r\n          className={classes.taskStyle}\r\n          style={{\r\n            borderColor: this.props.task.dueDate === 'Invalid date' ? 'red' : '#ccc',\r\n          }}\r\n          disabled\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              paddingLeft: '5px',\r\n            },\r\n            classes:{\r\n              disabled: classes.blackColor\r\n            },\r\n          }}\r\n          value={task.description}\r\n          multiline\r\n        />\r\n        <IconButton\r\n        onClick={() => launchDetails('Edit', task.id)} \r\n        size='small'\r\n        >\r\n          <EditIcon\r\n            className={classes.moveButtons}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Task)","import React, { Component } from 'react';\r\nimport Task from './Task';\r\n\r\nexport default class TaskGroup extends Component {\r\n  render() {\r\n\r\n    const {\r\n      header,\r\n      tasks,\r\n      currentSort,\r\n      completeTask,\r\n      ignoreTask,\r\n      makeCurrent,\r\n      snoozeWeek,\r\n      skipOccurence,\r\n      launchDetails,\r\n      getKeyName,\r\n      filterOption,\r\n      categoryFilter,\r\n    } = this.props;\r\n\r\n    const lowercurrentSort = getKeyName(currentSort);\r\n    let groupTasks = [];\r\n\r\n    if (filterOption === 'Active') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.isActive === true ))\r\n    } else if(filterOption === 'Inactive') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.isActive === false && task.status !== 'Completed' ))\r\n    }  else if(filterOption === 'Completed') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.status === 'Completed' ))\r\n    }  else if(filterOption === 'Incomplete') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.status !== 'Completed' ))\r\n    } else {\r\n      groupTasks = tasks.filter((task) => task[lowercurrentSort] === header)\r\n    }\r\n\r\n    // groupTasks.sort((a,b) => (a.priority > b.priority) ? 1 : -1);\r\n\r\n    groupTasks.sort((a,b) => (new Date('1970/01/01 ' + a.startTime) - new Date('1970/01/01 ' + b.startTime)));\r\n\r\n    groupTasks = groupTasks.filter((task) => (categoryFilter.includes(task.category) || categoryFilter.includes('All')))\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {groupTasks.length !== 0 &&\r\n        <h2>{header}</h2>\r\n        }\r\n        {groupTasks.map ((task, i) => (\r\n          <Task\r\n          task={task}\r\n          key={i}\r\n          snoozeWeek={snoozeWeek}\r\n          skipOccurence={skipOccurence}\r\n          completeTask={completeTask}\r\n          ignoreTask={ignoreTask}\r\n          makeCurrent={makeCurrent}\r\n          launchDetails={launchDetails}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nconst styles = {\r\n  fieldStyle:{\r\n    width:'700px',\r\n    // margin: '5px',\r\n  },\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n    maxWidth: '90px'\r\n  },\r\n  fieldContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.5rem',\r\n  },\r\n  inputStyle: {\r\n    paddingLeft: '15px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px'\r\n  },\r\n  dateStyle: {\r\n    height: '40px',\r\n    padding: 0\r\n  },\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonStyle: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '5px'\r\n  },\r\n  headerName: {\r\n    color: '#aaa',\r\n    margin: '10px',\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px'\r\n  },\r\n  dialogContainer: {\r\n    marginBottom: '70px'\r\n  },\r\n  paperContainer: {\r\n    height: '80px',\r\n    padding: 0,\r\n    width: 400,\r\n    overflow: 'auto'\r\n  },\r\n};\r\n\r\nexport default class DetailModal extends Component {\r\n\r\n  state = {\r\n    id: this.props.type === 'Edit'? this.props.taskDetails.id : this.props.uuidv4(),\r\n    description:  this.props.type === 'Edit'? this.props.taskDetails.description : '',\r\n    category: this.props.type === 'Edit'? this.props.taskDetails.category : '',\r\n    subCategory: this.props.type === 'Edit'? this.props.taskDetails.subCategory : '',\r\n    status: this.props.type === 'Edit'? this.props.taskDetails.status : '',\r\n    dueDate: this.props.type === 'Edit'? this.props.taskDetails.dueDate : moment().format('YYYY-MM-DD'),\r\n    hours: this.props.type === 'Edit'? this.props.taskDetails.hours : 0,\r\n    weeklyGoal: this.props.type === 'Edit'? this.props.taskDetails.weeklyGoal : 0,\r\n    priority: this.props.type === 'Edit'? this.props.taskDetails.priority : '',\r\n    assigned: this.props.type === 'Edit'? this.props.taskDetails.assigned : '',\r\n    contact: this.props.type === 'Edit'? this.props.taskDetails.contact : '',\r\n    isActive: this.props.type === 'Edit'? this.props.taskDetails.isActive : true,\r\n    activeDate: this.props.type === 'Edit'? this.props.taskDetails.activeDate : moment().format('YYYY-MM-DD'),\r\n    workTime: this.props.type === 'Edit'? this.props.taskDetails.workTime : [],\r\n    tags: this.props.type === 'Edit'? this.props.taskDetails.tags : [],\r\n    completedDates: this.props.type === 'Edit'? this.props.taskDetails.completedDates : [],\r\n    dueWeek: this.props.type === 'Edit'? this.props.taskDetails.dueweek : moment().startOf('isoweek').format('YYYY-MM-DD'),\r\n    dueMonth: this.props.type === 'Edit'? this.props.taskDetails.dueMonth : moment().format('YYYY-MM'),\r\n    notes: this.props.type === 'Edit'? this.props.taskDetails.notes : '',\r\n    type: this.props.type === 'Edit'? this.props.taskDetails.type : 'One-time',\r\n    recurDays: this.props.type === 'Edit'? this.props.taskDetails.recurDays : 0,\r\n    isUpdating: false,\r\n    startTime: this.props.type === 'Edit'? this.props.taskDetails.startTime : '12:00 AM',\r\n    points: this.props.type === 'Edit'? this.props.taskDetails.points : '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    this.sortCompleted();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sortCompleted = () => {\r\n    const newCompleted = this.state.completedDates.sort((a, b) => new Date(b.completedDate) - new Date(a.completedDate));\r\n    console.log('Test', newCompleted);\r\n    this.setState({\r\n      completedDates: newCompleted,\r\n    })\r\n\r\n  }\r\n\r\n  dateChange = (e) => {\r\n    this.setState({\r\n      dueDate: moment(e).format('YYYY-MM-DD'),\r\n      dueWeek: moment(e).startOf('week').format('YYYY-MM-DD'),\r\n      dueMonth: moment(e).format('YYYY-MM'),\r\n    })\r\n  }\r\n\r\n  activeDateChange = (e) => {\r\n    this.setState({\r\n      activeDate: moment(e).format('YYYY-MM-DD'),\r\n      isActive: e = '' ? this.state.isActive : moment().format('YYYY-MM-DD') >= moment(e).format('YYYY-MM-DD') ? true : moment(e).format('YYYY-MM-DD')  > moment().format('YYYY-MM-DD') ? false : this.state.isActive\r\n    })\r\n  }\r\n\r\n  startTimeChange = (e) => {\r\n    this.setState(({\r\n      startTime: moment(e)\r\n    }))\r\n  }\r\n\r\n  onAutoChange = (e, newValue, fieldName) => {\r\n    this.setState({\r\n      [fieldName]: newValue\r\n    });\r\n  }\r\n\r\n  onStatusChange = (e, newValue, fieldName) => {\r\n    const {\r\n      type,\r\n      dueDate,\r\n      activeDate,\r\n      recurDays,\r\n      isUpdating,\r\n      completedDates\r\n    } = this.state\r\n    if (isUpdating === false) {\r\n      if (newValue === 'Completed') {\r\n        let curDueDate = dueDate === undefined ? moment().format('YYYY-MM-DD') : dueDate;\r\n        let curRecurDays = recurDays === undefined ? 0 : recurDays;\r\n        let curActiveDate = activeDate === undefined ? moment().format('YYYY-MM-DD') : activeDate;\r\n        let newActiveDate = moment(curActiveDate).add(curRecurDays, 'days').format('YYYY-MM-DD');\r\n        if (type === 'Recurring') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            status: 'Not Started',\r\n            recurDays: curRecurDays,\r\n            dueDate: moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM-DD'),\r\n            dueWeek: moment(curDueDate).add(curRecurDays, 'days').startOf('week').format('YYYY-MM-DD'),\r\n            dueMonth: moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM'),\r\n            activeDate: newActiveDate,\r\n            isActive: moment(newActiveDate).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD') ? true : false,\r\n            completedDates: [...completedDates,\r\n              {\r\n              completedId: this.props.uuidv4(),\r\n              completedDate: moment(curDueDate).format('YYYY-MM-DD'),\r\n              hours: 0\r\n              }\r\n            ],\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            }, () => this.saveCurrentTask())\r\n          });\r\n        } else if (type === 'One-time') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            status: 'Completed',\r\n            dueDate: curDueDate,\r\n            dueWeek: moment(curDueDate).startOf('week').format('YYYY-MM-DD'),\r\n            dueMonth: moment(curDueDate).format('YYYY-MM'),\r\n            activeDate: curActiveDate,\r\n            isActive: false,\r\n            completedDates: [{\r\n              completedId: this.props.uuidv4(),\r\n              completedDate: moment(curDueDate).format('YYYY-MM-DD'),\r\n              hours: 0\r\n              }],\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            }, () => this.saveCurrentTask())\r\n          })\r\n        }\r\n      } else {\r\n        this.setState({\r\n          [fieldName]: newValue,\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  onCheck = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    })\r\n  }\r\n\r\n  addTask = () => {\r\n    this.props.createTask({\r\n      id: this.state.id,\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      subCategory: this.state.subCategory,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      hours: this.state.hours,\r\n      weeklyGoal: this.state.weeklyGoal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      isActive: this.state.isActive,\r\n      activeDate: this.state.activeDate,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDates: this.state.completedDates,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n      startTime: this.state.startTime,\r\n      points: this.state.points,\r\n    });\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  saveCurrentTask = () => {\r\n    this.props.saveTask(this.state.id, {\r\n      id: this.state.id,\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      subCategory: this.state.subCategory,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      hours: this.state.hours,\r\n      weeklyGoal: this.state.weeklyGoal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      isActive: this.state.isActive,\r\n      activeDate: this.state.activeDate,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDates: this.state.completedDates,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n      startTime: this.state.startTime,\r\n      points: this.state.points,\r\n    });\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  deleteCurrentTask = () => {\r\n    this.props.deleteTask(this.state.id);\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  // handleDeleteDate = (value) => {\r\n  //   const newDates = this.state.completedDates.filter((date) => date !== value)\r\n  //   this.setState({\r\n  //     completedDates: newDates,\r\n  //   });\r\n  // }\r\n\r\n  handleTimeChange = (value) => {\r\n    this.setState({\r\n      startTime: moment(value).format('hh:mm A'),\r\n    })\r\n  };\r\n\r\n  handleDeleteCompleted = (id) => {\r\n    const newCompleted = this.state.completedDates.filter((item) => item.completedId !== id)\r\n    this.setState({\r\n      completedDates: newCompleted,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      type,\r\n      categories,\r\n      subcategories,\r\n      assignedUsers,\r\n      contactUsers,\r\n      toggleDisplay\r\n    } = this.props;\r\n\r\n    return (\r\n      <div style={styles.dialogContainer}>\r\n        <div style={styles.headerContainer}> \r\n          <div style={styles.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Task Management\r\n            </Typography>\r\n          </div>\r\n          <div style={styles.headerClose}>\r\n            <IconButton\r\n              onClick={() => toggleDisplay('Tasks')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Description\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='description'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.description}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Category\r\n          </Typography>\r\n          <Autocomplete\r\n            size='small'\r\n            style={styles.fieldStyle}\r\n            options={categories}\r\n            defaultValue={this.state.category}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.category}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.category}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'category')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Sub Category\r\n          </Typography>\r\n          <Autocomplete\r\n            size='small'\r\n            style={styles.fieldStyle}\r\n            options={subcategories}\r\n            defaultValue={this.state.subCategory}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.subCategory}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.subCategory}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'subCategory')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Type\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['One-time','Recurring']}\r\n            defaultValue={this.state.type}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.type}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.type}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'type')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Recurring Days\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='recurDays'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.recurDays}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Status\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['Not Started','In Progress','On Hold','Completed']}\r\n            defaultValue={this.state.status}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.status}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.status}\r\n            onInputChange={(e, newValue) => this.onStatusChange(e, newValue, 'status')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Priority\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='priority'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.priority}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Due Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"yyyy-MM-dd\"\r\n                value={moment(this.state.dueDate).toISOString()}\r\n                onChange={(e) => this.dateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Active Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"yyyy-MM-dd\"\r\n                value={moment(this.state.activeDate).toISOString()}\r\n                onChange={(e) => this.activeDateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Start Time\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardTimePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                helperText={''}\r\n                error={false}\r\n                placeholder=\"12:00 AM\"\r\n                mask=\"__:__ _M\"\r\n                value={moment('01/01/2000' + ' ' + this.state.startTime)}\r\n                onChange={date => this.handleTimeChange(date)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change time',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Hours\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='hours'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.hours}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Weekly Goal\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='weeklyGoal'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.weeklyGoal}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Points\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='points'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.points}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Assigned\r\n          </Typography>\r\n          <Autocomplete\r\n            options={assignedUsers}\r\n            defaultValue={this.state.assigned}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.assigned}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.assigned}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'assigned')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Contact\r\n          </Typography>\r\n          <Autocomplete\r\n            options={contactUsers}\r\n            defaultValue={this.state.contact}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.contact}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.contact}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'contact')}\r\n            />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Active\r\n          </Typography>\r\n          <Checkbox\r\n            checked={this.state.isActive}\r\n            name='isActive'\r\n            onChange={this.onCheck}\r\n            color=\"primary\"\r\n            size='small'\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Notes\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='notes'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.notes}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Completed Dates\r\n          </Typography>\r\n          <Paper \r\n            variant=\"outlined\" \r\n            style={styles.paperContainer}>\r\n            <List>\r\n              {\r\n                this.state.completedDates.map((date) => (\r\n                  <ListItem \r\n                  button\r\n                  onClick={() => this.props.launchEditCompleted(this.state, date)}\r\n                  >\r\n                    Date: {date.completedDate}, Hours: {date.hours}\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton \r\n                        edge=\"end\" \r\n                        aria-label=\"delete\"\r\n                        onClick={() => this.handleDeleteCompleted(date.completedId)}>\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))\r\n              }\r\n            </List>\r\n          </Paper>\r\n          <div style={styles.buttonStyle}>\r\n              <Button \r\n                style={styles.buttonStyle}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => this.props.launchNewCompleted(this.state)}\r\n                >\r\n                +\r\n              </Button>\r\n            </div>\r\n        </div>\r\n        <div style={styles.buttonContainer}>\r\n          {type === 'Add' &&\r\n            <div style={styles.buttonStyle}>\r\n              <Button \r\n                style={styles.buttonStyle}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.addTask}\r\n                >\r\n                Add\r\n              </Button>\r\n            </div>\r\n          }\r\n          {type === 'Edit' &&\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.saveCurrentTask}\r\n                  >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.deleteCurrentTask}\r\n                  >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport moment from 'moment';\r\n\r\nconst styles = {\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n    maxWidth: '90px'\r\n  },\r\n  fieldContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.5rem',\r\n  },\r\n  inputStyle: {\r\n    paddingLeft: '15px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px'\r\n  },\r\n  dateStyle: {\r\n    height: '40px',\r\n    padding: 0\r\n  },\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignContent: 'left',\r\n    alignItems: 'left',\r\n    justifyContent: 'left',\r\n  },\r\n  buttonStyle: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '5px'\r\n  },\r\n  headerName: {\r\n    color: '#aaa',\r\n    margin: '10px',\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px'\r\n  },\r\n  dialogContainer: {\r\n    marginBottom: '70px'\r\n  },\r\n};\r\n\r\nexport default class CompletedDetail extends Component {\r\n\r\n  state = {\r\n    completedId: this.props.type === 'Edit'? this.props.completedDetails.completedId : '',\r\n    completedDate: this.props.type === 'Edit'? this.props.completedDetails.completedDate : '',\r\n    hours:  this.props.type === 'Edit'? this.props.completedDetails.hours : '',\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  uuidv4 = () => {\r\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n  }\r\n\r\n  dateChange = (e) => {\r\n    this.setState({\r\n      completedDate: moment(e).format('YYYY-MM-DD'),\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={styles.dialogContainer}>\r\n        <div style={styles.headerContainer}> \r\n          <div style={styles.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Completed Date\r\n            </Typography>\r\n          </div>\r\n          <div style={styles.headerClose}>\r\n            <IconButton\r\n              onClick={() => this.props.toggleDisplay('Details')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Completed Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"yyyy-MM-dd\"\r\n                value={moment(this.state.completedDate).toISOString()}\r\n                onChange={(e) => this.dateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'completed date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Hours\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='hours'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.hours}\r\n            multiline\r\n          />\r\n        </div>\r\n        {this.props.type === \"Add\" && \r\n          <div style={styles.buttonContainer}>\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => this.props.addCompleted({\r\n                    completedId: this.uuidv4(),\r\n                    completedDate: this.state.completedDate,\r\n                    hours: this.state.hours,\r\n                  })}\r\n                  >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          </div>\r\n        }\r\n        {this.props.type === \"Edit\" && \r\n          <div style={styles.buttonContainer}>\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => this.props.saveCompleted(this.state.completedId, {\r\n                    completedId: this.state.completedId,\r\n                    completedDate: this.state.completedDate,\r\n                    hours: this.state.hours,\r\n                  })}\r\n                  >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export const tasks = [\r\n  {\r\n    id: 1,\r\n    description: 'Fix the door',\r\n    category:'House',\r\n    subCategory: 'Improvements',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 0,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '2021-08-01',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n    startTime: \"08:00 AM\",\r\n    startTimeValue: 800,\r\n  },\r\n  {\r\n    id: 2,\r\n    description: 'Check Transactions',\r\n    category:'Finance',\r\n    subCategory: '',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 0,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '2021-08-01',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n    startTime: \"08:00 AM\",\r\n    startTimeValue: 800,\r\n  },\r\n  {\r\n    id: 3,\r\n    description: 'Review Task list',\r\n    category:'Work',\r\n    subCategory: '',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 3,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '2021-08-01',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n    startTime: \"08:00 AM\",\r\n    startTimeValue: 800,\r\n  },\r\n  {\r\n    id: 4,\r\n    description: 'Get a lower interest rate',\r\n    category:'Finance',\r\n    subCategory: '',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 3,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '2021-08-01',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n    startTime: \"08:30 PM\",\r\n    startTimeValue: 830,\r\n  },\r\n  {\r\n    id: 5,\r\n    description: 'Fix the front steps',\r\n    category:'House',\r\n    subCategory: 'Fixes',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 2,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '2021-08-01',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n    startTime: null,\r\n    startTimeValue: null,\r\n  },\r\n  {\r\n    id: 6,\r\n    description: 'Watch Star Wars',\r\n    category:'Fun',\r\n    subCategory: 'Movie',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 2,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '2021-08-01',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: ['05/01/2021', '06/01/2021'],\r\n    points: 0,\r\n    startTime: null,\r\n    startTimeValue: null,\r\n  },\r\n  {\r\n    id: 7,\r\n    description: 'Drink 8 cups of water',\r\n    category:'Health',\r\n    subCategory: 'Daily',\r\n    status: 'Started',\r\n    dueDate: '2021-08-08',\r\n    hours: 1,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '2021-08-08',\r\n    notes: '',\r\n    dueWeek: '2021-08-08',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: 1,\r\n    completedDates: [\r\n      {\r\n        completedDate: '2022-06-01',\r\n        hours: 1\r\n      },\r\n      {\r\n        completedDate: '2022-06-02',\r\n        hours: 1\r\n      },\r\n      {\r\n        completedDate: '2022-07-02',\r\n        hours: 1\r\n      },\r\n            {\r\n        completedDate: '2022-07-03',\r\n        hours: 1\r\n      }\r\n    ],\r\n    points: 1,\r\n    startTime: \"08:00 AM\",\r\n    startTimeValue: 800,\r\n  },\r\n  {\r\n    id: 8,\r\n    description: 'Exercise',\r\n    category:'Health',\r\n    subCategory: 'Daily',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 0,\r\n    weeklyGoal: 0,\r\n    priority: '2',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '2021-08-01',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: 1,\r\n    completedDates: [\r\n      {\r\n        completedDate: '2022-12-02',\r\n        hours: .5\r\n      },\r\n      {\r\n        completedDate: '2022-11-01',\r\n        hours: 1\r\n      },\r\n      {\r\n        completedDate: '2022-12-02',\r\n        hours: .5\r\n      }\r\n    ],\r\n    points: 1,\r\n    startTime: \"10:00 AM\",\r\n    startTimeValue: 1000,\r\n  },\r\n  {\r\n    id: 9,\r\n    description: 'Plan tommorows dinner',\r\n    category:'Health',\r\n    subCategory: 'Tasks',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 0,\r\n    weeklyGoal: 0,\r\n    priority: '3',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '2021-08-01',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: 1,\r\n    completedDates: [],\r\n    points: 1,\r\n    startTime: \"09:00 AM\",\r\n    startTimeValue: 900,\r\n  },\r\n  {\r\n    id: 10,\r\n    description: 'Go on a walk',\r\n    category:'Family',\r\n    subCategory: '',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 0,\r\n    weeklyGoal: 0,\r\n    priority: '3',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '2021-08-01',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: 1,\r\n    completedDates: [],\r\n    points: 1,\r\n    startTime: \"08:00 AM\",\r\n    startTimeValue: 800,\r\n  },\r\n]","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collections from '@material-ui/icons/Collections';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class SortAlt extends Component {\r\n\r\n  state = {\r\n    sortOptions: [\r\n      'Category',\r\n      'Sub Category',\r\n      'Status',\r\n      'Priority',\r\n      'Hours',\r\n      'Assigned',\r\n      'Contact',\r\n      'Start Time',\r\n      'Due Date',\r\n      'Due Week',\r\n      'Due Month',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (sortOption) => {\r\n    this.props.handleSortChange(sortOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <Collections />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.sortOptions.map((sortOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              selected={this.props.currentSort === sortOption}\r\n              value={sortOption}\r\n              onClick={() => this.handleClick(sortOption)}\r\n              >\r\n              {sortOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class RelatedLists extends Component {\r\n\r\n  state = {\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (option) => {\r\n    this.props.changeList(option);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <ListIcon />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.props.relatedLists.map((option, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={option}\r\n              onClick={() => this.handleClick(option)}\r\n              >\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class ActiveFilter extends Component {\r\n\r\n  state = {\r\n    filterOptions: [\r\n      'Active',\r\n      'Inactive',\r\n      'Completed',\r\n      'Incomplete',\r\n      'All',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleFilterChange(filterOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <FilterList />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.filterOptions.map((filterOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              selected={this.props.filterOption === filterOption}\r\n              value={filterOption}\r\n              onClick={() => this.handleClick(filterOption)}\r\n              >\r\n              {filterOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class CategoryFilter extends Component {\r\n\r\n  state = {\r\n    filterOptions: [],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, prevProps) {\r\n    this.setState({\r\n      filterOptions: [...nextProps.categories, 'All']\r\n    })\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleCategoryFilterChange(filterOption);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <CategoryIcon />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.filterOptions.map((filterOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              selected={this.props.categoryFilter.includes(filterOption)}\r\n              value={filterOption}\r\n              onClick={() => this.handleClick(filterOption)}\r\n              >\r\n              {filterOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  taskContainer: {\r\n    maxWidth: '700px',\r\n    marginBottom: '70px'\r\n  },\r\n  headerName: {\r\n    margin: '.1rem'\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa'\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px',\r\n  },\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n  },\r\n  fieldContainer: {\r\n    border: '1px solid #ccc',\r\n    margin: '5px',\r\n    padding: '5px',\r\n    minWidth: '200px',\r\n    maxWidth: '200px'\r\n  },\r\n  countContainer: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.1rem'\r\n  },\r\n  reportContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginBottom: '70px'\r\n  },\r\n  buttonStyle: {\r\n    margin: '5px',\r\n    padding: '5px',\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    padding: '5px',\r\n  },\r\n});\r\n\r\nclass Report extends Component {\r\n\r\n  state = {\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      categoryReport,\r\n      toggleDisplay,\r\n      updateReportWeek,\r\n      reportWeek,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.headerContainer}> \r\n          <div className={classes.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Weekly Report\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.headerClose}>\r\n            <IconButton\r\n              onClick={() => toggleDisplay('Tasks')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className={classes.headerContainer}> \r\n          <div className={classes.headerName}>\r\n              <Typography variant=\"h6\">\r\n                  {`Week of ${reportWeek}`}\r\n              </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.buttonContainer}>\r\n          <div className={classes.buttonStyle}>\r\n              <Button \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => updateReportWeek(1)}\r\n                >\r\n                +\r\n              </Button>\r\n            </div>\r\n            <div className={classes.buttonStyle}>\r\n              <Button \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => updateReportWeek(0)}\r\n                >\r\n                -\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        <div className={classes.reportContainer}>\r\n          {categoryReport.map ((item, i) => (\r\n            <div className={classes.fieldContainer}>\r\n              <div className={classes.headerName}>\r\n                <Typography variant='h4'>\r\n                  {item.category}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.countContainer}>\r\n                <Typography className={classes.fieldLabel}>\r\n                  {`Points : ${item.totalPoints}`}\r\n                </Typography>\r\n                <Typography className={classes.fieldLabel}>\r\n                  {`Total : ${item.weeklyPoints}`}\r\n                </Typography>\r\n                <Typography className={classes.fieldLabel}>\r\n                  {`Rating : ${item.weeklyPoints === 0 ? 0 : (item.totalPoints/item.weeklyPoints*100).toFixed(0)}%`}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Report)","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n    maxWidth: '90px'\r\n  },\r\n  fieldContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.5rem',\r\n  },\r\n  inputStyle: {\r\n    paddingLeft: '15px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px'\r\n  },\r\n  dateStyle: {\r\n    height: '40px',\r\n    padding: 0\r\n  },\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignContent: 'left',\r\n    alignItems: 'left',\r\n    justifyContent: 'left',\r\n  },\r\n  buttonStyle: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '5px'\r\n  },\r\n  headerName: {\r\n    color: '#aaa',\r\n    margin: '10px',\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px'\r\n  },\r\n  dialogContainer: {\r\n    marginBottom: '70px'\r\n  },\r\n};\r\n\r\nexport default class AddRelatedList extends Component {\r\n\r\n  state = {\r\n    listId: ''\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSave = () => {\r\n    this.props.addListValue(this.state.listId);\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={styles.dialogContainer}>\r\n        <div style={styles.headerContainer}> \r\n          <div style={styles.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Add Releated List\r\n            </Typography>\r\n          </div>\r\n          <div style={styles.headerClose}>\r\n            <IconButton\r\n              onClick={() => this.props.toggleDisplay('Details')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            List Id\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='listId'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.listId}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.buttonContainer}>\r\n          <React.Fragment>\r\n            <div style={styles.buttonStyle}>\r\n              <Button \r\n                style={styles.buttonStyle}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => this.handleSave()}\r\n                >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </React.Fragment>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TaskGroup from './TaskGroup';\r\nimport TaskDetails from './TaskDetails';\r\nimport CompletedDetail from './CompletedDetail';\r\nimport {tasks} from './TestTasks';\r\nimport SortAlt from './SortAlt';\r\nimport RelatedLists from './RelatedLists';\r\nimport ActiveFilter from './ActiveFilter';\r\nimport CategoryFilter from './CategoryFilter';\r\nimport Report from './Report';\r\nimport AddRelatedList from './AddRelatedList';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n  taskContainer: {\r\n    maxWidth: '700px',\r\n    marginBottom: '70px'\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n    margin: '5px',\r\n  },\r\n  addButton: {\r\n    margin: '5px',\r\n    alignContent: 'center',\r\n    fontSize: '17px',\r\n    color: 'white'\r\n  },\r\n  actionBar: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  state = {\r\n    tasks: [],\r\n    headers: [],\r\n    lastSaved: null,\r\n    isLoading: false,\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n    trackerName: '',\r\n    selectedTask: null,\r\n    detailType: null,\r\n    completedForm: null,\r\n    completedDetails: {},\r\n    categories: [],\r\n    subcategories: [],\r\n    assignedUsers: [],\r\n    contactUsers: [],\r\n    taskDetails: {},\r\n    currentSort: 'Due Date',\r\n    filterOption: 'Active',\r\n    categoryFilter: ['All'],\r\n    display: 'Tasks',\r\n    debugMode: true,\r\n    relatedLists: [],\r\n    categoryReport: [],\r\n    reportWeek: moment().startOf('week').format('YYYY-MM-DD'),\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log('componentDidMount');\r\n    if(this.state.debugMode === true){\r\n      this.setState({\r\n        tasks: this.updateData(tasks),\r\n      });\r\n    } else {\r\n      this.getServerData();\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    console.log('componentDidUpdate');\r\n    if (this.state.tasks !== prevState.tasks) {\r\n      this.getSortHeaders(this.state.tasks, this.state.currentSort);\r\n      this.getUniqueValues(this.state.tasks, 'category', 'categories');\r\n      this.getUniqueValues(this.state.tasks, 'subCategory', 'subcategories')\r\n      this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers');\r\n      this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers');\r\n    }\r\n  }\r\n\r\n  updateData = (data) => {\r\n    const newTasks = data.map((task) => {\r\n      const newCompletedDates = task.completedDates.map((taskDate) => {\r\n        if (taskDate.hasOwnProperty('completedDate')) {\r\n          return {\r\n            completedId: this.uuidv4(),\r\n            completedDate: taskDate.completedDate,\r\n            hours: taskDate.hours\r\n          }\r\n        } else {\r\n          return {\r\n            completedId: this.uuidv4(),\r\n            completedDate: moment(taskDate).format('YYYY-MM-DD'),\r\n            hours: 0\r\n          }\r\n        }\r\n      });\r\n      if (newCompletedDates.length === 0 && task.completedDate !== ''){\r\n        newCompletedDates.push({\r\n          completedDate: moment(task.completedDate).format('YYYY-MM-DD'),\r\n          hours: 0\r\n        })\r\n      }\r\n      task.completedDates = newCompletedDates;\r\n      delete task.log;\r\n      return task;\r\n    })\r\n    return newTasks;\r\n  }\r\n\r\n  getServerData = () => {\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n\r\n    if(listId !== undefined && listId !== null){\r\n      this.setState({\r\n        isLoading: true\r\n      },() => {\r\n        axios\r\n        .get(`https://guarded-mesa-76047.herokuapp.com/api/lists/${listId}`)\r\n        .then(res => this.setState({\r\n          trackerName: res.data.listName,\r\n          tasks: this.updateData(res.data.list),\r\n          lastSaved: res.data.lastSaved,\r\n          isLoading: false,\r\n          relatedLists: (res.data.relatedLists === undefined || res.data.relatedLists === null) ? [] : res.data.relatedLists,\r\n        }))\r\n        .then(() => {\r\n          this.activateTasks()\r\n          this.getSortHeaders(this.state.tasks, this.state.currentSort)\r\n          this.getUniqueValues(this.state.tasks, 'category', 'categories')\r\n          this.getUniqueValues(this.state.tasks, 'subCategory', 'subcategories')\r\n          this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers')\r\n          this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers')\r\n          // this.fixMissingFields()\r\n          // this.switchDateFormat()\r\n        })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  changeList = (listId) => {\r\n    const a = document.createElement(\"a\");\r\n    a.href = `https://wmxgroup.github.io/task-tracker/?query=${listId}`;\r\n    a.click();\r\n  }\r\n\r\n  addListValue = (listId) => {\r\n    this.setState({\r\n      relatedLists: [...this.state.relatedLists, listId]\r\n    }, () => this.saveData())\r\n  }\r\n\r\n  saveData = () => {\r\n    this.handleClose();\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n    const currentDT = new Date();\r\n\r\n    if(this.state.debugMode === false){\r\n      if(listId === null){\r\n        axios\r\n        .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n          list: this.state.tasks,\r\n          listName: this.state.trackerName,\r\n          lastSaved: new Date(),\r\n          relatedLists: this.state.relatedLists\r\n        })\r\n        .then((res) => {\r\n          alert('New list created!')\r\n          return(res);\r\n        })\r\n        .then((res) => {\r\n          const newId = res.data._id;\r\n          const a = document.createElement(\"a\");\r\n          a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n          a.click();\r\n        })\r\n      } else {\r\n        axios\r\n        .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/update/${listId}`, {\r\n          list: this.state.tasks,\r\n          listName: this.state.trackerName,\r\n          lastSaved: currentDT,\r\n          relatedLists: this.state.relatedLists\r\n        })\r\n        .then(() => {\r\n          this.setState({\r\n            lastSaved: currentDT\r\n          })\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  downloadFile = (content, fileName, contentType) => {\r\n    const a = document.createElement(\"a\");\r\n    const file = new Blob([content], { type: contentType });\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = fileName;\r\n    a.click();\r\n  }\r\n\r\n  exportJSON = () => {\r\n    this.handleClose();\r\n    this.downloadFile(JSON.stringify(this.state.tasks), \"data.json\", \"text/plain\");\r\n  }\r\n\r\n  getFile = (e) => {\r\n    this.handleClose();\r\n    let files = e.target.files;\r\n    let reader = new FileReader();\r\n    reader.readAsText(files[0]);\r\n\r\n    reader.onload = e => {\r\n      this.setState({\r\n        tasks: JSON.parse(e.target.result)\r\n      })\r\n    };\r\n  }\r\n\r\n  createNew = () => {\r\n    this.handleClose();\r\n\r\n    axios\r\n    .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n      list: [],\r\n      listName: this.state.trackerName,\r\n      lastSaved: new Date()\r\n    })\r\n    .then((res) => {\r\n      alert('New list created!')\r\n      return(res);\r\n    })\r\n    .then((res) => {\r\n      const newId = res.data._id;\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n      a.click();\r\n    });\r\n  }\r\n\r\n  createTask = (task) => {\r\n    this.setState({ tasks: [...this.state.tasks, task]}, () => this.saveData());\r\n  }\r\n\r\n  launchDetails = (type, id) => {\r\n    const taskDetail = this.state.tasks.filter((task) => task.id === id)\r\n    this.setState({\r\n      detailType: type,\r\n      taskDetails: taskDetail[0]\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  launchNewTask = () => {\r\n    this.setState({\r\n      detailType: 'Add'\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  completeTask = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n        let curDueDate = task.dueDate === undefined ? moment().format('YYYY-MM-DD') : task.dueDate;\r\n        let curRecurDays = task.recurDays === undefined ? 0 : task.recurDays;\r\n        let curActiveDate = task.activeDate === undefined ? moment().format('YYYY-MM-DD') : task.activeDate;\r\n        let newActiveDate = moment(curActiveDate).add(curRecurDays, 'days').format('YYYY-MM-DD');\r\n        if (task.type === 'Recurring') {\r\n          task.status = 'Not Started';\r\n          task.recurDays = curRecurDays;\r\n          task.dueDate = moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM-DD');\r\n          task.dueWeek = moment(curDueDate).add(curRecurDays, 'days').startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM');\r\n          task.activeDate = newActiveDate;\r\n          task.isActive = moment(newActiveDate).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD') ? true : false\r\n          task.completedDates = [...task.completedDates, \r\n            {\r\n            completedDate: moment(curDueDate).format('YYYY-MM-DD'),\r\n            hours: 0\r\n            }\r\n          ];\r\n        } else if (task.type === 'One-time') {\r\n          task.status = 'Completed';\r\n          task.dueDate = curDueDate;\r\n          task.dueWeek = moment(curDueDate).startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(curDueDate).format('YYYY-MM');\r\n          task.activeDate = curActiveDate;\r\n          task.isActive = false;\r\n          task.completedDates = [...task.completedDates, \r\n            {\r\n            completedDate: moment(curDueDate).format('YYYY-MM-DD'),\r\n            hours: 0\r\n            }\r\n          ];\r\n        }\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  skipOccurence = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n          let curDueDate = task.dueDate === undefined ? moment().format('YYYY-MM-DD') : task.dueDate;\r\n          let curRecurDays = task.recurDays === undefined ? 0 : task.recurDays;\r\n          let curActiveDate = task.activeDate === undefined ? moment().format('YYYY-MM-DD') : task.activeDate;\r\n          let newActiveDate = moment(curActiveDate).add(curRecurDays, 'days').format('YYYY-MM-DD');\r\n          task.recurDays = curRecurDays;\r\n          task.dueDate = moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM-DD');\r\n          task.dueWeek = moment(curDueDate).add(curRecurDays, 'days').startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM');\r\n          task.activeDate = newActiveDate;\r\n          task.isActive = moment(newActiveDate).format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD') ? true : false\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  snoozeWeek = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n          let curDueDate = task.dueDate === undefined ? moment().format('YYYY-MM-DD') : task.dueDate;\r\n          let curActiveDate = task.activeDate === undefined ? moment().format('YYYY-MM-DD') : task.activeDate;\r\n          let newActiveDate = moment(curActiveDate).add(7, 'days').format('YYYY-MM-DD');\r\n          task.dueDate = moment(curDueDate).add(7, 'days').format('YYYY-MM-DD');\r\n          task.dueWeek = moment(curDueDate).add(7, 'days').startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(curDueDate).add(7, 'days').format('YYYY-MM');\r\n          task.activeDate = newActiveDate\r\n          task.isActive = moment(newActiveDate).format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD') ? true : false\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  ignoreTask = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n          task.dueDate = moment(task.dueDate).add(1, 'days').format('YYYY-MM-DD');\r\n          task.dueWeek = moment(task.dueDate).add(1, 'days').startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(task.dueDate).add(1, 'days').format('YYYY-MM');\r\n          task.activeDate = moment(task.activeDate).add(1, 'days').format('YYYY-MM-DD');\r\n          task.isActive = moment(task.activeDate).format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD') ? true : false\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  makeCurrent = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n          task.dueDate = moment().format('YYYY-MM-DD');\r\n          task.dueWeek = moment().startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment().format('YYYY-MM');\r\n          task.activeDate = moment().format('YYYY-MM-DD');\r\n          task.isActive = true;\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  makeAllActiveCurrent = () => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      console.log(task);\r\n      if (task.dueDate <= moment().format('YYYY-MM-DD') && task.activeDate <= moment().format('YYYY-MM-DD') && task.status !== 'Completed' && task.dueDate !== undefined) {\r\n          task.dueDate = moment().format('YYYY-MM-DD');\r\n          task.dueWeek = moment().startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment().format('YYYY-MM');\r\n          task.activeDate = moment().format('YYYY-MM-DD');\r\n          task.isActive = true;\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  activateTasks = () => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (moment().format('YYYY-MM-DD') >= moment(task.activeDate).format('YYYY-MM-DD') && task.activeDate !== '' && task.status !== 'Completed') {\r\n        task.isActive = true;\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  saveTask = (id, task) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState(\r\n      { tasks: [...newTasks, task],\r\n        completedTasks : task.status === 'completed' ? [...this.state.completedTasks, task] : this.state.completedTasks\r\n      }, () => this.saveData()\r\n      );\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  getSortHeaders = (data, keyName) => {\r\n    const lowerKeyName = this.getKeyName(keyName)\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[lowerKeyName] );\r\n      if(i <= -1){\r\n        resArr.push(item[lowerKeyName]);\r\n      }\r\n      return null;\r\n    });\r\n    if (lowerKeyName === 'startTime'){\r\n      let startTimeNoNulls = resArr.filter((task) => task !== null);\r\n      let startTimeDay = startTimeNoNulls.filter((task) => task.includes(\"AM\"));\r\n      let startTimeNight = startTimeNoNulls.filter((task) => task.includes(\"PM\"));\r\n      startTimeDay.sort();\r\n      startTimeNight.sort();\r\n      resArr = [...startTimeDay, ...startTimeNight, null];\r\n    } else {\r\n      resArr.sort();\r\n    }\r\n    this.setState({\r\n      headers: resArr,\r\n      currentSort: keyName,\r\n    })\r\n  }\r\n\r\n  getKeyName = (sortName) => {\r\n    let keyName = '';\r\n    switch (sortName) {\r\n      case 'Category':\r\n        keyName = \"category\";\r\n        break;\r\n      case 'Sub Category':\r\n        keyName = \"subCategory\";\r\n        break;\r\n      case 'Status':\r\n        keyName = \"status\";\r\n        break;\r\n      case 'Priority':\r\n        keyName = \"priority\";\r\n        break;\r\n      case 'Hours':\r\n        keyName = \"hours\";\r\n        break;\r\n      case 'Start Time':\r\n        keyName = \"startTime\";\r\n        break;\r\n      case 'Assigned':\r\n        keyName = \"assigned\";\r\n        break;\r\n      case 'Contact':\r\n        keyName = \"contact\";\r\n        break;\r\n      case 'Due Date':\r\n        keyName = \"dueDate\";\r\n        break;\r\n      case 'Due Week':\r\n        keyName = \"dueWeek\";\r\n        break;\r\n      case 'Due Month':\r\n        keyName = \"dueMonth\";\r\n        break;\r\n      default:\r\n        keyName = \"\";\r\n    }\r\n    return keyName;\r\n  }\r\n\r\n  getUniqueValues = (data, fieldName, arrayName) => {\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[fieldName] );\r\n      if(i <= -1){\r\n        resArr.push(item[fieldName]);\r\n      }\r\n      return null;\r\n    });\r\n    resArr.sort((a,b) => (a > b) ? 1 : -1);\r\n    this.setState({\r\n      [arrayName]: resArr\r\n    })\r\n  }\r\n  \r\n  uuidv4 = () => {\r\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleTitleChange = (e) => {\r\n    this.setState({\r\n      trackerName: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSortChange = (sortOption) => {\r\n    this.getSortHeaders(this.state.tasks, sortOption)\r\n  };\r\n\r\n  handleFilterChange = (filterOption) => {\r\n    this.setState({\r\n      filterOption\r\n    })\r\n  };\r\n\r\n  handleCategoryFilterChange = (category) => {\r\n    const { categoryFilter } = this.state;\r\n    if (category === 'All'){\r\n      this.setState({\r\n        categoryFilter: ['All'],\r\n    })} else if (categoryFilter.includes(category)) {\r\n      const newCategoryFilter = categoryFilter.filter((value) => value !== category)\r\n      this.setState({\r\n        categoryFilter: newCategoryFilter,\r\n      })\r\n    } else {\r\n      const newCategoryFilter = categoryFilter.filter((value) => value !== 'All')\r\n      this.setState({\r\n        categoryFilter: [...newCategoryFilter, category]\r\n      })\r\n    }\r\n  };\r\n\r\n  toggleDisplay = (displayName) => {\r\n    this.setState({\r\n      display: displayName\r\n    })\r\n  }\r\n\r\n  calculatePoints = () => {\r\n    let pointsArray = [];\r\n    const {\r\n      categories,\r\n      tasks,\r\n      reportWeek,\r\n    } = this.state;\r\n\r\n    for (let i = 0; i < categories.length; i++) {\r\n      pointsArray.push({\r\n        category: categories[i],\r\n        totalPoints: 0,\r\n        weeklyPoints: 0,\r\n      })\r\n    }\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      for (let j = 0; j < pointsArray.length; j++) {\r\n        if (pointsArray[j].category === tasks[i].category) {\r\n          pointsArray[j].weeklyPoints = parseInt(pointsArray[j].weeklyPoints) + ((tasks[i].weeklyGoal === null || tasks[i].weeklyGoal === '' ) ? 0 : parseInt(tasks[i].weeklyGoal))\r\n          for (let k = 0; k < tasks[i].completedDates.length; k++) {\r\n            if (moment(tasks[i].completedDates[k]).format('YYYY-MM-DD') >= reportWeek && moment(tasks[i].completedDates[k]).format('YYYY-MM-DD') < moment(reportWeek).add(7, 'days').format('YYYYMMDD')) {\r\n              const newPoints = (tasks[i].points === null || tasks[i].points === '') ? 0 : parseInt(tasks[i].points);\r\n              pointsArray[j].totalPoints = parseInt(pointsArray[j].totalPoints) + newPoints;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      categoryReport: pointsArray,\r\n    })\r\n  }\r\n\r\n  updateReportWeek = async (direction) => {\r\n    if (direction === 1){\r\n      this.setState({\r\n        reportWeek: moment(this.state.reportWeek).add(7, 'days').format('YYYY-MM-DD')\r\n      }, () => this.calculatePoints())\r\n    } else {\r\n      this.setState({\r\n        reportWeek: moment(this.state.reportWeek).subtract(7, 'days').format('YYYY-MM-DD')\r\n      }, () => this.calculatePoints())\r\n    }\r\n  }\r\n\r\n  launchReport = async () => {\r\n    await this.handleClose();\r\n    await this.calculatePoints();\r\n    await this.toggleDisplay('Report');\r\n  }\r\n\r\n  launchAddList = async () => {\r\n    await this.handleClose();\r\n    await this.toggleDisplay('AddRelatedList');\r\n  }\r\n\r\n  launchNewCompleted = (curTaskDetails) => {\r\n    this.setState({\r\n      completedForm: 'Add',\r\n      taskDetails: curTaskDetails\r\n    },\r\n    () => this.toggleDisplay('Completed'));\r\n  }\r\n\r\n  launchEditCompleted = (curTaskDetails, completedDetails) => {\r\n    this.setState({\r\n      completedForm: 'Edit',\r\n      completedDetails: completedDetails,\r\n      taskDetails: curTaskDetails\r\n    },\r\n    () => this.toggleDisplay('Completed'));\r\n  }\r\n\r\n  saveCompleted = (id, data) => {\r\n    const newCompleted = this.state.taskDetails.completedDates.filter((item) => item.completedId !== id)\r\n    let newTaskDetails = this.state.taskDetails;\r\n    newTaskDetails.completedDates = [...newCompleted, data];\r\n    this.setState({ \r\n      taskDetails: newTaskDetails,\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  addCompleted = (completed) => {\r\n    let newTaskDetails = this.state.taskDetails;\r\n    const newCompleted = [...newTaskDetails.completedDates, completed]\r\n    newTaskDetails.completedDates = newCompleted;\r\n    this.setState({ \r\n      taskDetails: newTaskDetails,\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  render() {\r\n\r\n    if(this.state.debugMode === true){\r\n        console.log(this.state);\r\n    }\r\n\r\n    const {\r\n      classes\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar \r\n          position=\"fixed\" \r\n          color=\"primary\"\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={this.handleMenu}\r\n                >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={this.state.anchorEl}\r\n                  getContentAnchorEl={null}\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  open={this.state.setAnchorEl}\r\n                  onClose={this.handleClose}\r\n                >\r\n                  <input \r\n                    type=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    name=\"file\" \r\n                    onChange={this.getFile}\r\n                    accept=\".json\"\r\n                    />\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <MenuItem onClick={() => this.getFile()}>Import JSON</MenuItem>\r\n                  </label>\r\n                  <MenuItem onClick={() => this.exportJSON()}>Export Data</MenuItem>\r\n                  <MenuItem onClick={() => this.createNew()}>Create New</MenuItem>\r\n                  <MenuItem onClick={() => this.launchReport()}>Show Report</MenuItem>\r\n                  <MenuItem onClick={() => this.makeAllActiveCurrent()}>Make Tasks Current</MenuItem>\r\n                  <MenuItem onClick={() => this.launchAddList()}>Add Related List</MenuItem>\r\n                </Menu>\r\n              <Typography variant=\"h6\">\r\n                  Task Tracker\r\n              </Typography>\r\n              <div className={classes.grow} />       \r\n              <div className={classes.addButton}>\r\n                <SortAlt\r\n                  currentSort={this.state.currentSort}\r\n                  handleSortChange={this.handleSortChange}\r\n                />\r\n              </div>\r\n              <div className={classes.addButton}>\r\n                <ActiveFilter\r\n                  filterOption={this.state.filterOption}\r\n                  handleFilterChange={this.handleFilterChange}\r\n                />\r\n              </div>\r\n              <div className={classes.addButton}>\r\n                <CategoryFilter\r\n                  handleCategoryFilterChange={this.handleCategoryFilterChange}\r\n                  categories={this.state.categories}\r\n                  categoryFilter={this.state.categoryFilter}\r\n                />\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Toolbar />\r\n          {this.state.display === 'Tasks' &&\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  fontStyle:'italic',\r\n                  color:'#bbb',\r\n                }}>\r\n                  {this.state.lastSaved === null ? 'Not Saved' : 'Last Saved: ' + this.state.lastSaved}\r\n              </div>\r\n              <TextField\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                  style: {\r\n                    display: 'block',\r\n                    fontSize: '2em',\r\n                    marginTop: '0.3em',\r\n                    marginBottom: '0.3em',\r\n                    // padding: 0\r\n                  },\r\n                }}\r\n                value={this.state.trackerName}\r\n                onChange={this.handleTitleChange}\r\n              />\r\n              <Divider />\r\n              <div className={classes.taskContainer}>\r\n                {this.state.headers.map ((header, i) => (\r\n                  <TaskGroup\r\n                    tasks={this.state.tasks}\r\n                    header={header}\r\n                    key={i}\r\n                    completeTask={this.completeTask}\r\n                    launchDetails={this.launchDetails}\r\n                    ignoreTask={this.ignoreTask}\r\n                    makeCurrent={this.makeCurrent}\r\n                    snoozeWeek={this.snoozeWeek}\r\n                    skipOccurence={this.skipOccurence}\r\n                    getKeyName={this.getKeyName}\r\n                    currentSort={this.state.currentSort}\r\n                    filterOption={this.state.filterOption}\r\n                    categoryFilter={this.state.categoryFilter}\r\n                    />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n          {this.state.display === 'Details' &&\r\n            <TaskDetails\r\n              toggleDisplay={this.toggleDisplay}\r\n              type={this.state.detailType}\r\n              categories={this.state.categories}\r\n              subcategories={this.state.subcategories}\r\n              assignedUsers={this.state.assignedUsers}\r\n              contactUsers={this.state.contactUsers}\r\n              createTask={this.createTask}\r\n              taskDetails={this.state.taskDetails}\r\n              saveTask={this.saveTask}\r\n              deleteTask={this.deleteTask}\r\n              launchNewCompleted={this.launchNewCompleted}\r\n              launchEditCompleted={this.launchEditCompleted}\r\n              uuidv4={this.uuidv4}\r\n            />\r\n          }\r\n          {this.state.display === 'Report' &&\r\n            <Report\r\n              categoryReport={this.state.categoryReport}\r\n              toggleDisplay={this.toggleDisplay}\r\n              updateReportWeek={this.updateReportWeek}\r\n              reportWeek={this.state.reportWeek}\r\n            />\r\n          }\r\n          {this.state.display === 'Completed' &&\r\n            <CompletedDetail\r\n              type={this.state.completedForm}\r\n              toggleDisplay={this.toggleDisplay}\r\n              saveCompleted={this.saveCompleted}\r\n              addCompleted={this.addCompleted}\r\n              completedDetails={this.state.completedDetails}\r\n            />\r\n          }\r\n          {this.state.display !== 'Details' &&\r\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n              <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={() => this.getServerData()}\r\n                >\r\n                <RefreshIcon />\r\n              </IconButton>\r\n              <div className={classes.addButton}>\r\n                <RelatedLists\r\n                  relatedLists={this.state.relatedLists}\r\n                  changeList={this.changeList}\r\n                />\r\n              </div>       \r\n                <Fab \r\n                  color=\"secondary\" \r\n                  aria-label=\"add\" \r\n                  className={classes.fabButton}\r\n                  onClick={() => this.launchNewTask()}\r\n                  >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </Toolbar>\r\n            </AppBar>\r\n          }\r\n          {this.state.display === 'AddRelatedList' &&\r\n            <AddRelatedList\r\n              relatedLists={this.state.relatedLists}\r\n              toggleDisplay={this.toggleDisplay}\r\n              addListValue={this.addListValue}\r\n          />\r\n          }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Main)","import React from 'react';\nimport Main from './components/Main';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { teal, indigo } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: teal[500],\n    },\n    secondary: {\n      main: indigo[500],\n    },\n  },\n\n  typography: {\n\n  },\n  overrides: {\n    MuiAutocomplete: {\n      // paper: {\n      //   backgroundColor: 'blue'\n      // },\n      // option: {\n      //   backgroundColor: 'green'\n      // },\n      // listbox: {\n      //   backgroundColor: '#bbdefb',\n      // }\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}