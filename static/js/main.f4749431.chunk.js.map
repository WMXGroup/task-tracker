{"version":3,"sources":["components/Task.js","components/TaskGroup.js","components/TaskDetails.js","components/SortAlt.js","components/ActiveFilter.js","components/Main.js","App.js","index.js"],"names":["Task","state","showDetails","this","props","classes","task","completeTask","launchDetails","className","taskContainer","key","id","status","Checkbox","checked","checkbox","onChange","color","size","TextField","taskStyle","disabled","InputProps","disableUnderline","style","paddingLeft","blackColor","value","description","multiline","IconButton","onClick","moveButtons","Component","withStyles","theme","border","borderRadius","width","marginTop","display","TaskGroup","header","tasks","currentSort","getKeyName","filterOption","lowercurrentSort","groupTasks","filter","isActive","Fragment","length","map","i","styles","fieldStyle","fieldLabel","alignContent","minWidth","maxWidth","fieldContainer","alignItems","margin","inputStyle","paddingTop","paddingBottom","dateStyle","height","padding","dateContainer","buttonContainer","justifyContent","buttonStyle","headerName","headerClose","headerContainer","dialogContainer","marginBottom","DetailModal","type","taskDetails","category","dueDate","moment","format","actual","goal","priority","assigned","contact","activeDate","workTime","tags","completedDate","dueWeek","dueweek","startOf","dueMonth","notes","recurDays","isUpdating","e","setState","target","name","dateChange","activeDateChange","onAutoChange","newValue","fieldName","onStatusChange","add","onCheck","uuidv4","Math","random","toString","substring","Date","now","addTask","createTask","toggleDisplay","saveCurrentTask","saveTask","deleteCurrentTask","deleteTask","categories","assignedUsers","contactUsers","Typography","variant","Autocomplete","options","defaultValue","getOptionLabel","option","renderInput","params","freeSolo","inputValue","onInputChange","utils","DateFnsUtils","disableToolbar","autoOk","KeyboardButtonProps","inputVariant","Button","SortAlt","sortOptions","anchorEl","setAnchorEl","handleMenu","event","currentTarget","handleClose","handleClick","sortOption","handleSortChange","edge","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","ActiveFilter","filterOptions","handleFilterChange","Main","headers","lastSaved","isLoading","trackerName","selectedTask","detailType","componentDidMount","getServerData","componentDidUpdate","prevProps","prevState","getSortHeaders","getUniqueValues","search","window","location","listId","URLSearchParams","get","undefined","axios","then","res","data","listName","list","activateTasks","saveData","currentDT","post","alert","newId","_id","a","document","createElement","href","click","downloadFile","content","fileName","contentType","file","Blob","URL","createObjectURL","download","exportJSON","JSON","stringify","getFile","files","reader","FileReader","readAsText","onload","parse","result","createNew","taskDetail","newTasks","keyName","lowerKeyName","resArr","item","findIndex","x","push","sort","sortName","arrayName","handleTitleChange","handleSwitchChange","displayName","console","log","AppBar","position","Toolbar","accept","htmlFor","grow","addButton","fontStyle","fontSize","Divider","appBar","Fab","aria-label","fabButton","launchModal","formControl","actionBar","top","bottom","flexGrow","zIndex","left","right","createMuiTheme","palette","primary","blue","typography","overrides","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4749431.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreHoriz from '@material-ui/icons/MoreHoriz';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  taskStyle:{\r\n    border: '1px solid #ccc',\r\n    borderRadius: '25px',\r\n    width:'700px',\r\n    marginTop: '5px',\r\n  },\r\n  checkbox:{\r\n    // height: 0,\r\n    width: '5px',\r\n  },\r\n  taskContainer: {\r\n    display:'flex',\r\n  },\r\n  blackColor: {\r\n    color: 'black'\r\n  }\r\n});\r\n\r\nclass Task extends Component {\r\n\r\n  state = {\r\n    showDetails: false,\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      task,\r\n      completeTask,\r\n      launchDetails\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={classes.taskContainer} key={task.id}>\r\n        {task.status !== 'Completed' &&\r\n          <Checkbox\r\n            checked={task.status === 'Completed' ? true : false}\r\n            className={classes.checkbox}\r\n            onChange={() => completeTask(task.id)}\r\n            color=\"primary\"\r\n            size='small'\r\n            />\r\n        }\r\n        <TextField\r\n          className={classes.taskStyle}\r\n          disabled\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              paddingLeft: '5px',\r\n            },\r\n            classes:{\r\n              disabled: classes.blackColor\r\n            },\r\n          }}\r\n          value={task.description}\r\n          multiline\r\n        />\r\n          <IconButton\r\n          onClick={() => launchDetails('Edit', task.id)} \r\n          size='small'\r\n          >\r\n          <MoreHoriz\r\n            className={classes.moveButtons}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Task)","import React, { Component } from 'react';\r\nimport Task from './Task';\r\n\r\nexport default class TaskGroup extends Component {\r\n  render() {\r\n\r\n    const {\r\n      header,\r\n      tasks,\r\n      currentSort,\r\n      completeTask,\r\n      launchDetails,\r\n      getKeyName,\r\n      filterOption\r\n    } = this.props;\r\n\r\n    const lowercurrentSort = getKeyName(currentSort);\r\n    let groupTasks = [];\r\n\r\n    if (filterOption === 'Active') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.isActive === true ))\r\n    } else if(filterOption === 'Inactive') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.isActive === false ))\r\n    } else {\r\n      groupTasks = tasks.filter((task) => task[lowercurrentSort] === header)\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {groupTasks.length !== 0 &&\r\n        <h2>{header}</h2>\r\n        }\r\n        {groupTasks.map ((task, i) => (\r\n          <Task\r\n          task={task}\r\n          key={i}\r\n          completeTask={completeTask}\r\n          launchDetails={launchDetails}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = {\r\n  fieldStyle:{\r\n    width:'700px',\r\n    // margin: '5px',\r\n  },\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n    maxWidth: '90px'\r\n  },\r\n  fieldContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.5rem',\r\n  },\r\n  inputStyle: {\r\n    paddingLeft: '15px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px'\r\n  },\r\n  dateStyle: {\r\n    height: '40px',\r\n    padding: 0\r\n  },\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonStyle: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '5px'\r\n  },\r\n  headerName: {\r\n    color: '#aaa',\r\n    margin: '10px',\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px'\r\n  },\r\n  dialogContainer: {\r\n    marginBottom: '70px'\r\n    // display: 'flex'\r\n  }\r\n};\r\n\r\nexport default class DetailModal extends Component {\r\n\r\n  state = {\r\n    id: this.props.type === 'Edit'? this.props.taskDetails.id : '',\r\n    description:  this.props.type === 'Edit'? this.props.taskDetails.description : '',\r\n    category: this.props.type === 'Edit'? this.props.taskDetails.category : '',\r\n    status: this.props.type === 'Edit'? this.props.taskDetails.status : '',\r\n    dueDate: this.props.type === 'Edit'? this.props.taskDetails.dueDate : moment().format('MM/DD/YYYY'),\r\n    actual: this.props.type === 'Edit'? this.props.taskDetails.actual : 0,\r\n    goal: this.props.type === 'Edit'? this.props.taskDetails.goal : 0,\r\n    priority: this.props.type === 'Edit'? this.props.taskDetails.priority : '',\r\n    assigned: this.props.type === 'Edit'? this.props.taskDetails.assigned : '',\r\n    contact: this.props.type === 'Edit'? this.props.taskDetails.contact : '',\r\n    isActive: this.props.type === 'Edit'? this.props.taskDetails.isActive : true,\r\n    activeDate: this.props.type === 'Edit'? this.props.taskDetails.activeDate : moment().format('MM/DD/YYYY'),\r\n    workTime: this.props.type === 'Edit'? this.props.taskDetails.workTime : [],\r\n    tags: this.props.type === 'Edit'? this.props.taskDetails.tags : [],\r\n    completedDate: this.props.type === 'Edit'? this.props.taskDetails.completedDate : '',\r\n    dueWeek: this.props.type === 'Edit'? this.props.taskDetails.dueweek : moment().startOf('isoweek').format('MM/DD/YYYY'),\r\n    dueMonth: this.props.type === 'Edit'? this.props.taskDetails.dueMonth : moment().format('MMMM YYYY'),\r\n    notes: this.props.type === 'Edit'? this.props.taskDetails.notes : '',\r\n    type: this.props.type === 'Edit'? this.props.taskDetails.type : 'One-time',\r\n    recurDays: this.props.type === 'Edit'? this.props.taskDetails.recurDays : 0,\r\n    isUpdating: false,\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  dateChange = (e) => {\r\n    this.setState({\r\n      dueDate: moment(e).format('MM/DD/YYYY'),\r\n      dueWeek: moment(e).startOf('week').format('MM/DD/YYYY'),\r\n      dueMonth: moment(e).format('MMMM YYYY'),\r\n    })\r\n  }\r\n\r\n  activeDateChange = (e) => {\r\n    this.setState({\r\n      activeDate: moment(e).format('MM/DD/YYYY'),\r\n      isActive: e = '' ? this.state.isActive : moment().format('YYYY-MM-DD') >= moment(e).format('YYYY-MM-DD') ? true : moment(e).format('YYYY-MM-DD')  > moment().format('YYYY-MM-DD') ? false : this.state.isActive\r\n    })\r\n  }\r\n\r\n  onAutoChange = (e, newValue, fieldName) => {\r\n    this.setState({\r\n      [fieldName]: newValue\r\n    });\r\n  }\r\n\r\n  onStatusChange = (e, newValue, fieldName) => {\r\n    const {\r\n      type,\r\n      dueDate,\r\n      activeDate,\r\n      recurDays,\r\n      isUpdating\r\n    } = this.state\r\n    if (isUpdating === false) {\r\n      if (newValue === 'Completed') {\r\n        if (type === 'Recurring') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            status: '',\r\n            completedDate: '',\r\n            dueDate: moment(dueDate).add(recurDays, 'days').format('MM/DD/YYYYY'),\r\n            dueWeek: moment(dueDate).add(recurDays, 'days').startOf('week').format('MM/DD/YYYY'),\r\n            dueMonth: moment(dueDate).add(recurDays, 'days').format('MMMM YYYY'),\r\n            activeDate: moment(activeDate).add(recurDays, 'days'),\r\n            isActive: moment(activeDate).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD') ? true : false\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            })\r\n          });\r\n        } else if (type === 'One-time') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            completedDate: moment().format('MM/DD/YYYY'),\r\n            status: 'Completed',\r\n            isActive: false\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            })\r\n          })\r\n        }\r\n      } else {\r\n        this.setState({\r\n          [fieldName]: newValue,\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  onCheck = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    })\r\n  }\r\n\r\n  uuidv4 = () => {\r\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n  }\r\n\r\n  addTask = () => {\r\n    this.props.createTask({\r\n      id: this.uuidv4(),\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      actual: this.state.actual,\r\n      goal: this.state.goal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      isActive: this.state.isActive,\r\n      activeDate: this.state.activeDate,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDate: this.state.completedDate,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n    });\r\n    this.props.toggleDisplay('Details');\r\n  }\r\n\r\n  saveCurrentTask = () => {\r\n    this.props.saveTask(this.state.id, {\r\n      id: this.state.id,\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      actual: this.state.actual,\r\n      goal: this.state.goal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      isActive: this.state.isActive,\r\n      activeDate: this.state.activeDate,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDate: this.state.completedDate,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n    });\r\n    this.props.toggleDisplay('Details');\r\n  }\r\n\r\n  deleteCurrentTask = () => {\r\n    this.props.deleteTask(this.state.id);\r\n    this.props.toggleDisplay('Details');\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      type,\r\n      categories,\r\n      assignedUsers,\r\n      contactUsers,\r\n    } = this.props;\r\n\r\n    // console.log(this.props)\r\n    // console.log(this.state)\r\n\r\n    return (\r\n      <div style={styles.dialogContainer}>\r\n        <div style={styles.headerContainer}> \r\n          <div style={styles.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Task Management\r\n            </Typography>\r\n          </div>\r\n          <div style={styles.headerClose}>\r\n            <IconButton\r\n              onClick={() => this.props.toggleDisplay('Tasks')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Description\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='description'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.description}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Category\r\n          </Typography>\r\n          <Autocomplete\r\n            size='small'\r\n            style={styles.fieldStyle}\r\n            options={categories}\r\n            defaultValue={this.state.category}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.category}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.category}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'category')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Type\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['One-time','Recurring']}\r\n            defaultValue={this.state.type}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.type}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.type}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'type')}\r\n            />\r\n        </ div>\\\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Recurring Days\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='recurDays'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.recurDays}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Status\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['Not Started','In Progress','On Hold','Completed']}\r\n            defaultValue={this.state.status}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.status}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.status}\r\n            onInputChange={(e, newValue) => this.onStatusChange(e, newValue, 'status')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Priority\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['1','2','3','4','5']}\r\n            defaultValue={this.state.priority}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.priority}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.priority}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'priority')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Due Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                value={this.state.dueDate}\r\n                onChange={(e) => this.dateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Active Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                value={this.state.activeDate}\r\n                onChange={(e) => this.activeDateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Actual\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='actual'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.actual}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Goal\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='goal'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.goal}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Assigned\r\n          </Typography>\r\n          <Autocomplete\r\n            options={assignedUsers}\r\n            defaultValue={this.state.assigned}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.assigned}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.assigned}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'assigned')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Contact\r\n          </Typography>\r\n          <Autocomplete\r\n            options={contactUsers}\r\n            defaultValue={this.state.contact}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.contact}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.contact}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'contact')}\r\n            />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Active\r\n          </Typography>\r\n          <Checkbox\r\n            checked={this.state.isActive}\r\n            name='isActive'\r\n            onChange={this.onCheck}\r\n            color=\"primary\"\r\n            size='small'\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Notes\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='notes'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.notes}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.buttonContainer}>\r\n          {type === 'Add' &&\r\n            <div style={styles.buttonStyle}>\r\n              <Button \r\n                style={styles.buttonStyle}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.addTask}\r\n                >\r\n                Add\r\n              </Button>\r\n            </div>\r\n          }\r\n          {type === 'Edit' &&\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.saveCurrentTask}\r\n                  >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.deleteCurrentTask}\r\n                  >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collections from '@material-ui/icons/Collections';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class SortAlt extends Component {\r\n\r\n  state = {\r\n    sortOptions: [\r\n      'Category',\r\n      'Status',\r\n      'Priority',\r\n      'Assigned',\r\n      'Contact',\r\n      'Due Date',\r\n      'Due Week',\r\n      'Due Month',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (sortOption) => {\r\n    this.props.handleSortChange(sortOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <Collections />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.sortOptions.map((sortOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={sortOption}\r\n              onClick={() => this.handleClick(sortOption)}\r\n              >\r\n              {sortOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class ActiveFilter extends Component {\r\n\r\n  state = {\r\n    filterOptions: [\r\n      'Active',\r\n      'Inactive',\r\n      'Both',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleFilterChange(filterOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <FilterList />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.filterOptions.map((filterOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={filterOption}\r\n              onClick={() => this.handleClick(filterOption)}\r\n              >\r\n              {filterOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TaskGroup from './TaskGroup';\r\nimport TaskDetails from './TaskDetails';\r\nimport {tasks} from './TestTasks';\r\nimport SortAlt from './SortAlt';\r\nimport ActiveFilter from './ActiveFilter';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n  taskContainer: {\r\n    maxWidth: '700px',\r\n    marginBottom: '70px'\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n    margin: '5px',\r\n  },\r\n  addButton: {\r\n    margin: '5px',\r\n    alignContent: 'center',\r\n    fontSize: '17px',\r\n    color: 'white'\r\n  },\r\n  actionBar: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  state = {\r\n    tasks: [],\r\n    headers: [],\r\n    lastSaved: null,\r\n    isLoading: false,\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n    currentSort: 'Category',\r\n    trackerName: 'Test Title',\r\n    selectedTask: null,\r\n    detailType: null,\r\n    categories: [],\r\n    assignedUsers: [],\r\n    contactUsers: [],\r\n    taskDetails: {},\r\n    filterOption: 'Active',\r\n    display: 'Tasks',\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getServerData();\r\n    // this.setState({\r\n    //   tasks: tasks\r\n    // })\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.state.tasks !== prevState.tasks) {\r\n      this.getSortHeaders(this.state.tasks, this.state.currentSort);\r\n      this.getUniqueValues(this.state.tasks, 'category', 'categories');\r\n      this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers');\r\n      this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers');\r\n    }\r\n  }\r\n\r\n  getServerData = () => {\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n\r\n    if(listId !== undefined && listId !== null){\r\n      this.setState({\r\n        isLoading: true\r\n      },() => {\r\n        axios\r\n        .get(`https://guarded-mesa-76047.herokuapp.com/api/lists/${listId}`)\r\n        .then(res => this.setState({\r\n          trackerName: res.data.listName,\r\n          tasks: res.data.list,\r\n          lastSaved: res.data.lastSaved,\r\n          isLoading: false\r\n        }))\r\n        .then(() => {\r\n          this.activateTasks()\r\n          this.getSortHeaders(this.state.tasks, this.state.currentSort)\r\n          this.getUniqueValues(this.state.tasks, 'category', 'categories')\r\n          this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers')\r\n          this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers')\r\n        })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  saveData = () => {\r\n    this.handleClose();\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n    const currentDT = new Date();\r\n\r\n    if(listId === null){\r\n      axios\r\n      .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n        list: this.state.tasks,\r\n        listName: this.state.trackerName,\r\n        lastSaved: new Date()\r\n      })\r\n      .then((res) => {\r\n        alert('New list created!')\r\n        return(res);\r\n      })\r\n      .then((res) => {\r\n        const newId = res.data._id;\r\n        const a = document.createElement(\"a\");\r\n        a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n        a.click();\r\n      })\r\n    } else {\r\n      axios\r\n      .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/update/${listId}`, {\r\n        list: this.state.tasks,\r\n        listName: this.state.trackerName,\r\n        lastSaved: currentDT\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          lastSaved: currentDT\r\n        })\r\n        alert('Data saved successfully!')\r\n      });\r\n    }\r\n  }\r\n\r\n  downloadFile = (content, fileName, contentType) => {\r\n    const a = document.createElement(\"a\");\r\n    const file = new Blob([content], { type: contentType });\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = fileName;\r\n    a.click();\r\n  }\r\n\r\n  exportJSON = () => {\r\n    this.handleClose();\r\n    this.downloadFile(JSON.stringify(this.state.tasks), \"data.json\", \"text/plain\");\r\n  }\r\n\r\n  getFile = (e) => {\r\n    this.handleClose();\r\n    let files = e.target.files;\r\n    let reader = new FileReader();\r\n    reader.readAsText(files[0]);\r\n\r\n    reader.onload = e => {\r\n      this.setState({\r\n        tasks: JSON.parse(e.target.result)\r\n      })\r\n    };\r\n  }\r\n\r\n  createNew = () => {\r\n    this.handleClose();\r\n\r\n    axios\r\n    .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n      list: [],\r\n      listName: this.state.trackerName,\r\n      lastSaved: new Date()\r\n    })\r\n    .then((res) => {\r\n      alert('New list created!')\r\n      return(res);\r\n    })\r\n    .then((res) => {\r\n      const newId = res.data._id;\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n      a.click();\r\n    });\r\n  }\r\n\r\n  createTask = (task) => {\r\n    this.setState({ tasks: [...this.state.tasks, task]}\r\n    )\r\n  }\r\n\r\n  launchDetails = (type, id) => {\r\n    const taskDetail = this.state.tasks.filter((task) => task.id === id)\r\n    this.setState({\r\n      detailType: type,\r\n      taskDetails: taskDetail[0]\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  completeTask = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n        if (task.type === 'Recurring') {\r\n          task.dueDate = moment(task.dueDate).add(task.recurDays, 'days').format('MM/DD/YYYY');\r\n          task.dueWeek = moment(task.dueDate).add(task.recurDays, 'days').startOf('week').format('MM/DD/YYYY');\r\n          task.dueMonth = moment(task.dueDate).add(task.recurDays, 'days').format('MMMM YYYY');\r\n          task.activeDate = moment(task.activeDate).add(task.recurDays, 'days');\r\n          task.isActive = moment(task.activeDate).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD') ? true : false\r\n        } else if (task.type === 'One-time') {\r\n          task.completedDate = moment().format('MM/DD/YYYY');\r\n          task.status = 'Completed';\r\n          task.isActive = false;\r\n        }\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    })\r\n  }\r\n\r\n  activateTasks = () => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (moment().format('YYYY-MM-DD') >= moment(task.activeDate).format('YYYY-MM-DD') && task.activeDate !== '' && task.status !== 'Completed') {\r\n        task.isActive = true;\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    })\r\n  }\r\n\r\n  saveTask = (id, task) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState({ tasks: [...newTasks, task]})\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState({\r\n      tasks: newTasks,\r\n    })\r\n  }\r\n\r\n  getSortHeaders = (data, keyName) => {\r\n    const lowerKeyName = this.getKeyName(keyName)\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[lowerKeyName] );\r\n      if(i <= -1){\r\n        resArr.push(item[lowerKeyName]);\r\n      }\r\n      return null;\r\n    });\r\n    resArr.sort();\r\n    this.setState({\r\n      headers: resArr,\r\n      currentSort: keyName,\r\n    })\r\n  }\r\n\r\n  getKeyName = (sortName) => {\r\n    let keyName = '';\r\n    switch (sortName) {\r\n      case 'Category':\r\n        keyName = \"category\";\r\n        break;\r\n      case 'Status':\r\n        keyName = \"status\";\r\n        break;\r\n      case 'Priority':\r\n        keyName = \"priority\";\r\n        break;\r\n      case 'Assigned':\r\n        keyName = \"assigned\";\r\n        break;\r\n      case 'Contact':\r\n        keyName = \"contact\";\r\n        break;\r\n      case 'Due Date':\r\n        keyName = \"dueDate\";\r\n        break;\r\n      case 'Due Week':\r\n        keyName = \"dueWeek\";\r\n        break;\r\n      case 'Due Month':\r\n        keyName = \"dueMonth\";\r\n        break;\r\n      default:\r\n        keyName = \"\";\r\n    }\r\n    return keyName;\r\n  }\r\n\r\n  getUniqueValues = (data, fieldName, arrayName) => {\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[fieldName] );\r\n      if(i <= -1){\r\n        resArr.push(item[fieldName]);\r\n      }\r\n      return null;\r\n    });\r\n    this.setState({\r\n      [arrayName]: resArr\r\n    })\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleTitleChange = (e) => {\r\n    this.setState({\r\n      trackerName: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSwitchChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.checked\r\n    })\r\n  }\r\n\r\n  handleSortChange = (sortOption) => {\r\n    this.getSortHeaders(this.state.tasks, sortOption)\r\n  };\r\n\r\n  handleFilterChange = (filterOption) => {\r\n    this.setState({\r\n      filterOption\r\n    })\r\n  };\r\n\r\n  toggleDisplay = (displayName) => {\r\n    this.setState({\r\n      display: displayName\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      classes\r\n    } = this.props;\r\n\r\n    console.log('Main State:', this.state);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar \r\n          position=\"fixed\" \r\n          color=\"primary\"\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={this.handleMenu}\r\n                >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={this.state.anchorEl}\r\n                  getContentAnchorEl={null}\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  open={this.state.setAnchorEl}\r\n                  onClose={this.handleClose}\r\n                >\r\n                  <input \r\n                    type=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    name=\"file\" \r\n                    onChange={this.getFile}\r\n                    accept=\".json\"\r\n                    />\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <MenuItem onClick={() => this.getFile()}>Import JSON</MenuItem>\r\n                  </label>\r\n                  <MenuItem onClick={() => this.exportJSON()}>Export Data</MenuItem>\r\n                  <MenuItem onClick={() => this.saveData()}>Save Data</MenuItem>\r\n                  <MenuItem onClick={() => this.createNew()}>Create New</MenuItem>\r\n                </Menu>\r\n              <Typography variant=\"h6\">\r\n                  Task Tracker\r\n              </Typography>\r\n              <div className={classes.grow} />\r\n              <div className={classes.addButton}>\r\n                <SortAlt\r\n                  handleSortChange={this.handleSortChange}\r\n                />\r\n              </div>\r\n              <div className={classes.addButton}>\r\n                <ActiveFilter\r\n                  handleFilterChange={this.handleFilterChange}\r\n                />\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Toolbar />\r\n          {this.state.display === 'Tasks' &&\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  fontStyle:'italic',\r\n                  color:'#bbb',\r\n                }}>\r\n                  {this.state.lastSaved === null ? 'Not Saved' : 'Last Saved: ' + this.state.lastSaved}\r\n              </div>\r\n              <TextField\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                  style: {\r\n                    display: 'block',\r\n                    fontSize: '2em',\r\n                    marginTop: '0.3em',\r\n                    marginBottom: '0.3em',\r\n                    // padding: 0\r\n                  },\r\n                }}\r\n                value={this.state.trackerName}\r\n                onChange={this.handleTitleChange}\r\n              />\r\n              <Divider />\r\n              <div className={classes.taskContainer}>\r\n                {this.state.headers.map ((header, i) => (\r\n                  <TaskGroup\r\n                    tasks={this.state.tasks}\r\n                    header={header}\r\n                    currentSort={this.state.currentSort}\r\n                    key={i}\r\n                    completeTask={this.completeTask}\r\n                    launchDetails={this.launchDetails}\r\n                    getKeyName={this.getKeyName}\r\n                    filterOption={this.state.filterOption}\r\n                    />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n          {this.state.display === 'Details' &&\r\n            <TaskDetails\r\n              toggleDisplay={this.toggleDisplay}\r\n              type={this.state.detailType}\r\n              categories={this.state.categories}\r\n              assignedUsers={this.state.assignedUsers}\r\n              contactUsers={this.state.contactUsers}\r\n              createTask={this.createTask}\r\n              taskDetails={this.state.taskDetails}\r\n              saveTask={this.saveTask}\r\n              deleteTask={this.deleteTask}\r\n            />\r\n          }\r\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Fab \r\n              color=\"secondary\" \r\n              aria-label=\"add\" \r\n              className={classes.fabButton}\r\n              onClick={() => this.launchModal('Add')}\r\n              >\r\n              <AddIcon />\r\n            </Fab>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Main)","import React from 'react';\nimport Main from './components/Main';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { blue } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  },\n\n  typography: {\n\n  },\n  overrides: {\n\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}