{"version":3,"sources":["components/Task.js","components/TaskGroup.js","components/TaskDetails.js","components/TestTasks.js","components/SortAlt.js","components/ActiveFilter.js","components/CategoryFilter.js","components/Report.js","components/Main.js","App.js","index.js"],"names":["Task","state","showDetails","this","props","classes","task","completeTask","ignoreTask","launchDetails","className","taskContainer","key","id","status","Checkbox","checked","checkbox","onChange","color","size","IconButton","onClick","moveButtons","TextField","taskStyle","style","borderColor","dueDate","disabled","InputProps","disableUnderline","paddingLeft","blackColor","value","description","multiline","Component","withStyles","theme","border","borderRadius","width","marginTop","display","TaskGroup","header","tasks","currentSort","getKeyName","filterOption","categoryFilter","lowercurrentSort","groupTasks","filter","isActive","sort","a","b","priority","category","Fragment","length","map","i","styles","fieldStyle","fieldLabel","alignContent","minWidth","maxWidth","fieldContainer","alignItems","margin","inputStyle","paddingTop","paddingBottom","dateStyle","height","padding","dateContainer","buttonContainer","justifyContent","buttonStyle","headerName","headerClose","headerContainer","dialogContainer","marginBottom","DetailModal","type","taskDetails","moment","format","actual","goal","assigned","contact","activeDate","workTime","tags","completedDate","completedDates","dueWeek","dueweek","startOf","dueMonth","notes","recurDays","isUpdating","startTime","hour","points","e","setState","target","name","dateChange","activeDateChange","startTimeChange","onAutoChange","newValue","fieldName","onStatusChange","add","saveCurrentTask","onCheck","uuidv4","Math","random","toString","substring","Date","now","addTask","createTask","toggleDisplay","saveTask","deleteCurrentTask","deleteTask","handleDeleteDate","newDates","date","window","scrollTo","categories","assignedUsers","contactUsers","Typography","variant","Autocomplete","options","defaultValue","getOptionLabel","option","renderInput","params","freeSolo","inputValue","onInputChange","utils","DateFnsUtils","disableToolbar","autoOk","KeyboardButtonProps","inputVariant","Paper","maxHeight","overflow","List","ListItem","button","ListItemSecondaryAction","edge","aria-label","Button","SortAlt","sortOptions","anchorEl","setAnchorEl","handleMenu","event","currentTarget","handleClose","handleClick","sortOption","handleSortChange","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","ActiveFilter","filterOptions","handleFilterChange","CategoryFilterr","nextProps","prevProps","Report","categoryReport","reportContainer","item","countContainer","totalPoints","weeklyPoints","toFixed","flexWrap","Main","headers","lastSaved","isLoading","trackerName","selectedTask","detailType","debugMode","componentDidMount","getServerData","componentDidUpdate","prevState","getSortHeaders","getUniqueValues","fixMissingFields","newTasks","undefined","saveData","search","location","listId","URLSearchParams","get","axios","then","res","data","listName","list","activateTasks","currentDT","post","alert","newId","_id","document","createElement","href","click","downloadFile","content","fileName","contentType","file","Blob","URL","createObjectURL","download","exportJSON","JSON","stringify","getFile","files","reader","FileReader","readAsText","onload","parse","result","createNew","taskDetail","launchNewTask","curDueDate","completedTasks","keyName","lowerKeyName","resArr","findIndex","x","push","sortName","arrayName","handleTitleChange","handleSwitchChange","handleCategoryFilterChange","displayName","calculatePoints","pointsArray","j","floor","k","parseInt","launchReport","AppBar","position","Toolbar","accept","htmlFor","grow","addButton","fontStyle","fontSize","Divider","appBar","Fab","fabButton","formControl","actionBar","top","bottom","flexGrow","zIndex","left","right","createMuiTheme","palette","primary","main","teal","secondary","indigo","typography","overrides","MuiAutocomplete","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b514cb7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SnoozeIcon from '@material-ui/icons/Snooze';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  taskStyle:{\r\n    border: '1px solid',\r\n    borderRadius: '25px',\r\n    width:'700px',\r\n    marginTop: '5px',\r\n  },\r\n  checkbox:{\r\n    // height: 0,\r\n    width: '5px',\r\n  },\r\n  taskContainer: {\r\n    display:'flex',\r\n  },\r\n  blackColor: {\r\n    color: 'black'\r\n  }\r\n});\r\n\r\nclass Task extends Component {\r\n\r\n  state = {\r\n    showDetails: false,\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      task,\r\n      completeTask,\r\n      ignoreTask,\r\n      launchDetails\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={classes.taskContainer} key={task.id}>\r\n        {task.status !== 'Completed' &&\r\n          <Checkbox\r\n            checked={task.status === 'Completed' ? true : false}\r\n            className={classes.checkbox}\r\n            onChange={() => completeTask(task.id)}\r\n            color=\"primary\"\r\n            size='small'\r\n            />\r\n        }\r\n        <IconButton\r\n        onClick={() => ignoreTask(task.id)} \r\n        size='small'\r\n        >\r\n          <SnoozeIcon\r\n            className={classes.moveButtons}\r\n          />\r\n        </IconButton>\r\n        <TextField\r\n          className={classes.taskStyle}\r\n          style={{\r\n            borderColor: this.props.task.dueDate === 'Invalid date' ? 'red' : '#ccc',\r\n          }}\r\n          disabled\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              paddingLeft: '5px',\r\n            },\r\n            classes:{\r\n              disabled: classes.blackColor\r\n            },\r\n          }}\r\n          value={task.description}\r\n          multiline\r\n        />\r\n        <IconButton\r\n        onClick={() => launchDetails('Edit', task.id)} \r\n        size='small'\r\n        >\r\n          <EditIcon\r\n            className={classes.moveButtons}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Task)","import React, { Component } from 'react';\r\nimport Task from './Task';\r\n\r\nexport default class TaskGroup extends Component {\r\n  render() {\r\n\r\n    const {\r\n      header,\r\n      tasks,\r\n      currentSort,\r\n      completeTask,\r\n      ignoreTask,\r\n      launchDetails,\r\n      getKeyName,\r\n      filterOption,\r\n      categoryFilter,\r\n    } = this.props;\r\n\r\n    const lowercurrentSort = getKeyName(currentSort);\r\n    let groupTasks = [];\r\n\r\n    if (filterOption === 'Active') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.isActive === true ))\r\n    } else if(filterOption === 'Inactive') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.isActive === false && task.status !== 'Completed' ))\r\n    }  else if(filterOption === 'Completed') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.status === 'Completed' ))\r\n    }  else if(filterOption === 'Incomplete') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.status !== 'Completed' ))\r\n    } else {\r\n      groupTasks = tasks.filter((task) => task[lowercurrentSort] === header)\r\n    }\r\n\r\n    groupTasks.sort((a,b) => (a.priority > b.priority) ? 1 : -1);\r\n\r\n    groupTasks = groupTasks.filter((task) => (task.category === categoryFilter || categoryFilter === 'All'))\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {groupTasks.length !== 0 &&\r\n        <h2>{header}</h2>\r\n        }\r\n        {groupTasks.map ((task, i) => (\r\n          <Task\r\n          task={task}\r\n          key={i}\r\n          completeTask={completeTask}\r\n          ignoreTask={ignoreTask}\r\n          launchDetails={launchDetails}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nconst styles = {\r\n  fieldStyle:{\r\n    width:'700px',\r\n    // margin: '5px',\r\n  },\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n    maxWidth: '90px'\r\n  },\r\n  fieldContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.5rem',\r\n  },\r\n  inputStyle: {\r\n    paddingLeft: '15px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px'\r\n  },\r\n  dateStyle: {\r\n    height: '40px',\r\n    padding: 0\r\n  },\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonStyle: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '5px'\r\n  },\r\n  headerName: {\r\n    color: '#aaa',\r\n    margin: '10px',\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px'\r\n  },\r\n  dialogContainer: {\r\n    marginBottom: '70px'\r\n  },\r\n};\r\n\r\nexport default class DetailModal extends Component {\r\n\r\n  state = {\r\n    id: this.props.type === 'Edit'? this.props.taskDetails.id : '',\r\n    description:  this.props.type === 'Edit'? this.props.taskDetails.description : '',\r\n    category: this.props.type === 'Edit'? this.props.taskDetails.category : '',\r\n    status: this.props.type === 'Edit'? this.props.taskDetails.status : '',\r\n    dueDate: this.props.type === 'Edit'? this.props.taskDetails.dueDate : moment().format('MM/DD/YYYY'),\r\n    actual: this.props.type === 'Edit'? this.props.taskDetails.actual : 0,\r\n    goal: this.props.type === 'Edit'? this.props.taskDetails.goal : 0,\r\n    priority: this.props.type === 'Edit'? this.props.taskDetails.priority : '',\r\n    assigned: this.props.type === 'Edit'? this.props.taskDetails.assigned : '',\r\n    contact: this.props.type === 'Edit'? this.props.taskDetails.contact : '',\r\n    isActive: this.props.type === 'Edit'? this.props.taskDetails.isActive : true,\r\n    activeDate: this.props.type === 'Edit'? this.props.taskDetails.activeDate : moment().format('MM/DD/YYYY'),\r\n    workTime: this.props.type === 'Edit'? this.props.taskDetails.workTime : [],\r\n    tags: this.props.type === 'Edit'? this.props.taskDetails.tags : [],\r\n    completedDate: this.props.type === 'Edit'? this.props.taskDetails.completedDate : '',\r\n    completedDates: this.props.type === 'Edit'? this.props.taskDetails.completedDates : [],\r\n    dueWeek: this.props.type === 'Edit'? this.props.taskDetails.dueweek : moment().startOf('isoweek').format('MM/DD/YYYY'),\r\n    dueMonth: this.props.type === 'Edit'? this.props.taskDetails.dueMonth : moment().format('MMMM YYYY'),\r\n    notes: this.props.type === 'Edit'? this.props.taskDetails.notes : '',\r\n    type: this.props.type === 'Edit'? this.props.taskDetails.type : 'One-time',\r\n    recurDays: this.props.type === 'Edit'? this.props.taskDetails.recurDays : 0,\r\n    isUpdating: false,\r\n    startTime: this.props.type === 'Edit'? this.props.taskDetails.startTime : moment({hour: 5}),\r\n    points: this.props.type === 'Edit'? this.props.taskDetails.points : '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  dateChange = (e) => {\r\n    this.setState({\r\n      dueDate: moment(e).format('MM/DD/YYYY'),\r\n      dueWeek: moment(e).startOf('week').format('MM/DD/YYYY'),\r\n      dueMonth: moment(e).format('MMMM YYYY'),\r\n    })\r\n  }\r\n\r\n  activeDateChange = (e) => {\r\n    this.setState({\r\n      activeDate: moment(e).format('MM/DD/YYYY'),\r\n      isActive: e = '' ? this.state.isActive : moment().format('YYYY-MM-DD') >= moment(e).format('YYYY-MM-DD') ? true : moment(e).format('YYYY-MM-DD')  > moment().format('YYYY-MM-DD') ? false : this.state.isActive\r\n    })\r\n  }\r\n\r\n  startTimeChange = (e) => {\r\n    this.setState(({\r\n      startTime: moment(e)\r\n    }))\r\n  }\r\n\r\n  onAutoChange = (e, newValue, fieldName) => {\r\n    this.setState({\r\n      [fieldName]: newValue\r\n    });\r\n  }\r\n\r\n  onStatusChange = (e, newValue, fieldName) => {\r\n    const {\r\n      type,\r\n      dueDate,\r\n      activeDate,\r\n      recurDays,\r\n      isUpdating,\r\n      completedDates\r\n    } = this.state\r\n    if (isUpdating === false) {\r\n      if (newValue === 'Completed') {\r\n        if (type === 'Recurring') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            status: '',\r\n            completedDate: '',\r\n            dueDate: moment(dueDate).add(recurDays, 'days').format('MM/DD/YYYYY'),\r\n            dueWeek: moment(dueDate).add(recurDays, 'days').startOf('week').format('MM/DD/YYYY'),\r\n            dueMonth: moment(dueDate).add(recurDays, 'days').format('MMMM YYYY'),\r\n            activeDate: moment(activeDate).add(recurDays, 'days'),\r\n            isActive: moment(activeDate).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD') ? true : false,\r\n            completedDates: [...completedDates, moment(dueDate).format('MM/DD/YYYY')]\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            }, () => this.saveCurrentTask())\r\n          });\r\n        } else if (type === 'One-time') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            completedDate: moment().format('MM/DD/YYYY'),\r\n            completedDates: [moment(dueDate).format('MM/DD/YYYY')],\r\n            status: 'Completed',\r\n            isActive: false\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            }, () => this.saveCurrentTask())\r\n          })\r\n        }\r\n      } else {\r\n        this.setState({\r\n          [fieldName]: newValue,\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  onCheck = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    })\r\n  }\r\n\r\n  uuidv4 = () => {\r\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n  }\r\n\r\n  addTask = () => {\r\n    this.props.createTask({\r\n      id: this.uuidv4(),\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      actual: this.state.actual,\r\n      goal: this.state.goal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      isActive: this.state.isActive,\r\n      activeDate: this.state.activeDate,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDate: this.state.completedDate,\r\n      completedDates: this.state.completedDates,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n      startTime: this.state.startTime,\r\n      points: this.state.points,\r\n    });\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  saveCurrentTask = () => {\r\n    this.props.saveTask(this.state.id, {\r\n      id: this.state.id,\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      actual: this.state.actual,\r\n      goal: this.state.goal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      isActive: this.state.isActive,\r\n      activeDate: this.state.activeDate,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDate: this.state.completedDate,\r\n      completedDates: this.state.completedDates,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n      startTime: this.state.startTime,\r\n      points: this.state.points,\r\n    });\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  deleteCurrentTask = () => {\r\n    this.props.deleteTask(this.state.id);\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  handleDeleteDate = (value) => {\r\n    const newDates = this.state.completedDates.filter((date) => date !== value)\r\n    this.setState({\r\n      completedDates: newDates,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      type,\r\n      categories,\r\n      assignedUsers,\r\n      contactUsers,\r\n      toggleDisplay\r\n    } = this.props;\r\n\r\n    return (\r\n      <div style={styles.dialogContainer}>\r\n        <div style={styles.headerContainer}> \r\n          <div style={styles.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Task Management\r\n            </Typography>\r\n          </div>\r\n          <div style={styles.headerClose}>\r\n            <IconButton\r\n              onClick={() => toggleDisplay('Tasks')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Description\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='description'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.description}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Category\r\n          </Typography>\r\n          <Autocomplete\r\n            size='small'\r\n            style={styles.fieldStyle}\r\n            options={categories}\r\n            defaultValue={this.state.category}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.category}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.category}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'category')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Type\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['One-time','Recurring']}\r\n            defaultValue={this.state.type}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.type}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.type}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'type')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Recurring Days\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='recurDays'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.recurDays}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Status\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['Not Started','In Progress','On Hold','Completed']}\r\n            defaultValue={this.state.status}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.status}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.status}\r\n            onInputChange={(e, newValue) => this.onStatusChange(e, newValue, 'status')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Priority\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='priority'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.priority}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Due Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                value={this.state.dueDate}\r\n                onChange={(e) => this.dateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Active Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                value={this.state.activeDate}\r\n                onChange={(e) => this.activeDateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Actual\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='actual'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.actual}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Goal\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='goal'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.goal}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Points\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='points'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.points}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Assigned\r\n          </Typography>\r\n          <Autocomplete\r\n            options={assignedUsers}\r\n            defaultValue={this.state.assigned}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.assigned}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.assigned}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'assigned')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Contact\r\n          </Typography>\r\n          <Autocomplete\r\n            options={contactUsers}\r\n            defaultValue={this.state.contact}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.contact}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.contact}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'contact')}\r\n            />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Active\r\n          </Typography>\r\n          <Checkbox\r\n            checked={this.state.isActive}\r\n            name='isActive'\r\n            onChange={this.onCheck}\r\n            color=\"primary\"\r\n            size='small'\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Notes\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='notes'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.notes}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n        <Typography style={styles.fieldLabel}>\r\n            Completed Dates\r\n          </Typography>\r\n          <Paper variant=\"outlined\" style={{maxHeight: 100, width: 200, overflow: 'auto'}}>\r\n            <List>\r\n              {\r\n                this.state.completedDates.map((date) => (\r\n                  <ListItem button>\r\n                    {date}\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton \r\n                        edge=\"end\" \r\n                        aria-label=\"delete\"\r\n                        onClick={() => this.handleDeleteDate(date)}>\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))\r\n              }\r\n            </List>\r\n          </Paper>\r\n        </div>\r\n        <div style={styles.buttonContainer}>\r\n          {type === 'Add' &&\r\n            <div style={styles.buttonStyle}>\r\n              <Button \r\n                style={styles.buttonStyle}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.addTask}\r\n                >\r\n                Add\r\n              </Button>\r\n            </div>\r\n          }\r\n          {type === 'Edit' &&\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.saveCurrentTask}\r\n                  >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.deleteCurrentTask}\r\n                  >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export const tasks = [\r\n  {\r\n    id: 1,\r\n    description: 'Fix the door',\r\n    category:'House',\r\n    status: 'Started',\r\n    dueDate: '8/09/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2021',\r\n    notes: '',\r\n    dueWeek: '8/09/2021',\r\n    dueMonth: 'August 2021',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    description: 'Check Transactions',\r\n    category:'Finance',\r\n    status: 'Started',\r\n    dueDate: '8/09/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2021',\r\n    notes: '',\r\n    dueWeek: '8/09/2021',\r\n    dueMonth: 'August 2021',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    description: 'Review Task list',\r\n    category:'Work',\r\n    status: 'Started',\r\n    dueDate: '8/09/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2021',\r\n    notes: '',\r\n    dueWeek: '8/09/2021',\r\n    dueMonth: 'August 2021',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 4,\r\n    description: 'Get a lower interest rate',\r\n    category:'Finance',\r\n    status: 'Started',\r\n    dueDate: '8/09/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2021',\r\n    notes: '',\r\n    dueWeek: '8/09/2021',\r\n    dueMonth: 'August 2021',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 5,\r\n    description: 'Fix the front steps',\r\n    category:'House',\r\n    status: 'Started',\r\n    dueDate: '8/09/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2021',\r\n    notes: '',\r\n    dueWeek: '8/09/2021',\r\n    dueMonth: 'August 2021',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 6,\r\n    description: 'Go see a movie',\r\n    category:'Fun',\r\n    status: 'Started',\r\n    dueDate: '8/09/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2021',\r\n    notes: '',\r\n    dueWeek: '8/09/2021',\r\n    dueMonth: 'August 2021',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: ['05/01/2021', '06/01/2021'],\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 7,\r\n    description: 'Drink 8 cups of water',\r\n    category:'Daily',\r\n    status: 'Started',\r\n    dueDate: '8/08/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/08/2021',\r\n    notes: '',\r\n    dueWeek: '8/08/2021',\r\n    dueMonth: 'August 2021',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: 0,\r\n    completedDates: ['05/01/2021', '06/01/2021', '06/02/2021', '06/03/2021' ],\r\n    points: 1,\r\n  },\r\n  {\r\n    id: 8,\r\n    description: 'Exercise',\r\n    category:'Daily',\r\n    status: 'Started',\r\n    dueDate: '8/09/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '2',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2021',\r\n    notes: '',\r\n    dueWeek: '8/09/2021',\r\n    dueMonth: 'August 2021',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: 1,\r\n    completedDates: ['05/01/2021', '06/01/2021'],\r\n    points: 1,\r\n  },\r\n  {\r\n    id: 9,\r\n    description: 'Plan tommorows dinner',\r\n    category:'Daily',\r\n    status: 'Started',\r\n    dueDate: '8/09/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '3',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2021',\r\n    notes: '',\r\n    dueWeek: '8/09/2021',\r\n    dueMonth: 'August 2021',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: 1,\r\n    completedDates: [],\r\n    points: 1,\r\n  },\r\n  {\r\n    id: 9,\r\n    description: 'Go on a walk',\r\n    category:'Family',\r\n    status: 'Started',\r\n    dueDate: '8/09/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '3',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2021',\r\n    notes: '',\r\n    dueWeek: '8/09/2021',\r\n    dueMonth: 'August 2021',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: 1,\r\n    completedDates: [],\r\n    points: 1,\r\n  },\r\n]","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collections from '@material-ui/icons/Collections';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class SortAlt extends Component {\r\n\r\n  state = {\r\n    sortOptions: [\r\n      'Category',\r\n      'Status',\r\n      'Priority',\r\n      'Assigned',\r\n      'Contact',\r\n      'Due Date',\r\n      'Due Week',\r\n      'Due Month',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (sortOption) => {\r\n    this.props.handleSortChange(sortOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <Collections />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.sortOptions.map((sortOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={sortOption}\r\n              onClick={() => this.handleClick(sortOption)}\r\n              >\r\n              {sortOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class ActiveFilter extends Component {\r\n\r\n  state = {\r\n    filterOptions: [\r\n      'Active',\r\n      'Inactive',\r\n      'Completed',\r\n      'Incomplete',\r\n      'All',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleFilterChange(filterOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <FilterList />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.filterOptions.map((filterOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={filterOption}\r\n              onClick={() => this.handleClick(filterOption)}\r\n              >\r\n              {filterOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class CategoryFilterr extends Component {\r\n\r\n  state = {\r\n    filterOptions: [],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, prevProps) {\r\n    this.setState({\r\n      filterOptions: [...nextProps.categories, 'All']\r\n    })\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleFilterChange(filterOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <CategoryIcon />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.filterOptions.map((filterOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={filterOption}\r\n              onClick={() => this.handleClick(filterOption)}\r\n              >\r\n              {filterOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = theme => ({\r\n  taskContainer: {\r\n    maxWidth: '700px',\r\n    marginBottom: '70px'\r\n  },\r\n  headerName: {\r\n    margin: '.1rem'\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa'\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px',\r\n  },\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n  },\r\n  fieldContainer: {\r\n    border: '1px solid #ccc',\r\n    margin: '5px',\r\n    padding: '5px',\r\n    minWidth: '200px',\r\n    maxWidth: '200px'\r\n  },\r\n  countContainer: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.1rem'\r\n  },\r\n  reportContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginBottom: '70px'\r\n  }\r\n});\r\n\r\nclass Report extends Component {\r\n\r\n  state = {\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      categoryReport,\r\n      toggleDisplay\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.headerContainer}> \r\n          <div className={classes.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Weekly Report\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.headerClose}>\r\n            <IconButton\r\n              onClick={() => toggleDisplay('Tasks')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className={classes.reportContainer}>\r\n          {categoryReport.map ((item, i) => (\r\n            <div className={classes.fieldContainer}>\r\n              <div className={classes.headerName}>\r\n                <Typography variant='h4'>\r\n                  {item.category}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.countContainer}>\r\n                <Typography className={classes.fieldLabel}>\r\n                  {`Points : ${item.totalPoints}`}\r\n                </Typography>\r\n                <Typography className={classes.fieldLabel}>\r\n                  {`Total : ${item.weeklyPoints}`}\r\n                </Typography>\r\n                <Typography className={classes.fieldLabel}>\r\n                  {`Rating : ${item.weeklyPoints === 0 ? 0 : (item.totalPoints/item.weeklyPoints*100).toFixed(0)}%`}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Report)","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TaskGroup from './TaskGroup';\r\nimport TaskDetails from './TaskDetails';\r\nimport {tasks} from './TestTasks';\r\nimport SortAlt from './SortAlt';\r\nimport ActiveFilter from './ActiveFilter';\r\nimport CategoryFilter from './CategoryFilter';\r\nimport Report from './Report';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n  taskContainer: {\r\n    maxWidth: '700px',\r\n    marginBottom: '70px'\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n    margin: '5px',\r\n  },\r\n  addButton: {\r\n    margin: '5px',\r\n    alignContent: 'center',\r\n    fontSize: '17px',\r\n    color: 'white'\r\n  },\r\n  actionBar: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  state = {\r\n    tasks: [],\r\n    headers: [],\r\n    lastSaved: null,\r\n    isLoading: false,\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n    currentSort: 'Due Date',\r\n    trackerName: 'Test Title',\r\n    selectedTask: null,\r\n    detailType: null,\r\n    categories: [],\r\n    assignedUsers: [],\r\n    contactUsers: [],\r\n    taskDetails: {},\r\n    filterOption: 'Active',\r\n    categoryFilter: 'All',\r\n    display: 'Tasks',\r\n    debugMode: false,\r\n    categoryReport: [],\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if(this.state.debugMode === true){\r\n      this.setState({\r\n        tasks: tasks\r\n      })\r\n    } else {\r\n      this.getServerData();\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.state.tasks !== prevState.tasks) {\r\n      this.getSortHeaders(this.state.tasks, this.state.currentSort);\r\n      this.getUniqueValues(this.state.tasks, 'category', 'categories');\r\n      this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers');\r\n      this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers');\r\n    }\r\n  }\r\n\r\n  fixMissingFields = () => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.points === undefined) {\r\n        task.points = 0\r\n      }\r\n      return task;\r\n    })\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  getServerData = () => {\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n\r\n    if(listId !== undefined && listId !== null){\r\n      this.setState({\r\n        isLoading: true\r\n      },() => {\r\n        axios\r\n        .get(`https://guarded-mesa-76047.herokuapp.com/api/lists/${listId}`)\r\n        .then(res => this.setState({\r\n          trackerName: res.data.listName,\r\n          tasks: res.data.list,\r\n          lastSaved: res.data.lastSaved,\r\n          isLoading: false\r\n        }))\r\n        .then(() => {\r\n          this.activateTasks()\r\n          this.getSortHeaders(this.state.tasks, this.state.currentSort)\r\n          this.getUniqueValues(this.state.tasks, 'category', 'categories')\r\n          this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers')\r\n          this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers')\r\n          this.fixMissingFields()\r\n        })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  saveData = () => {\r\n    this.handleClose();\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n    const currentDT = new Date();\r\n\r\n    if(this.state.debugMode === false){\r\n      if(listId === null){\r\n        axios\r\n        .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n          list: this.state.tasks,\r\n          listName: this.state.trackerName,\r\n          lastSaved: new Date()\r\n        })\r\n        .then((res) => {\r\n          alert('New list created!')\r\n          return(res);\r\n        })\r\n        .then((res) => {\r\n          const newId = res.data._id;\r\n          const a = document.createElement(\"a\");\r\n          a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n          a.click();\r\n        })\r\n      } else {\r\n        axios\r\n        .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/update/${listId}`, {\r\n          list: this.state.tasks,\r\n          listName: this.state.trackerName,\r\n          lastSaved: currentDT\r\n        })\r\n        .then(() => {\r\n          this.setState({\r\n            lastSaved: currentDT\r\n          })\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  downloadFile = (content, fileName, contentType) => {\r\n    const a = document.createElement(\"a\");\r\n    const file = new Blob([content], { type: contentType });\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = fileName;\r\n    a.click();\r\n  }\r\n\r\n  exportJSON = () => {\r\n    this.handleClose();\r\n    this.downloadFile(JSON.stringify(this.state.tasks), \"data.json\", \"text/plain\");\r\n  }\r\n\r\n  getFile = (e) => {\r\n    this.handleClose();\r\n    let files = e.target.files;\r\n    let reader = new FileReader();\r\n    reader.readAsText(files[0]);\r\n\r\n    reader.onload = e => {\r\n      this.setState({\r\n        tasks: JSON.parse(e.target.result)\r\n      })\r\n    };\r\n  }\r\n\r\n  createNew = () => {\r\n    this.handleClose();\r\n\r\n    axios\r\n    .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n      list: [],\r\n      listName: this.state.trackerName,\r\n      lastSaved: new Date()\r\n    })\r\n    .then((res) => {\r\n      alert('New list created!')\r\n      return(res);\r\n    })\r\n    .then((res) => {\r\n      const newId = res.data._id;\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n      a.click();\r\n    });\r\n  }\r\n\r\n  createTask = (task) => {\r\n    this.setState({ tasks: [...this.state.tasks, task]}, () => this.saveData());\r\n  }\r\n\r\n  launchDetails = (type, id) => {\r\n    const taskDetail = this.state.tasks.filter((task) => task.id === id)\r\n    this.setState({\r\n      detailType: type,\r\n      taskDetails: taskDetail[0]\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  launchNewTask = () => {\r\n    this.setState({\r\n      detailType: 'Add'\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  completeTask = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n        if (task.type === 'Recurring') {\r\n          let curDueDate = task.dueDate;\r\n          task.dueDate = moment(task.dueDate).add(task.recurDays, 'days').format('MM/DD/YYYY');\r\n          task.dueWeek = moment(task.dueDate).add(task.recurDays, 'days').startOf('week').format('MM/DD/YYYY');\r\n          task.dueMonth = moment(task.dueDate).add(task.recurDays, 'days').format('MMMM YYYY');\r\n          task.activeDate = moment(task.activeDate).add(task.recurDays, 'days');\r\n          task.isActive = moment(task.activeDate).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD') ? true : false\r\n          task.completedDates = [...task.completedDates, moment(curDueDate).format('MM/DD/YYYY')]\r\n        } else if (task.type === 'One-time') {\r\n          task.completedDate = moment().format('MM/DD/YYYY');\r\n          task.completedDates = [...task.completedDates, moment(task.dueDate).format('MM/DD/YYYY')]\r\n          task.status = 'Completed';\r\n          task.isActive = false;\r\n        }\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  ignoreTask = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n          task.dueDate = moment(task.dueDate).add(1, 'days').format('MM/DD/YYYY');\r\n          task.dueWeek = moment(task.dueDate).add(1, 'days').startOf('week').format('MM/DD/YYYY');\r\n          task.dueMonth = moment(task.dueDate).add(1, 'days').format('MMMM YYYY');\r\n          task.activeDate = moment(task.activeDate).add(1, 'days');\r\n          task.isActive = moment(task.activeDate).format('YYYY-MM-DD') <= moment().format('YYYY-MM-DD') ? true : false\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  activateTasks = () => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (moment().format('YYYY-MM-DD') >= moment(task.activeDate).format('YYYY-MM-DD') && task.activeDate !== '' && task.status !== 'Completed') {\r\n        task.isActive = true;\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  saveTask = (id, task) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState(\r\n      { tasks: [...newTasks, task],\r\n        completedTasks : task.status === 'completed' ? [...this.state.completedTasks, task] : this.state.completedTasks\r\n      }, () => this.saveData()\r\n      );\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  getSortHeaders = (data, keyName) => {\r\n    const lowerKeyName = this.getKeyName(keyName)\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[lowerKeyName] );\r\n      if(i <= -1){\r\n        resArr.push(item[lowerKeyName]);\r\n      }\r\n      return null;\r\n    });\r\n    resArr.sort();\r\n    this.setState({\r\n      headers: resArr,\r\n      currentSort: keyName,\r\n    })\r\n  }\r\n\r\n  getKeyName = (sortName) => {\r\n    let keyName = '';\r\n    switch (sortName) {\r\n      case 'Category':\r\n        keyName = \"category\";\r\n        break;\r\n      case 'Status':\r\n        keyName = \"status\";\r\n        break;\r\n      case 'Priority':\r\n        keyName = \"priority\";\r\n        break;\r\n      case 'Assigned':\r\n        keyName = \"assigned\";\r\n        break;\r\n      case 'Contact':\r\n        keyName = \"contact\";\r\n        break;\r\n      case 'Due Date':\r\n        keyName = \"dueDate\";\r\n        break;\r\n      case 'Due Week':\r\n        keyName = \"dueWeek\";\r\n        break;\r\n      case 'Due Month':\r\n        keyName = \"dueMonth\";\r\n        break;\r\n      default:\r\n        keyName = \"\";\r\n    }\r\n    return keyName;\r\n  }\r\n\r\n  getUniqueValues = (data, fieldName, arrayName) => {\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[fieldName] );\r\n      if(i <= -1){\r\n        resArr.push(item[fieldName]);\r\n      }\r\n      return null;\r\n    });\r\n    resArr.sort((a,b) => (a.priority > b.priority) ? 1 : -1);\r\n    this.setState({\r\n      [arrayName]: resArr\r\n    })\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleTitleChange = (e) => {\r\n    this.setState({\r\n      trackerName: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSwitchChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.checked\r\n    })\r\n  }\r\n\r\n  handleSortChange = (sortOption) => {\r\n    this.getSortHeaders(this.state.tasks, sortOption)\r\n  };\r\n\r\n  handleFilterChange = (filterOption) => {\r\n    this.setState({\r\n      filterOption\r\n    })\r\n  };\r\n\r\n  handleCategoryFilterChange = (categoryFilter) => {\r\n    this.setState({\r\n      categoryFilter\r\n    })\r\n  };\r\n\r\n  toggleDisplay = (displayName) => {\r\n    this.setState({\r\n      display: displayName\r\n    })\r\n  }\r\n\r\n  calculatePoints = () => {\r\n    let pointsArray = [];\r\n    const {\r\n      categories,\r\n      tasks,\r\n    } = this.state;\r\n\r\n    for (let i = 0; i < categories.length; i++) {\r\n      pointsArray.push({\r\n        category: categories[i],\r\n        totalPoints: 0,\r\n        weeklyPoints: 0,\r\n      })\r\n    }\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      for (let j = 0; j < pointsArray.length; j++) {\r\n        if (pointsArray[j].category === tasks[i].category) {\r\n          pointsArray[j].weeklyPoints += tasks[i].points * ((tasks[i].recurDays === 0 || tasks[i].recurDays === null || tasks[i].recurDays === '' ) ? 0 : Math.floor(7/tasks[i].recurDays))\r\n          for (let k = 0; k < tasks[i].completedDates.length; k++) {\r\n            if (moment(tasks[i].completedDates[k]).format('YYYYMMDD') >= moment().startOf('week').format('YYYYMMDD'))\r\n            pointsArray[j].totalPoints = parseInt(pointsArray[j].totalPoints) + (tasks[i].points === null || tasks[i].points === '' ) ? 0 : tasks[i].points;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      categoryReport: pointsArray,\r\n    })\r\n  }\r\n\r\n  launchReport = async () => {\r\n    await this.handleClose();\r\n    await this.calculatePoints();\r\n    await this.toggleDisplay('Report');\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      classes\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar \r\n          position=\"fixed\" \r\n          color=\"primary\"\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={this.handleMenu}\r\n                >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={this.state.anchorEl}\r\n                  getContentAnchorEl={null}\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  open={this.state.setAnchorEl}\r\n                  onClose={this.handleClose}\r\n                >\r\n                  <input \r\n                    type=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    name=\"file\" \r\n                    onChange={this.getFile}\r\n                    accept=\".json\"\r\n                    />\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <MenuItem onClick={() => this.getFile()}>Import JSON</MenuItem>\r\n                  </label>\r\n                  <MenuItem onClick={() => this.exportJSON()}>Export Data</MenuItem>\r\n                  {/* <MenuItem onClick={() => this.saveData()}>Save Data</MenuItem> */}\r\n                  <MenuItem onClick={() => this.createNew()}>Create New</MenuItem>\r\n                  <MenuItem onClick={() => this.launchReport()}>Show Report</MenuItem>\r\n                </Menu>\r\n              <Typography variant=\"h6\">\r\n                  Task Tracker\r\n              </Typography>\r\n              <div className={classes.grow} />\r\n              <div className={classes.addButton}>\r\n                <SortAlt\r\n                  handleSortChange={this.handleSortChange}\r\n                />\r\n              </div>\r\n              <div className={classes.addButton}>\r\n                <ActiveFilter\r\n                  handleFilterChange={this.handleFilterChange}\r\n                />\r\n              </div>\r\n              <div className={classes.addButton}>\r\n                <CategoryFilter\r\n                  handleFilterChange={this.handleCategoryFilterChange}\r\n                  categories={this.state.categories}\r\n                />\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Toolbar />\r\n          {this.state.display === 'Tasks' &&\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  fontStyle:'italic',\r\n                  color:'#bbb',\r\n                }}>\r\n                  {this.state.lastSaved === null ? 'Not Saved' : 'Last Saved: ' + this.state.lastSaved}\r\n              </div>\r\n              <TextField\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                  style: {\r\n                    display: 'block',\r\n                    fontSize: '2em',\r\n                    marginTop: '0.3em',\r\n                    marginBottom: '0.3em',\r\n                    // padding: 0\r\n                  },\r\n                }}\r\n                value={this.state.trackerName}\r\n                onChange={this.handleTitleChange}\r\n              />\r\n              <Divider />\r\n              <div className={classes.taskContainer}>\r\n                {this.state.headers.map ((header, i) => (\r\n                  <TaskGroup\r\n                    tasks={this.state.tasks}\r\n                    header={header}\r\n                    currentSort={this.state.currentSort}\r\n                    key={i}\r\n                    completeTask={this.completeTask}\r\n                    launchDetails={this.launchDetails}\r\n                    ignoreTask={this.ignoreTask}\r\n                    getKeyName={this.getKeyName}\r\n                    filterOption={this.state.filterOption}\r\n                    categoryFilter={this.state.categoryFilter}\r\n                    />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n          {this.state.display === 'Details' &&\r\n            <TaskDetails\r\n              toggleDisplay={this.toggleDisplay}\r\n              type={this.state.detailType}\r\n              categories={this.state.categories}\r\n              assignedUsers={this.state.assignedUsers}\r\n              contactUsers={this.state.contactUsers}\r\n              createTask={this.createTask}\r\n              taskDetails={this.state.taskDetails}\r\n              saveTask={this.saveTask}\r\n              deleteTask={this.deleteTask}\r\n            />\r\n          }\r\n          {this.state.display === 'Report' &&\r\n            <Report\r\n              categoryReport={this.state.categoryReport}\r\n              toggleDisplay={this.toggleDisplay}\r\n            />\r\n          }\r\n          {this.state.display !== 'Details' &&\r\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n              <Toolbar>\r\n                <Fab \r\n                  color=\"secondary\" \r\n                  aria-label=\"add\" \r\n                  className={classes.fabButton}\r\n                  onClick={() => this.launchNewTask()}\r\n                  >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </Toolbar>\r\n            </AppBar>\r\n          }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Main)","import React from 'react';\nimport Main from './components/Main';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { teal, indigo } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: teal[500],\n    },\n    secondary: {\n      main: indigo[500],\n    },\n  },\n\n  typography: {\n\n  },\n  overrides: {\n    MuiAutocomplete: {\n      // paper: {\n      //   backgroundColor: 'blue'\n      // },\n      // option: {\n      //   backgroundColor: 'green'\n      // },\n      // listbox: {\n      //   backgroundColor: '#bbdefb',\n      // }\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}