{"version":3,"sources":["components/Task.js","components/TaskGroup.js","components/TaskDetails.js","components/TestTasks.js","components/SortAlt.js","components/ActiveFilter.js","components/Main.js","App.js","index.js"],"names":["Task","state","showDetails","this","props","classes","task","completeTask","launchDetails","className","taskContainer","key","id","status","Checkbox","checked","checkbox","onChange","color","size","TextField","taskStyle","disabled","InputProps","disableUnderline","style","paddingLeft","blackColor","value","description","multiline","IconButton","onClick","moveButtons","Component","withStyles","theme","border","borderRadius","width","marginTop","display","TaskGroup","header","tasks","currentSort","getKeyName","filterOption","lowercurrentSort","groupTasks","filter","isActive","sort","a","b","priority","Fragment","length","map","i","styles","fieldStyle","fieldLabel","alignContent","minWidth","maxWidth","fieldContainer","alignItems","margin","inputStyle","paddingTop","paddingBottom","dateStyle","height","padding","dateContainer","buttonContainer","justifyContent","buttonStyle","headerName","headerClose","headerContainer","dialogContainer","marginBottom","DetailModal","type","taskDetails","category","dueDate","moment","format","actual","goal","assigned","contact","activeDate","workTime","tags","completedDate","completedDates","dueWeek","dueweek","startOf","dueMonth","notes","recurDays","isUpdating","startTime","hour","e","setState","target","name","dateChange","activeDateChange","startTimeChange","onAutoChange","newValue","fieldName","onStatusChange","add","saveCurrentTask","onCheck","uuidv4","Math","random","toString","substring","Date","now","addTask","createTask","toggleDisplay","saveTask","deleteCurrentTask","deleteTask","handleDeleteDate","newDates","date","window","scrollTo","categories","assignedUsers","contactUsers","Typography","variant","Autocomplete","options","defaultValue","getOptionLabel","option","renderInput","params","freeSolo","inputValue","onInputChange","utils","DateFnsUtils","disableToolbar","autoOk","KeyboardButtonProps","inputVariant","Paper","maxHeight","overflow","List","ListItem","button","ListItemSecondaryAction","edge","aria-label","Button","SortAlt","sortOptions","anchorEl","setAnchorEl","handleMenu","event","currentTarget","handleClose","handleClick","sortOption","handleSortChange","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","ActiveFilter","filterOptions","handleFilterChange","Main","headers","lastSaved","isLoading","trackerName","selectedTask","detailType","componentDidMount","componentDidUpdate","prevProps","prevState","getSortHeaders","getUniqueValues","fixMissingFields","newTasks","undefined","saveData","getServerData","search","location","listId","URLSearchParams","get","axios","then","res","data","listName","list","activateTasks","currentDT","console","log","post","alert","newId","_id","document","createElement","href","click","downloadFile","content","fileName","contentType","file","Blob","URL","createObjectURL","download","exportJSON","JSON","stringify","getFile","files","reader","FileReader","readAsText","onload","parse","result","createNew","taskDetail","launchNewTask","completedTasks","keyName","lowerKeyName","resArr","item","findIndex","x","push","sortName","arrayName","handleTitleChange","handleSwitchChange","displayName","AppBar","position","Toolbar","accept","htmlFor","grow","addButton","fontStyle","fontSize","Divider","appBar","Fab","fabButton","formControl","actionBar","top","bottom","flexGrow","zIndex","left","right","createMuiTheme","palette","primary","main","teal","secondary","indigo","typography","overrides","MuiAutocomplete","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7577bddd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreHoriz from '@material-ui/icons/MoreHoriz';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  taskStyle:{\r\n    border: '1px solid #ccc',\r\n    borderRadius: '25px',\r\n    width:'700px',\r\n    marginTop: '5px',\r\n  },\r\n  checkbox:{\r\n    // height: 0,\r\n    width: '5px',\r\n  },\r\n  taskContainer: {\r\n    display:'flex',\r\n  },\r\n  blackColor: {\r\n    color: 'black'\r\n  }\r\n});\r\n\r\nclass Task extends Component {\r\n\r\n  state = {\r\n    showDetails: false,\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      task,\r\n      completeTask,\r\n      launchDetails\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={classes.taskContainer} key={task.id}>\r\n        {task.status !== 'Completed' &&\r\n          <Checkbox\r\n            checked={task.status === 'Completed' ? true : false}\r\n            className={classes.checkbox}\r\n            onChange={() => completeTask(task.id)}\r\n            color=\"primary\"\r\n            size='small'\r\n            />\r\n        }\r\n        <TextField\r\n          className={classes.taskStyle}\r\n          disabled\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              paddingLeft: '5px',\r\n            },\r\n            classes:{\r\n              disabled: classes.blackColor\r\n            },\r\n          }}\r\n          value={task.description}\r\n          multiline\r\n        />\r\n          <IconButton\r\n          onClick={() => launchDetails('Edit', task.id)} \r\n          size='small'\r\n          >\r\n          <MoreHoriz\r\n            className={classes.moveButtons}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Task)","import React, { Component } from 'react';\r\nimport Task from './Task';\r\n\r\nexport default class TaskGroup extends Component {\r\n  render() {\r\n\r\n    const {\r\n      header,\r\n      tasks,\r\n      currentSort,\r\n      completeTask,\r\n      launchDetails,\r\n      getKeyName,\r\n      filterOption\r\n    } = this.props;\r\n\r\n    const lowercurrentSort = getKeyName(currentSort);\r\n    let groupTasks = [];\r\n\r\n    if (filterOption === 'Active') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.isActive === true ))\r\n    } else if(filterOption === 'Inactive') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.isActive === false && task.status !== 'Completed' ))\r\n    }  else if(filterOption === 'Completed') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.status === 'Completed' ))\r\n    } else {\r\n      groupTasks = tasks.filter((task) => task[lowercurrentSort] === header)\r\n    }\r\n\r\n    groupTasks.sort((a,b) => (a.priority > b.priority) ? 1 : -1);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {groupTasks.length !== 0 &&\r\n        <h2>{header}</h2>\r\n        }\r\n        {groupTasks.map ((task, i) => (\r\n          <Task\r\n          task={task}\r\n          key={i}\r\n          completeTask={completeTask}\r\n          launchDetails={launchDetails}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nconst styles = {\r\n  fieldStyle:{\r\n    width:'700px',\r\n    // margin: '5px',\r\n  },\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n    maxWidth: '90px'\r\n  },\r\n  fieldContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.5rem',\r\n  },\r\n  inputStyle: {\r\n    paddingLeft: '15px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px'\r\n  },\r\n  dateStyle: {\r\n    height: '40px',\r\n    padding: 0\r\n  },\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonStyle: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '5px'\r\n  },\r\n  headerName: {\r\n    color: '#aaa',\r\n    margin: '10px',\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px'\r\n  },\r\n  dialogContainer: {\r\n    marginBottom: '70px'\r\n  },\r\n};\r\n\r\nexport default class DetailModal extends Component {\r\n\r\n  state = {\r\n    id: this.props.type === 'Edit'? this.props.taskDetails.id : '',\r\n    description:  this.props.type === 'Edit'? this.props.taskDetails.description : '',\r\n    category: this.props.type === 'Edit'? this.props.taskDetails.category : '',\r\n    status: this.props.type === 'Edit'? this.props.taskDetails.status : '',\r\n    dueDate: this.props.type === 'Edit'? this.props.taskDetails.dueDate : moment().format('MM/DD/YYYY'),\r\n    actual: this.props.type === 'Edit'? this.props.taskDetails.actual : 0,\r\n    goal: this.props.type === 'Edit'? this.props.taskDetails.goal : 0,\r\n    priority: this.props.type === 'Edit'? this.props.taskDetails.priority : '',\r\n    assigned: this.props.type === 'Edit'? this.props.taskDetails.assigned : '',\r\n    contact: this.props.type === 'Edit'? this.props.taskDetails.contact : '',\r\n    isActive: this.props.type === 'Edit'? this.props.taskDetails.isActive : true,\r\n    activeDate: this.props.type === 'Edit'? this.props.taskDetails.activeDate : moment().format('MM/DD/YYYY'),\r\n    workTime: this.props.type === 'Edit'? this.props.taskDetails.workTime : [],\r\n    tags: this.props.type === 'Edit'? this.props.taskDetails.tags : [],\r\n    completedDate: this.props.type === 'Edit'? this.props.taskDetails.completedDate : '',\r\n    completedDates: this.props.type === 'Edit'? this.props.taskDetails.completedDates : [],\r\n    dueWeek: this.props.type === 'Edit'? this.props.taskDetails.dueweek : moment().startOf('isoweek').format('MM/DD/YYYY'),\r\n    dueMonth: this.props.type === 'Edit'? this.props.taskDetails.dueMonth : moment().format('MMMM YYYY'),\r\n    notes: this.props.type === 'Edit'? this.props.taskDetails.notes : '',\r\n    type: this.props.type === 'Edit'? this.props.taskDetails.type : 'One-time',\r\n    recurDays: this.props.type === 'Edit'? this.props.taskDetails.recurDays : 0,\r\n    isUpdating: false,\r\n    startTime: this.props.type === 'Edit'? this.props.taskDetails.startTime : moment({hour: 5}),\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  dateChange = (e) => {\r\n    this.setState({\r\n      dueDate: moment(e).format('MM/DD/YYYY'),\r\n      dueWeek: moment(e).startOf('week').format('MM/DD/YYYY'),\r\n      dueMonth: moment(e).format('MMMM YYYY'),\r\n    })\r\n  }\r\n\r\n  activeDateChange = (e) => {\r\n    this.setState({\r\n      activeDate: moment(e).format('MM/DD/YYYY'),\r\n      isActive: e = '' ? this.state.isActive : moment().format('YYYY-MM-DD') >= moment(e).format('YYYY-MM-DD') ? true : moment(e).format('YYYY-MM-DD')  > moment().format('YYYY-MM-DD') ? false : this.state.isActive\r\n    })\r\n  }\r\n\r\n  startTimeChange = (e) => {\r\n    this.setState(({\r\n      startTime: moment(e)\r\n    }))\r\n  }\r\n\r\n  onAutoChange = (e, newValue, fieldName) => {\r\n    this.setState({\r\n      [fieldName]: newValue\r\n    });\r\n  }\r\n\r\n  onStatusChange = (e, newValue, fieldName) => {\r\n    const {\r\n      type,\r\n      dueDate,\r\n      activeDate,\r\n      recurDays,\r\n      isUpdating,\r\n      completedDates\r\n    } = this.state\r\n    if (isUpdating === false) {\r\n      if (newValue === 'Completed') {\r\n        if (type === 'Recurring') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            status: '',\r\n            completedDate: '',\r\n            dueDate: moment(dueDate).add(recurDays, 'days').format('MM/DD/YYYYY'),\r\n            dueWeek: moment(dueDate).add(recurDays, 'days').startOf('week').format('MM/DD/YYYY'),\r\n            dueMonth: moment(dueDate).add(recurDays, 'days').format('MMMM YYYY'),\r\n            activeDate: moment(activeDate).add(recurDays, 'days'),\r\n            isActive: moment(activeDate).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD') ? true : false,\r\n            completedDates: [...completedDates, moment(dueDate).format('MM/DD/YYYY')]\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            }, () => this.saveCurrentTask())\r\n          });\r\n        } else if (type === 'One-time') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            completedDate: moment().format('MM/DD/YYYY'),\r\n            completedDates: [moment(dueDate).format('MM/DD/YYYY')],\r\n            status: 'Completed',\r\n            isActive: false\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            }, () => this.saveCurrentTask())\r\n          })\r\n        }\r\n      } else {\r\n        this.setState({\r\n          [fieldName]: newValue,\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  onCheck = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    })\r\n  }\r\n\r\n  uuidv4 = () => {\r\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n  }\r\n\r\n  addTask = () => {\r\n    this.props.createTask({\r\n      id: this.uuidv4(),\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      actual: this.state.actual,\r\n      goal: this.state.goal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      isActive: this.state.isActive,\r\n      activeDate: this.state.activeDate,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDate: this.state.completedDate,\r\n      completedDates: this.state.completedDates,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n      startTime: this.state.startTime\r\n    });\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  saveCurrentTask = () => {\r\n    this.props.saveTask(this.state.id, {\r\n      id: this.state.id,\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      actual: this.state.actual,\r\n      goal: this.state.goal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      isActive: this.state.isActive,\r\n      activeDate: this.state.activeDate,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDate: this.state.completedDate,\r\n      completedDates: this.state.completedDates,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n      startTime: this.state.startTime\r\n    });\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  deleteCurrentTask = () => {\r\n    this.props.deleteTask(this.state.id);\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  handleDeleteDate = (value) => {\r\n    const newDates = this.state.completedDates.filter((date) => date !== value)\r\n    this.setState({\r\n      completedDates: newDates,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      type,\r\n      categories,\r\n      assignedUsers,\r\n      contactUsers,\r\n      toggleDisplay\r\n    } = this.props;\r\n\r\n    // console.log(this.props)\r\n    // console.log(this.state)\r\n\r\n    return (\r\n      <div style={styles.dialogContainer}>\r\n        <div style={styles.headerContainer}> \r\n          <div style={styles.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Task Management\r\n            </Typography>\r\n          </div>\r\n          <div style={styles.headerClose}>\r\n            <IconButton\r\n              onClick={() => toggleDisplay('Tasks')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Description\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='description'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.description}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Category\r\n          </Typography>\r\n          <Autocomplete\r\n            size='small'\r\n            style={styles.fieldStyle}\r\n            options={categories}\r\n            defaultValue={this.state.category}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.category}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.category}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'category')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Type\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['One-time','Recurring']}\r\n            defaultValue={this.state.type}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.type}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.type}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'type')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Recurring Days\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='recurDays'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.recurDays}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Status\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['Not Started','In Progress','On Hold','Completed']}\r\n            defaultValue={this.state.status}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.status}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.status}\r\n            onInputChange={(e, newValue) => this.onStatusChange(e, newValue, 'status')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Priority\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='priority'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.priority}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Due Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                value={this.state.dueDate}\r\n                onChange={(e) => this.dateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Active Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                value={this.state.activeDate}\r\n                onChange={(e) => this.activeDateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Actual\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='actual'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.actual}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Goal\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='goal'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.goal}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Assigned\r\n          </Typography>\r\n          <Autocomplete\r\n            options={assignedUsers}\r\n            defaultValue={this.state.assigned}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.assigned}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.assigned}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'assigned')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Contact\r\n          </Typography>\r\n          <Autocomplete\r\n            options={contactUsers}\r\n            defaultValue={this.state.contact}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.contact}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.contact}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'contact')}\r\n            />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Active\r\n          </Typography>\r\n          <Checkbox\r\n            checked={this.state.isActive}\r\n            name='isActive'\r\n            onChange={this.onCheck}\r\n            color=\"primary\"\r\n            size='small'\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Notes\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='notes'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.notes}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n        <Typography style={styles.fieldLabel}>\r\n            Completed Dates\r\n          </Typography>\r\n          <Paper variant=\"outlined\" style={{maxHeight: 100, width: 200, overflow: 'auto'}}>\r\n            <List>\r\n              {\r\n                this.state.completedDates.map((date) => (\r\n                  <ListItem button>\r\n                    {date}\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton \r\n                        edge=\"end\" \r\n                        aria-label=\"delete\"\r\n                        onClick={() => this.handleDeleteDate(date)}>\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))\r\n              }\r\n            </List>\r\n          </Paper>\r\n        </div>\r\n        <div style={styles.buttonContainer}>\r\n          {type === 'Add' &&\r\n            <div style={styles.buttonStyle}>\r\n              <Button \r\n                style={styles.buttonStyle}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.addTask}\r\n                >\r\n                Add\r\n              </Button>\r\n            </div>\r\n          }\r\n          {type === 'Edit' &&\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.saveCurrentTask}\r\n                  >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.deleteCurrentTask}\r\n                  >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export const tasks = [\r\n  {\r\n    id: 1,\r\n    description: 'Fix the door',\r\n    category:'House',\r\n    status: 'Started',\r\n    dueDate: '8/17/2020',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2020',\r\n    notes: '',\r\n    dueWeek: '8/17/2020',\r\n    dueMonth: 'August 2020',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: '',\r\n    completedDates: [],\r\n  },\r\n  {\r\n    id: 2,\r\n    description: 'Check Transactions',\r\n    category:'Finance',\r\n    status: 'Started',\r\n    dueDate: '8/17/2020',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2020',\r\n    notes: '',\r\n    dueWeek: '8/17/2020',\r\n    dueMonth: 'August 2020',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: '',\r\n    completedDates: [],\r\n  },\r\n  {\r\n    id: 3,\r\n    description: 'Review Task list',\r\n    category:'Work',\r\n    status: 'Started',\r\n    dueDate: '8/17/2020',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2020',\r\n    notes: '',\r\n    dueWeek: '8/17/2020',\r\n    dueMonth: 'August 2020',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: '',\r\n    completedDates: [],\r\n  },\r\n  {\r\n    id: 4,\r\n    description: 'Get a lower interest rate',\r\n    category:'Finance',\r\n    status: 'Started',\r\n    dueDate: '8/17/2020',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2020',\r\n    notes: '',\r\n    dueWeek: '8/17/2020',\r\n    dueMonth: 'August 2020',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: '',\r\n    completedDates: [],\r\n  },\r\n  {\r\n    id: 5,\r\n    description: 'Fix the front steps',\r\n    category:'House',\r\n    status: 'Started',\r\n    dueDate: '8/17/2020',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2020',\r\n    notes: '',\r\n    dueWeek: '8/17/2020',\r\n    dueMonth: 'August 2020',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: '',\r\n    completedDates: [],\r\n  },\r\n  {\r\n    id: 6,\r\n    description: 'Go see a movie',\r\n    category:'Fun',\r\n    status: 'Started',\r\n    dueDate: '8/17/2020',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2020',\r\n    notes: '',\r\n    dueWeek: '8/17/2020',\r\n    dueMonth: 'August 2020',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: '',\r\n    completedDates: [],\r\n  },\r\n  {\r\n    id: 7,\r\n    description: 'Drink 8 cups of water',\r\n    category:'Daily',\r\n    status: 'Started',\r\n    dueDate: '7/16/2021',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '7/16/2021',\r\n    notes: '',\r\n    dueWeek: '8/10/2020',\r\n    dueMonth: 'August 2020',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: '1',\r\n    completedDates: ['05/01/2020', '06/01/2021', '06/02/2021', '06/03/2021' ],\r\n  },\r\n  {\r\n    id: 8,\r\n    description: 'Exercise',\r\n    category:'Daily',\r\n    status: 'Started',\r\n    dueDate: '8/17/2020',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '2',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2020',\r\n    notes: '',\r\n    dueWeek: '8/17/2020',\r\n    dueMonth: 'August 2020',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: '1',\r\n    completedDates: [],\r\n  },\r\n  {\r\n    id: 9,\r\n    description: 'Plan tommorows dinner',\r\n    category:'Daily',\r\n    status: 'Started',\r\n    dueDate: '8/17/2020',\r\n    actual: 0,\r\n    goal: 0,\r\n    priority: '3',\r\n    assigned: 'Adam',\r\n    contact: 'Dan',\r\n    isActive: true,\r\n    activeDate: '8/1/2020',\r\n    notes: '',\r\n    dueWeek: '8/17/2020',\r\n    dueMonth: 'August 2020',\r\n    completedDate:  '',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: '1',\r\n    completedDates: [],\r\n  },\r\n]","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collections from '@material-ui/icons/Collections';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class SortAlt extends Component {\r\n\r\n  state = {\r\n    sortOptions: [\r\n      'Category',\r\n      'Status',\r\n      'Priority',\r\n      'Assigned',\r\n      'Contact',\r\n      'Due Date',\r\n      'Due Week',\r\n      'Due Month',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (sortOption) => {\r\n    this.props.handleSortChange(sortOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <Collections />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.sortOptions.map((sortOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={sortOption}\r\n              onClick={() => this.handleClick(sortOption)}\r\n              >\r\n              {sortOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class ActiveFilter extends Component {\r\n\r\n  state = {\r\n    filterOptions: [\r\n      'Active',\r\n      'Inactive',\r\n      'Completed',\r\n      'All',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleFilterChange(filterOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <FilterList />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.filterOptions.map((filterOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={filterOption}\r\n              onClick={() => this.handleClick(filterOption)}\r\n              >\r\n              {filterOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TaskGroup from './TaskGroup';\r\nimport TaskDetails from './TaskDetails';\r\nimport {tasks} from './TestTasks';\r\nimport SortAlt from './SortAlt';\r\nimport ActiveFilter from './ActiveFilter';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n  taskContainer: {\r\n    maxWidth: '700px',\r\n    marginBottom: '70px'\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n    margin: '5px',\r\n  },\r\n  addButton: {\r\n    margin: '5px',\r\n    alignContent: 'center',\r\n    fontSize: '17px',\r\n    color: 'white'\r\n  },\r\n  actionBar: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  state = {\r\n    tasks: [],\r\n    headers: [],\r\n    lastSaved: null,\r\n    isLoading: false,\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n    currentSort: 'Category',\r\n    trackerName: 'Test Title',\r\n    selectedTask: null,\r\n    detailType: null,\r\n    categories: [],\r\n    assignedUsers: [],\r\n    contactUsers: [],\r\n    taskDetails: {},\r\n    filterOption: 'Active',\r\n    display: 'Tasks',\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // this.getServerData();\r\n    this.setState({\r\n      tasks: tasks\r\n    })\r\n    \r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.state.tasks !== prevState.tasks) {\r\n      this.getSortHeaders(this.state.tasks, this.state.currentSort);\r\n      this.getUniqueValues(this.state.tasks, 'category', 'categories');\r\n      this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers');\r\n      this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers');\r\n    }\r\n  }\r\n\r\n  fixMissingFields = () => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.completedDates === undefined) {\r\n        task.completedDates = []\r\n      }\r\n      return task;\r\n    })\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  getServerData = () => {\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n\r\n    if(listId !== undefined && listId !== null){\r\n      this.setState({\r\n        isLoading: true\r\n      },() => {\r\n        axios\r\n        .get(`https://guarded-mesa-76047.herokuapp.com/api/lists/${listId}`)\r\n        .then(res => this.setState({\r\n          trackerName: res.data.listName,\r\n          tasks: res.data.list,\r\n          lastSaved: res.data.lastSaved,\r\n          isLoading: false\r\n        }))\r\n        .then(() => {\r\n          this.activateTasks()\r\n          this.getSortHeaders(this.state.tasks, this.state.currentSort)\r\n          this.getUniqueValues(this.state.tasks, 'category', 'categories')\r\n          this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers')\r\n          this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers')\r\n          this.fixMissingFields()\r\n        })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  saveData = () => {\r\n    this.handleClose();\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n    const currentDT = new Date();\r\n    console.log(listId);\r\n\r\n    if(listId === null){\r\n      axios\r\n      .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n        list: this.state.tasks,\r\n        listName: this.state.trackerName,\r\n        lastSaved: new Date()\r\n      })\r\n      .then((res) => {\r\n        alert('New list created!')\r\n        return(res);\r\n      })\r\n      .then((res) => {\r\n        const newId = res.data._id;\r\n        const a = document.createElement(\"a\");\r\n        a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n        a.click();\r\n      })\r\n    } else {\r\n      axios\r\n      .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/update/${listId}`, {\r\n        list: this.state.tasks,\r\n        listName: this.state.trackerName,\r\n        lastSaved: currentDT\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          lastSaved: currentDT\r\n        })\r\n        // alert('Data saved successfully!')\r\n      });\r\n    }\r\n  }\r\n\r\n  downloadFile = (content, fileName, contentType) => {\r\n    const a = document.createElement(\"a\");\r\n    const file = new Blob([content], { type: contentType });\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = fileName;\r\n    a.click();\r\n  }\r\n\r\n  exportJSON = () => {\r\n    this.handleClose();\r\n    this.downloadFile(JSON.stringify(this.state.tasks), \"data.json\", \"text/plain\");\r\n  }\r\n\r\n  getFile = (e) => {\r\n    this.handleClose();\r\n    let files = e.target.files;\r\n    let reader = new FileReader();\r\n    reader.readAsText(files[0]);\r\n\r\n    reader.onload = e => {\r\n      this.setState({\r\n        tasks: JSON.parse(e.target.result)\r\n      })\r\n    };\r\n  }\r\n\r\n  createNew = () => {\r\n    this.handleClose();\r\n\r\n    axios\r\n    .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n      list: [],\r\n      listName: this.state.trackerName,\r\n      lastSaved: new Date()\r\n    })\r\n    .then((res) => {\r\n      alert('New list created!')\r\n      return(res);\r\n    })\r\n    .then((res) => {\r\n      const newId = res.data._id;\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n      a.click();\r\n    });\r\n  }\r\n\r\n  createTask = (task) => {\r\n    this.setState({ tasks: [...this.state.tasks, task]}, () => this.saveData());\r\n  }\r\n\r\n  launchDetails = (type, id) => {\r\n    const taskDetail = this.state.tasks.filter((task) => task.id === id)\r\n    this.setState({\r\n      detailType: type,\r\n      taskDetails: taskDetail[0]\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  launchNewTask = () => {\r\n    this.setState({\r\n      detailType: 'Add'\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  completeTask = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n        if (task.type === 'Recurring') {\r\n          task.dueDate = moment(task.dueDate).add(task.recurDays, 'days').format('MM/DD/YYYY');\r\n          task.dueWeek = moment(task.dueDate).add(task.recurDays, 'days').startOf('week').format('MM/DD/YYYY');\r\n          task.dueMonth = moment(task.dueDate).add(task.recurDays, 'days').format('MMMM YYYY');\r\n          task.activeDate = moment(task.activeDate).add(task.recurDays, 'days');\r\n          task.isActive = moment(task.activeDate).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD') ? true : false\r\n          task.completedDates = [...task.completedDates, moment(task.dueDate).format('MM/DD/YYYY')]\r\n        } else if (task.type === 'One-time') {\r\n          task.completedDate = moment().format('MM/DD/YYYY');\r\n          task.completedDates = [...task.completedDates, moment(task.dueDate).format('MM/DD/YYYY')]\r\n          task.status = 'Completed';\r\n          task.isActive = false;\r\n        }\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  activateTasks = () => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (moment().format('YYYY-MM-DD') >= moment(task.activeDate).format('YYYY-MM-DD') && task.activeDate !== '' && task.status !== 'Completed') {\r\n        task.isActive = true;\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  saveTask = (id, task) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState(\r\n      { tasks: [...newTasks, task],\r\n        completedTasks : task.status === 'completed' ? [...this.state.completedTasks, task] : this.state.completedTasks\r\n      }, () => this.saveData()\r\n      );\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  getSortHeaders = (data, keyName) => {\r\n    const lowerKeyName = this.getKeyName(keyName)\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[lowerKeyName] );\r\n      if(i <= -1){\r\n        resArr.push(item[lowerKeyName]);\r\n      }\r\n      return null;\r\n    });\r\n    resArr.sort();\r\n    this.setState({\r\n      headers: resArr,\r\n      currentSort: keyName,\r\n    })\r\n  }\r\n\r\n  getKeyName = (sortName) => {\r\n    let keyName = '';\r\n    switch (sortName) {\r\n      case 'Category':\r\n        keyName = \"category\";\r\n        break;\r\n      case 'Status':\r\n        keyName = \"status\";\r\n        break;\r\n      case 'Priority':\r\n        keyName = \"priority\";\r\n        break;\r\n      case 'Assigned':\r\n        keyName = \"assigned\";\r\n        break;\r\n      case 'Contact':\r\n        keyName = \"contact\";\r\n        break;\r\n      case 'Due Date':\r\n        keyName = \"dueDate\";\r\n        break;\r\n      case 'Due Week':\r\n        keyName = \"dueWeek\";\r\n        break;\r\n      case 'Due Month':\r\n        keyName = \"dueMonth\";\r\n        break;\r\n      default:\r\n        keyName = \"\";\r\n    }\r\n    return keyName;\r\n  }\r\n\r\n  getUniqueValues = (data, fieldName, arrayName) => {\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[fieldName] );\r\n      if(i <= -1){\r\n        resArr.push(item[fieldName]);\r\n      }\r\n      return null;\r\n    });\r\n    resArr.sort((a,b) => (a.priority > b.priority) ? 1 : -1);\r\n    this.setState({\r\n      [arrayName]: resArr\r\n    })\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleTitleChange = (e) => {\r\n    this.setState({\r\n      trackerName: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSwitchChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.checked\r\n    })\r\n  }\r\n\r\n  handleSortChange = (sortOption) => {\r\n    this.getSortHeaders(this.state.tasks, sortOption)\r\n  };\r\n\r\n  handleFilterChange = (filterOption) => {\r\n    this.setState({\r\n      filterOption\r\n    })\r\n  };\r\n\r\n  toggleDisplay = (displayName) => {\r\n    this.setState({\r\n      display: displayName\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      classes\r\n    } = this.props;\r\n\r\n    // console.log('Main State:', this.state);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar \r\n          position=\"fixed\" \r\n          color=\"primary\"\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={this.handleMenu}\r\n                >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={this.state.anchorEl}\r\n                  getContentAnchorEl={null}\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  open={this.state.setAnchorEl}\r\n                  onClose={this.handleClose}\r\n                >\r\n                  <input \r\n                    type=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    name=\"file\" \r\n                    onChange={this.getFile}\r\n                    accept=\".json\"\r\n                    />\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <MenuItem onClick={() => this.getFile()}>Import JSON</MenuItem>\r\n                  </label>\r\n                  <MenuItem onClick={() => this.exportJSON()}>Export Data</MenuItem>\r\n                  {/* <MenuItem onClick={() => this.saveData()}>Save Data</MenuItem> */}\r\n                  <MenuItem onClick={() => this.createNew()}>Create New</MenuItem>\r\n                </Menu>\r\n              <Typography variant=\"h6\">\r\n                  Task Tracker\r\n              </Typography>\r\n              <div className={classes.grow} />\r\n              <div className={classes.addButton}>\r\n                <SortAlt\r\n                  handleSortChange={this.handleSortChange}\r\n                />\r\n              </div>\r\n              <div className={classes.addButton}>\r\n                <ActiveFilter\r\n                  handleFilterChange={this.handleFilterChange}\r\n                />\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Toolbar />\r\n          {this.state.display === 'Tasks' &&\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  fontStyle:'italic',\r\n                  color:'#bbb',\r\n                }}>\r\n                  {this.state.lastSaved === null ? 'Not Saved' : 'Last Saved: ' + this.state.lastSaved}\r\n              </div>\r\n              <TextField\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                  style: {\r\n                    display: 'block',\r\n                    fontSize: '2em',\r\n                    marginTop: '0.3em',\r\n                    marginBottom: '0.3em',\r\n                    // padding: 0\r\n                  },\r\n                }}\r\n                value={this.state.trackerName}\r\n                onChange={this.handleTitleChange}\r\n              />\r\n              <Divider />\r\n              <div className={classes.taskContainer}>\r\n                {this.state.headers.map ((header, i) => (\r\n                  <TaskGroup\r\n                    tasks={this.state.tasks}\r\n                    header={header}\r\n                    currentSort={this.state.currentSort}\r\n                    key={i}\r\n                    completeTask={this.completeTask}\r\n                    launchDetails={this.launchDetails}\r\n                    getKeyName={this.getKeyName}\r\n                    filterOption={this.state.filterOption}\r\n                    />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n          {this.state.display === 'Details' &&\r\n            <TaskDetails\r\n              toggleDisplay={this.toggleDisplay}\r\n              type={this.state.detailType}\r\n              categories={this.state.categories}\r\n              assignedUsers={this.state.assignedUsers}\r\n              contactUsers={this.state.contactUsers}\r\n              createTask={this.createTask}\r\n              taskDetails={this.state.taskDetails}\r\n              saveTask={this.saveTask}\r\n              deleteTask={this.deleteTask}\r\n            />\r\n          }\r\n          {this.state.display !== 'Details' &&\r\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n              <Toolbar>\r\n                <Fab \r\n                  color=\"secondary\" \r\n                  aria-label=\"add\" \r\n                  className={classes.fabButton}\r\n                  onClick={() => this.launchNewTask()}\r\n                  >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </Toolbar>\r\n            </AppBar>\r\n          }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Main)","import React from 'react';\nimport Main from './components/Main';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { teal, indigo } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: teal[500],\n    },\n    secondary: {\n      main: indigo[500],\n    },\n  },\n\n  typography: {\n\n  },\n  overrides: {\n    MuiAutocomplete: {\n      // paper: {\n      //   backgroundColor: 'blue'\n      // },\n      // option: {\n      //   backgroundColor: 'green'\n      // },\n      // listbox: {\n      //   backgroundColor: '#bbdefb',\n      // }\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}