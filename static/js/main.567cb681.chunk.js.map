{"version":3,"sources":["components/ActionMenu.js","components/Task.js","components/TaskGroup.js","components/TaskDetails.js","components/CompletedDetail.js","components/TestTasks.js","components/SortAlt.js","components/RelatedLists.js","components/ActiveFilter.js","components/CategoryFilter.js","components/Report.js","components/AddRelatedList.js","components/Main.js","App.js","index.js"],"names":["ActionMenu","state","anchorEl","setAnchorEl","handleMenu","event","setState","currentTarget","handleClose","handleClick","filterOption","props","handleFilterChange","this","ignoreTask","makeCurrent","skipOccurence","snoozeWeek","launchCompleteCompleted","Fragment","IconButton","size","onClick","Menu","id","getContentAnchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Component","Task","showDetails","classes","task","completeTask","launchDetails","className","taskContainer","key","status","Checkbox","checked","checkbox","onChange","color","TextField","taskStyle","style","borderColor","dueDate","disabled","InputProps","disableUnderline","paddingLeft","blackColor","value","description","multiline","moveButtons","withStyles","theme","border","borderRadius","width","marginTop","display","TaskGroup","header","tasks","currentSort","getKeyName","categoryFilter","lowercurrentSort","groupTasks","filter","moment","format","add","sort","a","b","Date","startTime","includes","category","length","map","i","styles","fieldStyle","fieldLabel","alignContent","minWidth","maxWidth","fieldContainer","alignItems","margin","inputStyle","paddingTop","paddingBottom","dateStyle","height","padding","dateContainer","buttonContainer","justifyContent","buttonStyle","headerName","headerClose","headerContainer","dialogContainer","marginBottom","paperContainer","overflow","DetailModal","mode","taskDetails","uuidv4","subCategory","hours","weeklyGoal","priority","assigned","contact","workTime","tags","completedDates","dueWeek","dueweek","startOf","dueMonth","notes","type","recurDays","isUpdating","points","e","target","name","sortCompleted","newCompleted","completedDate","console","log","dateChange","startTimeChange","onAutoChange","newValue","fieldName","onStatusChange","curDueDate","undefined","curRecurDays","completedId","saveCurrentTask","onCheck","addTask","createTask","toggleDisplay","saveTask","deleteCurrentTask","deleteTask","handleTimeChange","handleDeleteCompleted","item","window","scrollTo","categories","subcategories","assignedUsers","contactUsers","Typography","variant","Autocomplete","options","defaultValue","getOptionLabel","option","renderInput","params","freeSolo","inputValue","onInputChange","utils","DateFnsUtils","disableToolbar","autoOk","toISOString","KeyboardButtonProps","inputVariant","helperText","error","placeholder","mask","date","Paper","List","ListItem","button","launchEditCompleted","ListItemSecondaryAction","edge","aria-label","Button","launchNewCompleted","CompletedDetail","completedDetails","Math","random","toString","substring","now","completeTaskWithHours","completeCompletedTask","addCompleted","saveCompleted","startTimeValue","SortAlt","sortOptions","sortOption","handleSortChange","selected","RelatedLists","changeList","relatedLists","ActiveFilter","filterOptions","CategoryFilter","handleCategoryFilterChange","nextProps","prevProps","Report","categoryReport","updateReportWeek","reportWeek","reportContainer","countContainer","totalPoints","weeklyPoints","toFixed","flexWrap","AddRelatedList","listId","handleSave","addListValue","Main","headers","lastSaved","isLoading","trackerName","selectedTask","completedForm","debugMode","componentDidMount","updateData","getServerData","componentDidUpdate","prevState","getSortHeaders","getUniqueValues","data","search","location","URLSearchParams","get","axios","then","res","listName","list","document","createElement","href","click","saveData","currentDT","post","alert","newId","_id","downloadFile","content","fileName","contentType","file","Blob","URL","createObjectURL","download","exportJSON","JSON","stringify","getFile","files","reader","FileReader","readAsText","onload","parse","result","createNew","taskDetail","launchNewTask","newTasks","makeAllActiveCurrent","completedTasks","keyName","lowerKeyName","resArr","findIndex","x","push","startTimeNoNulls","startTimeDay","startTimeNight","sortName","arrayName","handleTitleChange","newCategoryFilter","displayName","calculatePoints","pointsArray","j","parseInt","k","newPoints","direction","subtract","launchReport","launchAddList","curTaskDetails","newTaskDetails","completed","AppBar","position","Toolbar","accept","htmlFor","grow","addButton","fontStyle","fontSize","Divider","appBar","Fab","fabButton","formControl","actionBar","top","bottom","flexGrow","zIndex","left","right","createMuiTheme","palette","primary","main","teal","secondary","indigo","typography","overrides","MuiAutocomplete","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.567cb681.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SnoozeIcon from '@material-ui/icons/Snooze';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\n\r\nexport default class ActionMenu extends Component {\r\n\r\n  state = {\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleFilterChange(filterOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      ignoreTask,\r\n      makeCurrent,\r\n      skipOccurence,\r\n      snoozeWeek,\r\n      launchCompleteCompleted,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          size='small'\r\n          onClick={this.handleMenu}\r\n          >\r\n          <MoreVert />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          <MenuItem\r\n            onClick={ignoreTask}\r\n            >\r\n            Snooze to Next Day\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={snoozeWeek}\r\n            >\r\n            Snooze to Next Week\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={makeCurrent}\r\n            >\r\n            Make Current\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={skipOccurence}\r\n            >\r\n            Skip Occurence\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={launchCompleteCompleted}\r\n            >\r\n            Complete with Hours\r\n          </MenuItem>\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ActionMenu from './ActionMenu';\r\n\r\nconst styles = (theme) => ({\r\n  taskStyle:{\r\n    border: '1px solid',\r\n    borderRadius: '25px',\r\n    width:'700px',\r\n    marginTop: '5px',\r\n  },\r\n  checkbox:{\r\n    // height: 0,\r\n    width: '5px',\r\n  },\r\n  taskContainer: {\r\n    display:'flex',\r\n  },\r\n  blackColor: {\r\n    color: 'black'\r\n  }\r\n});\r\n\r\nclass Task extends Component {\r\n\r\n  state = {\r\n    showDetails: false,\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      task,\r\n      completeTask,\r\n      ignoreTask,\r\n      makeCurrent,\r\n      snoozeWeek,\r\n      skipOccurence,\r\n      launchDetails,\r\n      launchCompleteCompleted,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={classes.taskContainer} key={task.id}>\r\n        {task.status !== 'Completed' &&\r\n          <Checkbox\r\n            checked={task.status === 'Completed' ? true : false}\r\n            className={classes.checkbox}\r\n            onChange={() => completeTask(task.id)}\r\n            color=\"primary\"\r\n            size='small'\r\n            />\r\n        }\r\n        <ActionMenu \r\n          snoozeWeek={() => snoozeWeek(task.id)}\r\n          skipOccurence={() => skipOccurence(task.id)}\r\n          ignoreTask={() => ignoreTask(task.id)}\r\n          makeCurrent={() => makeCurrent(task.id)}\r\n          launchCompleteCompleted={() => launchCompleteCompleted(task.id)}\r\n        />\r\n        <TextField\r\n          className={classes.taskStyle}\r\n          style={{\r\n            borderColor: this.props.task.dueDate === 'Invalid date' ? 'red' : '#ccc',\r\n          }}\r\n          disabled\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              paddingLeft: '5px',\r\n            },\r\n            classes:{\r\n              disabled: classes.blackColor\r\n            },\r\n          }}\r\n          value={task.description}\r\n          multiline\r\n        />\r\n        <IconButton\r\n        onClick={() => launchDetails('Edit', task.id)} \r\n        size='small'\r\n        >\r\n          <EditIcon\r\n            className={classes.moveButtons}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Task)","import React, { Component } from 'react';\r\nimport Task from './Task';\r\nimport moment from 'moment';\r\n\r\nexport default class TaskGroup extends Component {\r\n  render() {\r\n\r\n    const {\r\n      header,\r\n      tasks,\r\n      currentSort,\r\n      completeTask,\r\n      ignoreTask,\r\n      makeCurrent,\r\n      snoozeWeek,\r\n      skipOccurence,\r\n      launchDetails,\r\n      getKeyName,\r\n      filterOption,\r\n      categoryFilter,\r\n      launchCompleteCompleted,\r\n    } = this.props;\r\n\r\n    const lowercurrentSort = getKeyName(currentSort);\r\n    let groupTasks = [];\r\n\r\n    if (filterOption === 'Upcoming') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.status !== 'Completed' && moment(task.dueDate).format('YYYY-MM-DD') < moment().add(7, 'days').format('YYYY-MM-DD')))\r\n    } else if(filterOption === 'Upcoming Month') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.status !== 'Completed' && moment(task.dueDate).format('YYYY-MM-DD') < moment().add(30, 'days').format('YYYY-MM-DD')))\r\n    } else if(filterOption === 'Completed') {\r\n      groupTasks = tasks.filter((task) => (task[lowercurrentSort] === header && task.status === 'Completed' ))\r\n    } else {\r\n      groupTasks = tasks.filter((task) => task[lowercurrentSort] === header)\r\n    }\r\n\r\n    // groupTasks.sort((a,b) => (a.priority > b.priority) ? 1 : -1);\r\n\r\n    groupTasks.sort((a,b) => (new Date('1970/01/01 ' + a.startTime) - new Date('1970/01/01 ' + b.startTime)));\r\n\r\n    groupTasks = groupTasks.filter((task) => (categoryFilter.includes(task.category) || categoryFilter.includes('All')))\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {groupTasks.length !== 0 &&\r\n        <h2>{header}</h2>\r\n        }\r\n        {groupTasks.map ((task, i) => (\r\n          <Task\r\n          task={task}\r\n          key={i}\r\n          snoozeWeek={snoozeWeek}\r\n          skipOccurence={skipOccurence}\r\n          completeTask={completeTask}\r\n          ignoreTask={ignoreTask}\r\n          makeCurrent={makeCurrent}\r\n          launchDetails={launchDetails}\r\n          launchCompleteCompleted={launchCompleteCompleted}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nconst styles = {\r\n  fieldStyle:{\r\n    width:'700px',\r\n    // margin: '5px',\r\n  },\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n    maxWidth: '90px'\r\n  },\r\n  fieldContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.5rem',\r\n  },\r\n  inputStyle: {\r\n    paddingLeft: '15px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px'\r\n  },\r\n  dateStyle: {\r\n    height: '40px',\r\n    padding: 0\r\n  },\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonStyle: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '5px'\r\n  },\r\n  headerName: {\r\n    color: '#aaa',\r\n    margin: '10px',\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px'\r\n  },\r\n  dialogContainer: {\r\n    marginBottom: '70px'\r\n  },\r\n  paperContainer: {\r\n    height: '80px',\r\n    padding: 0,\r\n    width: 400,\r\n    overflow: 'auto'\r\n  },\r\n};\r\n\r\nexport default class DetailModal extends Component {\r\n\r\n  state = {\r\n    id: this.props.mode === 'Edit'? this.props.taskDetails.id : this.props.uuidv4(),\r\n    description:  this.props.mode === 'Edit'? this.props.taskDetails.description : '',\r\n    category: this.props.mode === 'Edit'? this.props.taskDetails.category : '',\r\n    subCategory: this.props.mode === 'Edit'? this.props.taskDetails.subCategory : '',\r\n    status: this.props.mode === 'Edit'? this.props.taskDetails.status : '',\r\n    dueDate: this.props.mode === 'Edit'? this.props.taskDetails.dueDate : moment().format('YYYY-MM-DD'),\r\n    hours: this.props.mode === 'Edit'? this.props.taskDetails.hours : 0,\r\n    weeklyGoal: this.props.mode === 'Edit'? this.props.taskDetails.weeklyGoal : 0,\r\n    priority: this.props.mode === 'Edit'? this.props.taskDetails.priority : '',\r\n    assigned: this.props.mode === 'Edit'? this.props.taskDetails.assigned : '',\r\n    contact: this.props.mode === 'Edit'? this.props.taskDetails.contact : '',\r\n    workTime: this.props.mode === 'Edit'? this.props.taskDetails.workTime : [],\r\n    tags: this.props.mode === 'Edit'? this.props.taskDetails.tags : [],\r\n    completedDates: this.props.mode === 'Edit'? this.props.taskDetails.completedDates : [],\r\n    dueWeek: this.props.mode === 'Edit'? this.props.taskDetails.dueweek : moment().startOf('isoweek').format('YYYY-MM-DD'),\r\n    dueMonth: this.props.mode === 'Edit'? this.props.taskDetails.dueMonth : moment().format('YYYY-MM'),\r\n    notes: this.props.mode === 'Edit'? this.props.taskDetails.notes : '',\r\n    type: this.props.mode === 'Edit'? this.props.taskDetails.type : 'One-time',\r\n    recurDays: this.props.mode === 'Edit'? this.props.taskDetails.recurDays : 0,\r\n    isUpdating: false,\r\n    startTime: this.props.mode === 'Edit'? this.props.taskDetails.startTime : '12:00 AM',\r\n    points: this.props.mode === 'Edit'? this.props.taskDetails.points : '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    this.sortCompleted();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sortCompleted = () => {\r\n    const newCompleted = this.state.completedDates.sort((a, b) => new Date(b.completedDate) - new Date(a.completedDate));\r\n    console.log('Test', newCompleted);\r\n    this.setState({\r\n      completedDates: newCompleted,\r\n    })\r\n\r\n  }\r\n\r\n  dateChange = (e) => {\r\n    this.setState({\r\n      dueDate: moment(e).format('YYYY-MM-DD'),\r\n      dueWeek: moment(e).startOf('week').format('YYYY-MM-DD'),\r\n      dueMonth: moment(e).format('YYYY-MM'),\r\n    })\r\n  }\r\n\r\n  startTimeChange = (e) => {\r\n    this.setState(({\r\n      startTime: moment(e)\r\n    }))\r\n  }\r\n\r\n  onAutoChange = (e, newValue, fieldName) => {\r\n    this.setState({\r\n      [fieldName]: newValue\r\n    });\r\n  }\r\n\r\n  onStatusChange = (e, newValue, fieldName) => {\r\n    const {\r\n      type,\r\n      dueDate,\r\n      recurDays,\r\n      isUpdating,\r\n      completedDates\r\n    } = this.state\r\n    if (isUpdating === false) {\r\n      if (newValue === 'Completed') {\r\n        let curDueDate = dueDate === undefined ? moment().format('YYYY-MM-DD') : dueDate;\r\n        let curRecurDays = recurDays === undefined ? 0 : recurDays;\r\n        if (type === 'Recurring' || type === 'Habit') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            status: 'Not Started',\r\n            recurDays: curRecurDays,\r\n            dueDate: moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM-DD'),\r\n            dueWeek: moment(curDueDate).add(curRecurDays, 'days').startOf('week').format('YYYY-MM-DD'),\r\n            dueMonth: moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM'),\r\n            completedDates: [...completedDates,\r\n              {\r\n              completedId: this.props.uuidv4(),\r\n              completedDate: moment(curDueDate).format('YYYY-MM-DD'),\r\n              hours: 0\r\n              }\r\n            ],\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            }, () => this.saveCurrentTask())\r\n          });\r\n        } else if (type === 'One-time') {\r\n          this.setState({\r\n            isUpdating: true,\r\n            status: 'Completed',\r\n            dueDate: curDueDate,\r\n            dueWeek: moment(curDueDate).startOf('week').format('YYYY-MM-DD'),\r\n            dueMonth: moment(curDueDate).format('YYYY-MM'),\r\n            completedDates: [{\r\n              completedId: this.props.uuidv4(),\r\n              completedDate: moment(curDueDate).format('YYYY-MM-DD'),\r\n              hours: 0\r\n              }],\r\n          }, ()=> {\r\n            this.setState({ \r\n              isUpdating: false,\r\n            }, () => this.saveCurrentTask())\r\n          })\r\n        }\r\n      } else {\r\n        this.setState({\r\n          [fieldName]: newValue,\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  onCheck = () => {\r\n    // this.setState({\r\n    //   isActive: !this.state.isActive\r\n    // })\r\n  }\r\n\r\n  addTask = () => {\r\n    this.props.createTask({\r\n      id: this.state.id,\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      subCategory: this.state.subCategory,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      hours: this.state.hours,\r\n      weeklyGoal: this.state.weeklyGoal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDates: this.state.completedDates,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n      startTime: this.state.startTime,\r\n      points: this.state.points,\r\n    });\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  saveCurrentTask = () => {\r\n    this.props.saveTask(this.state.id, {\r\n      id: this.state.id,\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      subCategory: this.state.subCategory,\r\n      status: this.state.status,\r\n      dueDate: this.state.dueDate,\r\n      hours: this.state.hours,\r\n      weeklyGoal: this.state.weeklyGoal,\r\n      priority: this.state.priority,\r\n      assigned: this.state.assigned,\r\n      contact: this.state.contact,\r\n      workTime: this.state.workTime,\r\n      tags: this.state.tags,\r\n      completedDates: this.state.completedDates,\r\n      dueWeek: this.state.dueWeek,\r\n      dueMonth: this.state.dueMonth,\r\n      notes: this.state.notes,\r\n      type: this.state.type,\r\n      recurDays: this.state.recurDays,\r\n      startTime: this.state.startTime,\r\n      points: this.state.points,\r\n    });\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  deleteCurrentTask = () => {\r\n    this.props.deleteTask(this.state.id);\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  // handleDeleteDate = (value) => {\r\n  //   const newDates = this.state.completedDates.filter((date) => date !== value)\r\n  //   this.setState({\r\n  //     completedDates: newDates,\r\n  //   });\r\n  // }\r\n\r\n  handleTimeChange = (value) => {\r\n    this.setState({\r\n      startTime: moment(value).format('hh:mm A'),\r\n    })\r\n  };\r\n\r\n  handleDeleteCompleted = (id) => {\r\n    const newCompleted = this.state.completedDates.filter((item) => item.completedId !== id)\r\n    this.setState({\r\n      completedDates: newCompleted,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      mode,\r\n      categories,\r\n      subcategories,\r\n      assignedUsers,\r\n      contactUsers,\r\n      toggleDisplay\r\n    } = this.props;\r\n\r\n    return (\r\n      <div style={styles.dialogContainer}>\r\n        <div style={styles.headerContainer}> \r\n          <div style={styles.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Task Management\r\n            </Typography>\r\n          </div>\r\n          <div style={styles.headerClose}>\r\n            <IconButton\r\n              onClick={() => toggleDisplay('Tasks')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Description\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='description'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.description}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Category\r\n          </Typography>\r\n          <Autocomplete\r\n            size='small'\r\n            style={styles.fieldStyle}\r\n            options={categories}\r\n            defaultValue={this.state.category}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.category}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.category}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'category')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Sub Category\r\n          </Typography>\r\n          <Autocomplete\r\n            size='small'\r\n            style={styles.fieldStyle}\r\n            options={subcategories}\r\n            defaultValue={this.state.subCategory}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.subCategory}\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.subCategory}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'subCategory')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Type\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['One-time','Recurring','Habit','Activity','Time-block', 'Event']}\r\n            defaultValue={this.state.type}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.type}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.type}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'type')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Recurring Days\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='recurDays'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.recurDays}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Status\r\n          </Typography>\r\n          <Autocomplete\r\n            options={['Not Started','In Progress','On Hold','Completed']}\r\n            defaultValue={this.state.status}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.status}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            inputValue={this.state.status}\r\n            onInputChange={(e, newValue) => this.onStatusChange(e, newValue, 'status')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Priority\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='priority'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.priority}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Due Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"yyyy-MM-dd\"\r\n                value={moment(this.state.dueDate).toISOString()}\r\n                onChange={(e) => this.dateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Start Time\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardTimePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                helperText={''}\r\n                error={false}\r\n                placeholder=\"12:00 AM\"\r\n                mask=\"__:__ _M\"\r\n                value={moment('01/01/2000' + ' ' + this.state.startTime)}\r\n                onChange={date => this.handleTimeChange(date)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change time',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Hours\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='hours'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.hours}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Weekly Goal\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='weeklyGoal'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.weeklyGoal}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Points\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='points'\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.points}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Assigned\r\n          </Typography>\r\n          <Autocomplete\r\n            options={assignedUsers}\r\n            defaultValue={this.state.assigned}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.assigned}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.assigned}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'assigned')}\r\n            />\r\n        </ div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Contact\r\n          </Typography>\r\n          <Autocomplete\r\n            options={contactUsers}\r\n            defaultValue={this.state.contact}\r\n            getOptionLabel={(option) => typeof option === 'string' ? option : option.contact}\r\n            style={styles.fieldStyle}\r\n            size='small'\r\n            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n            freeSolo\r\n            inputValue={this.state.contact}\r\n            onInputChange={(e, newValue) => this.onAutoChange(e, newValue, 'contact')}\r\n            />\r\n        </div>\r\n        {/* <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Active\r\n          </Typography>\r\n          <Checkbox\r\n            checked={this.state.isActive}\r\n            name='isActive'\r\n            onChange={this.onCheck}\r\n            color=\"primary\"\r\n            size='small'\r\n          />\r\n        </div> */}\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Notes\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='notes'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.notes}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Completed Dates\r\n          </Typography>\r\n          <Paper \r\n            variant=\"outlined\" \r\n            style={styles.paperContainer}>\r\n            <List>\r\n              {\r\n                this.state.completedDates.map((date) => (\r\n                  <ListItem \r\n                  button\r\n                  onClick={() => this.props.launchEditCompleted(this.state, date)}\r\n                  >\r\n                    Date: {date.completedDate}, Hours: {date.hours}\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton \r\n                        edge=\"end\" \r\n                        aria-label=\"delete\"\r\n                        onClick={() => this.handleDeleteCompleted(date.completedId)}>\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))\r\n              }\r\n            </List>\r\n          </Paper>\r\n          <div style={styles.buttonStyle}>\r\n              <Button \r\n                style={styles.buttonStyle}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => this.props.launchNewCompleted(this.state)}\r\n                >\r\n                +\r\n              </Button>\r\n            </div>\r\n        </div>\r\n        <div style={styles.buttonContainer}>\r\n          {mode === 'Add' &&\r\n            <div style={styles.buttonStyle}>\r\n              <Button \r\n                style={styles.buttonStyle}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.addTask}\r\n                >\r\n                Add\r\n              </Button>\r\n            </div>\r\n          }\r\n          {mode === 'Edit' &&\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.saveCurrentTask}\r\n                  >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.deleteCurrentTask}\r\n                  >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport moment from 'moment';\r\n\r\nconst styles = {\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n    maxWidth: '90px'\r\n  },\r\n  fieldContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.5rem',\r\n  },\r\n  inputStyle: {\r\n    paddingLeft: '15px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px'\r\n  },\r\n  dateStyle: {\r\n    height: '40px',\r\n    padding: 0\r\n  },\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignContent: 'left',\r\n    alignItems: 'left',\r\n    justifyContent: 'left',\r\n  },\r\n  buttonStyle: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '5px'\r\n  },\r\n  headerName: {\r\n    color: '#aaa',\r\n    margin: '10px',\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px'\r\n  },\r\n  dialogContainer: {\r\n    marginBottom: '70px'\r\n  },\r\n};\r\n\r\nexport default class CompletedDetail extends Component {\r\n\r\n  state = {\r\n    completedId: this.props.type === 'Edit'? this.props.completedDetails.completedId : '',\r\n    completedDate: this.props.type === 'Edit'? this.props.completedDetails.completedDate : this.props.type === 'Complete' ? moment().format('YYYY-MM-DD') : '',\r\n    hours:  this.props.type === 'Edit'? this.props.completedDetails.hours : '',\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  uuidv4 = () => {\r\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n  }\r\n\r\n  dateChange = (e) => {\r\n    this.setState({\r\n      completedDate: moment(e).format('YYYY-MM-DD'),\r\n    })\r\n  }\r\n\r\n  completeTaskWithHours = () => {\r\n    this.props.completeCompletedTask(this.props.taskDetails.id, this.state.completedDate, this.state.hours);\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={styles.dialogContainer}>\r\n        <div style={styles.headerContainer}> \r\n          <div style={styles.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Completed\r\n            </Typography>\r\n          </div>\r\n          <div style={styles.headerClose}>\r\n            <IconButton\r\n              onClick={() => this.props.toggleDisplay('Details')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Completed Date\r\n          </Typography>\r\n          <div style={styles.dateContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                autoOk={true}\r\n                variant=\"inline\"\r\n                format=\"yyyy-MM-dd\"\r\n                value={moment(this.state.completedDate).toISOString()}\r\n                onChange={(e) => this.dateChange(e)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'completed date',\r\n                }}\r\n                inputVariant=\"outlined\"\r\n                InputProps={{\r\n                  style: styles.dateStyle\r\n                }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            Hours\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='hours'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.hours}\r\n            multiline\r\n          />\r\n        </div>\r\n        {this.props.type === \"Add\" && \r\n          <div style={styles.buttonContainer}>\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => this.props.addCompleted({\r\n                    completedId: this.uuidv4(),\r\n                    completedDate: this.state.completedDate,\r\n                    hours: this.state.hours,\r\n                  })}\r\n                  >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          </div>\r\n        }\r\n        {this.props.type === \"Edit\" && \r\n          <div style={styles.buttonContainer}>\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => this.props.saveCompleted(this.state.completedId, {\r\n                    completedId: this.state.completedId,\r\n                    completedDate: this.state.completedDate,\r\n                    hours: this.state.hours,\r\n                  })}\r\n                  >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          </div>\r\n        }\r\n        {this.props.type === \"Complete\" && \r\n          <div style={styles.buttonContainer}>\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => this.completeTaskWithHours()}\r\n                  >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          </div>\r\n        }\r\n        {this.props.type === \"Complete\" && \r\n          <div style={styles.buttonContainer}>\r\n            <React.Fragment>\r\n              <div style={styles.buttonStyle}>\r\n                <Button \r\n                  style={styles.buttonStyle}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => this.props.toggleDisplay('Tasks')}\r\n                  >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export const tasks = [\r\n  {\r\n    id: 1,\r\n    description: 'Fix the door',\r\n    category:'House',\r\n    subCategory: 'Improvements',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 0,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Jim',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n    startTime: \"08:00 AM\",\r\n    startTimeValue: 800,\r\n  },\r\n  {\r\n    id: 2,\r\n    description: 'Check Transactions',\r\n    category:'Finance',\r\n    subCategory: '',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 0,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Jim',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n    startTime: \"08:00 AM\",\r\n    startTimeValue: 800,\r\n  },\r\n  {\r\n    id: 3,\r\n    description: 'Review Task list',\r\n    category:'Work',\r\n    subCategory: '',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 3,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Jim',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n    startTime: \"08:00 AM\",\r\n    startTimeValue: 800,\r\n  },\r\n  {\r\n    id: 4,\r\n    description: 'Get a lower interest rate',\r\n    category:'Finance',\r\n    subCategory: '',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 3,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Jim',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n    startTime: \"08:30 PM\",\r\n    startTimeValue: 830,\r\n  },\r\n  {\r\n    id: 5,\r\n    description: 'Fix the front steps',\r\n    category:'House',\r\n    subCategory: 'Fixes',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 2,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Jim',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [],\r\n    points: 0,\r\n    startTime: null,\r\n    startTimeValue: null,\r\n  },\r\n  {\r\n    id: 6,\r\n    description: 'Watch Star Wars',\r\n    category:'Fun',\r\n    subCategory: 'Movie',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 2,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Jim',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'One-time',\r\n    recurDays: 0,\r\n    completedDates: [\r\n      {\r\n        completedId: 1,\r\n        completedDate: '2022-06-01',\r\n        hours: 1\r\n      },\r\n      {\r\n        completedId: 2,\r\n        completedDate: '2022-06-02',\r\n        hours: 1\r\n      }\r\n    ],\r\n    points: 0,\r\n    startTime: null,\r\n    startTimeValue: null,\r\n  },\r\n  {\r\n    id: 7,\r\n    description: 'Drink 8 cups of water',\r\n    category:'Health',\r\n    subCategory: 'Daily',\r\n    status: 'Started',\r\n    dueDate: '2021-08-08',\r\n    hours: 1,\r\n    weeklyGoal: 0,\r\n    priority: '1',\r\n    assigned: 'Adam',\r\n    contact: 'Jim',\r\n    notes: '',\r\n    dueWeek: '2021-08-08',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Habit',\r\n    recurDays: 1,\r\n    completedDates: [\r\n      {\r\n        completedId: 1,\r\n        completedDate: '2022-06-01',\r\n        hours: 1\r\n      },\r\n      {\r\n        completedId: 2,\r\n        completedDate: '2022-06-02',\r\n        hours: 1\r\n      },\r\n      {\r\n        completedId: 3,\r\n        completedDate: '2022-07-02',\r\n        hours: 1\r\n      },\r\n      {\r\n        completedId: 4,\r\n        completedDate: '2022-07-03',\r\n        hours: 1\r\n      }\r\n    ],\r\n    points: 1,\r\n    startTime: \"08:00 AM\",\r\n    startTimeValue: 800,\r\n  },\r\n  {\r\n    id: 8,\r\n    description: 'Exercise',\r\n    category:'Health',\r\n    subCategory: 'Daily',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 0,\r\n    weeklyGoal: 0,\r\n    priority: '2',\r\n    assigned: 'Adam',\r\n    contact: 'Jim',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Habit',\r\n    recurDays: 1,\r\n    completedDates: [\r\n      {\r\n        completedId: 1,\r\n        completedDate: '2022-12-02',\r\n        hours: .5\r\n      },\r\n      {\r\n        completedId: 2,\r\n        completedDate: '2022-11-01',\r\n        hours: 1\r\n      },\r\n      {\r\n        completedId: 3,\r\n        completedDate: '2022-12-03',\r\n        hours: .5\r\n      }\r\n    ],\r\n    points: 1,\r\n    startTime: \"10:00 AM\",\r\n    startTimeValue: 1000,\r\n  },\r\n  {\r\n    id: 9,\r\n    description: 'Plan tommorows dinner',\r\n    category:'Health',\r\n    subCategory: 'Tasks',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 0,\r\n    weeklyGoal: 0,\r\n    priority: '3',\r\n    assigned: 'Adam',\r\n    contact: 'Jim',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: 1,\r\n    completedDates: [],\r\n    points: 1,\r\n    startTime: \"09:00 AM\",\r\n    startTimeValue: 900,\r\n  },\r\n  {\r\n    id: 10,\r\n    description: 'Go on a walk',\r\n    category:'Family',\r\n    subCategory: '',\r\n    status: 'Started',\r\n    dueDate: '2021-08-09',\r\n    hours: 0,\r\n    weeklyGoal: 0,\r\n    priority: '3',\r\n    assigned: 'Adam',\r\n    contact: 'Jim',\r\n    notes: '',\r\n    dueWeek: '2021-08-09',\r\n    dueMonth: '2021-08',\r\n    workTime: [],\r\n    tags: [],\r\n    type: 'Recurring',\r\n    recurDays: 1,\r\n    completedDates: [],\r\n    points: 1,\r\n    startTime: \"08:00 AM\",\r\n    startTimeValue: 800,\r\n  },\r\n]","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collections from '@material-ui/icons/Collections';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class SortAlt extends Component {\r\n\r\n  state = {\r\n    sortOptions: [\r\n      'Category',\r\n      'Sub Category',\r\n      'Status',\r\n      'Priority',\r\n      'Hours',\r\n      'Assigned',\r\n      'Contact',\r\n      'Start Time',\r\n      'Due Date',\r\n      'Due Week',\r\n      'Due Month',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (sortOption) => {\r\n    this.props.handleSortChange(sortOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <Collections />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.sortOptions.map((sortOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              selected={this.props.currentSort === sortOption}\r\n              value={sortOption}\r\n              onClick={() => this.handleClick(sortOption)}\r\n              >\r\n              {sortOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class RelatedLists extends Component {\r\n\r\n  state = {\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (option) => {\r\n    this.props.changeList(option);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <ListIcon />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.props.relatedLists.map((option, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              value={option}\r\n              onClick={() => this.handleClick(option)}\r\n              >\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class ActiveFilter extends Component {\r\n\r\n  state = {\r\n    filterOptions: [\r\n      'Upcoming',\r\n      'Upcoming Month',\r\n      'Completed',\r\n      'All',\r\n    ],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleFilterChange(filterOption);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <FilterList />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.filterOptions.map((filterOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              selected={this.props.filterOption === filterOption}\r\n              value={filterOption}\r\n              onClick={() => this.handleClick(filterOption)}\r\n              >\r\n              {filterOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default class CategoryFilter extends Component {\r\n\r\n  state = {\r\n    filterOptions: [],\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, prevProps) {\r\n    this.setState({\r\n      filterOptions: [...nextProps.categories, 'All']\r\n    })\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleClick = (filterOption) => {\r\n    this.props.handleCategoryFilterChange(filterOption);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={this.handleMenu}\r\n          >\r\n          <CategoryIcon />\r\n        </IconButton>\r\n        <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={this.state.anchorEl}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            open={this.state.setAnchorEl}\r\n            onClose={this.handleClose}\r\n          >\r\n          {this.state.filterOptions.map((filterOption, i) => (\r\n            <MenuItem\r\n              key={i}\r\n              selected={this.props.categoryFilter.includes(filterOption)}\r\n              value={filterOption}\r\n              onClick={() => this.handleClick(filterOption)}\r\n              >\r\n              {filterOption}\r\n            </MenuItem>\r\n          ))}\r\n          </Menu>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  taskContainer: {\r\n    maxWidth: '700px',\r\n    marginBottom: '70px'\r\n  },\r\n  headerName: {\r\n    margin: '.1rem'\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa'\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px',\r\n  },\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n  },\r\n  fieldContainer: {\r\n    border: '1px solid #ccc',\r\n    margin: '5px',\r\n    padding: '5px',\r\n    minWidth: '200px',\r\n    maxWidth: '200px'\r\n  },\r\n  countContainer: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.1rem'\r\n  },\r\n  reportContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginBottom: '70px'\r\n  },\r\n  buttonStyle: {\r\n    margin: '5px',\r\n    padding: '5px',\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    padding: '5px',\r\n  },\r\n});\r\n\r\nclass Report extends Component {\r\n\r\n  state = {\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      categoryReport,\r\n      toggleDisplay,\r\n      updateReportWeek,\r\n      reportWeek,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.headerContainer}> \r\n          <div className={classes.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Weekly Report\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.headerClose}>\r\n            <IconButton\r\n              onClick={() => toggleDisplay('Tasks')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className={classes.headerContainer}> \r\n          <div className={classes.headerName}>\r\n              <Typography variant=\"h6\">\r\n                  {`Week of ${reportWeek}`}\r\n              </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.buttonContainer}>\r\n          <div className={classes.buttonStyle}>\r\n              <Button \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => updateReportWeek(1)}\r\n                >\r\n                +\r\n              </Button>\r\n            </div>\r\n            <div className={classes.buttonStyle}>\r\n              <Button \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => updateReportWeek(0)}\r\n                >\r\n                -\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        <div className={classes.reportContainer}>\r\n          {categoryReport.map ((item, i) => (\r\n            <div className={classes.fieldContainer}>\r\n              <div className={classes.headerName}>\r\n                <Typography variant='h4'>\r\n                  {item.category}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.countContainer}>\r\n                <Typography className={classes.fieldLabel}>\r\n                  {`Points : ${item.totalPoints}`}\r\n                </Typography>\r\n                <Typography className={classes.fieldLabel}>\r\n                  {`Total : ${item.weeklyPoints}`}\r\n                </Typography>\r\n                <Typography className={classes.fieldLabel}>\r\n                  {`Rating : ${item.weeklyPoints === 0 ? 0 : (item.totalPoints/item.weeklyPoints*100).toFixed(0)}%`}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Report)","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n  fieldLabel: {\r\n    alignContent: 'center',\r\n    minWidth: '90px',\r\n    maxWidth: '90px'\r\n  },\r\n  fieldContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '.5rem',\r\n  },\r\n  inputStyle: {\r\n    paddingLeft: '15px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px'\r\n  },\r\n  dateStyle: {\r\n    height: '40px',\r\n    padding: 0\r\n  },\r\n  dateContainer: {\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    alignContent: 'left',\r\n    alignItems: 'left',\r\n    justifyContent: 'left',\r\n  },\r\n  buttonStyle: {\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: '5px'\r\n  },\r\n  headerName: {\r\n    color: '#aaa',\r\n    margin: '10px',\r\n  },\r\n  headerClose: {\r\n    margin: '10px',\r\n    color: '#aaa',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px'\r\n  },\r\n  dialogContainer: {\r\n    marginBottom: '70px'\r\n  },\r\n};\r\n\r\nexport default class AddRelatedList extends Component {\r\n\r\n  state = {\r\n    listId: ''\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSave = () => {\r\n    this.props.addListValue(this.state.listId);\r\n    this.props.toggleDisplay('Tasks');\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={styles.dialogContainer}>\r\n        <div style={styles.headerContainer}> \r\n          <div style={styles.headerName}>\r\n            <Typography variant=\"h5\">\r\n                Add Releated List\r\n            </Typography>\r\n          </div>\r\n          <div style={styles.headerClose}>\r\n            <IconButton\r\n              onClick={() => this.props.toggleDisplay('Details')}\r\n              size='small'\r\n              >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div style={styles.fieldContainer}>\r\n          <Typography style={styles.fieldLabel}>\r\n            List Id\r\n          </Typography>\r\n          <TextField \r\n            style={styles.fieldStyle}\r\n            name='listId'\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              style: styles.inputStyle\r\n            }}\r\n            onChange={this.onChange}\r\n            value={this.state.listId}\r\n            multiline\r\n          />\r\n        </div>\r\n        <div style={styles.buttonContainer}>\r\n          <React.Fragment>\r\n            <div style={styles.buttonStyle}>\r\n              <Button \r\n                style={styles.buttonStyle}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => this.handleSave()}\r\n                >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </React.Fragment>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TaskGroup from './TaskGroup';\r\nimport TaskDetails from './TaskDetails';\r\nimport CompletedDetail from './CompletedDetail';\r\nimport {tasks} from './TestTasks';\r\nimport SortAlt from './SortAlt';\r\nimport RelatedLists from './RelatedLists';\r\nimport ActiveFilter from './ActiveFilter';\r\nimport CategoryFilter from './CategoryFilter';\r\nimport Report from './Report';\r\nimport AddRelatedList from './AddRelatedList';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n  taskContainer: {\r\n    maxWidth: '700px',\r\n    marginBottom: '70px'\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n    margin: '5px',\r\n  },\r\n  addButton: {\r\n    margin: '5px',\r\n    alignContent: 'center',\r\n    fontSize: '17px',\r\n    color: 'white'\r\n  },\r\n  actionBar: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  state = {\r\n    tasks: [],\r\n    headers: [],\r\n    lastSaved: null,\r\n    isLoading: false,\r\n    anchorEl: null,\r\n    setAnchorEl: false,\r\n    trackerName: '',\r\n    selectedTask: null,\r\n    mode: null,\r\n    completedForm: null,\r\n    completedDetails: {},\r\n    categories: [],\r\n    subcategories: [],\r\n    assignedUsers: [],\r\n    contactUsers: [],\r\n    taskDetails: {},\r\n    currentSort: 'Due Date',\r\n    filterOption: 'Upcoming',\r\n    categoryFilter: ['All'],\r\n    display: 'Tasks',\r\n    debugMode: false,\r\n    relatedLists: [],\r\n    categoryReport: [],\r\n    reportWeek: moment().startOf('week').format('YYYY-MM-DD'),\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // console.log('componentDidMount');\r\n    // If needing to update data use this:\r\n    // tasks: this.updateData(tasks),\r\n    if(this.state.debugMode === true){\r\n      this.setState({\r\n        tasks: this.updateData(tasks),\r\n      });\r\n    } else {\r\n      this.getServerData();\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    //console.log('componentDidUpdate');\r\n    if (this.state.tasks !== prevState.tasks) {\r\n      this.getSortHeaders(this.state.tasks, this.state.currentSort);\r\n      this.getUniqueValues(this.state.tasks, 'category', 'categories');\r\n      this.getUniqueValues(this.state.tasks, 'subCategory', 'subcategories')\r\n      this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers');\r\n      this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers');\r\n    }\r\n  }\r\n\r\n  updateData = (data) => {\r\n    const newTasks = data.map((task) => {\r\n      if (task.type === 'Habit' && task.status !== 'Completed') {\r\n        task.dueDate = moment().format('YYYY-MM-DD');\r\n        task.dueWeek = moment().startOf('week').format('YYYY-MM-DD');\r\n        task.dueMonth = moment().format('YYYY-MM');\r\n      }\r\n      return task;\r\n    })\r\n    return newTasks;\r\n  }\r\n\r\n  getServerData = () => {\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n    // If needing to update data structure use this:\r\n    // tasks: this.updateData(res.data.list),\r\n\r\n    if(listId !== undefined && listId !== null){\r\n      this.setState({\r\n        isLoading: true\r\n      },() => {\r\n        axios\r\n        .get(`https://guarded-mesa-76047.herokuapp.com/api/lists/${listId}`)\r\n        .then(res => this.setState({\r\n          trackerName: res.data.listName,\r\n          tasks: this.updateData(res.data.list),\r\n          lastSaved: res.data.lastSaved,\r\n          isLoading: false,\r\n          relatedLists: (res.data.relatedLists === undefined || res.data.relatedLists === null) ? [] : res.data.relatedLists,\r\n        }))\r\n        .then(() => {\r\n          this.getSortHeaders(this.state.tasks, this.state.currentSort)\r\n          this.getUniqueValues(this.state.tasks, 'category', 'categories')\r\n          this.getUniqueValues(this.state.tasks, 'subCategory', 'subcategories')\r\n          this.getUniqueValues(this.state.tasks, 'assigned', 'assignedUsers')\r\n          this.getUniqueValues(this.state.tasks, 'contact', 'contactUsers')\r\n        })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  changeList = (listId) => {\r\n    const a = document.createElement(\"a\");\r\n    a.href = `https://wmxgroup.github.io/task-tracker/?query=${listId}`;\r\n    a.click();\r\n  }\r\n\r\n  addListValue = (listId) => {\r\n    this.setState({\r\n      relatedLists: [...this.state.relatedLists, listId]\r\n    }, () => this.saveData())\r\n  }\r\n\r\n  saveData = () => {\r\n    this.handleClose();\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let listId = params.get('query');\r\n    const currentDT = new Date();\r\n\r\n    if(this.state.debugMode === false){\r\n      if(listId === null){\r\n        axios\r\n        .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n          list: this.state.tasks,\r\n          listName: this.state.trackerName,\r\n          lastSaved: new Date(),\r\n          relatedLists: this.state.relatedLists\r\n        })\r\n        .then((res) => {\r\n          alert('New list created!')\r\n          return(res);\r\n        })\r\n        .then((res) => {\r\n          const newId = res.data._id;\r\n          const a = document.createElement(\"a\");\r\n          a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n          a.click();\r\n        })\r\n      } else {\r\n        axios\r\n        .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/update/${listId}`, {\r\n          list: this.state.tasks,\r\n          listName: this.state.trackerName,\r\n          lastSaved: currentDT,\r\n          relatedLists: this.state.relatedLists\r\n        })\r\n        .then(() => {\r\n          this.setState({\r\n            lastSaved: currentDT\r\n          })\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  downloadFile = (content, fileName, contentType) => {\r\n    const a = document.createElement(\"a\");\r\n    const file = new Blob([content], { type: contentType });\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = fileName;\r\n    a.click();\r\n  }\r\n\r\n  exportJSON = () => {\r\n    this.handleClose();\r\n    this.downloadFile(JSON.stringify(this.state.tasks), \"data.json\", \"text/plain\");\r\n  }\r\n\r\n  getFile = (e) => {\r\n    this.handleClose();\r\n    let files = e.target.files;\r\n    let reader = new FileReader();\r\n    reader.readAsText(files[0]);\r\n\r\n    reader.onload = e => {\r\n      this.setState({\r\n        tasks: JSON.parse(e.target.result)\r\n      })\r\n    };\r\n  }\r\n\r\n  createNew = () => {\r\n    this.handleClose();\r\n\r\n    axios\r\n    .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\r\n      list: [],\r\n      listName: this.state.trackerName,\r\n      lastSaved: new Date()\r\n    })\r\n    .then((res) => {\r\n      alert('New list created!')\r\n      return(res);\r\n    })\r\n    .then((res) => {\r\n      const newId = res.data._id;\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = `https://wmxgroup.github.io/task-tracker/?query=${newId}`;\r\n      a.click();\r\n    });\r\n  }\r\n\r\n  createTask = (task) => {\r\n    this.setState({ tasks: [...this.state.tasks, task]}, () => this.saveData());\r\n  }\r\n\r\n  launchDetails = (type, id) => {\r\n    const taskDetail = this.state.tasks.filter((task) => task.id === id)\r\n    this.setState({\r\n      mode: type,\r\n      taskDetails: taskDetail[0]\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  launchNewTask = () => {\r\n    this.setState({\r\n      mode: 'Add'\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  completeTask = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n        let curDueDate = task.dueDate === undefined ? moment().format('YYYY-MM-DD') : task.dueDate;\r\n        let curRecurDays = task.recurDays === undefined ? 0 : task.recurDays;\r\n        if (task.type === 'Recurring' || task.type === 'Habit') {\r\n          task.status = 'Not Started';\r\n          task.recurDays = curRecurDays;\r\n          task.dueDate = moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM-DD');\r\n          task.dueWeek = moment(curDueDate).add(curRecurDays, 'days').startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM');\r\n          task.completedDates = [...task.completedDates, \r\n            {\r\n            completedId: this.uuidv4(),\r\n            completedDate: moment(curDueDate).format('YYYY-MM-DD'),\r\n            hours: 0\r\n            }\r\n          ];\r\n        } else if (task.type === 'One-time') {\r\n          task.status = 'Completed';\r\n          task.dueDate = curDueDate;\r\n          task.dueWeek = moment(curDueDate).startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(curDueDate).format('YYYY-MM');\r\n          task.completedDates = [...task.completedDates, \r\n            {\r\n            completedId: this.uuidv4(),\r\n            completedDate: moment(curDueDate).format('YYYY-MM-DD'),\r\n            hours: 0\r\n            }\r\n          ];\r\n        }\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  completeCompletedTask = (id, completedDate, hours) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n        let curDueDate = task.dueDate === undefined ? moment().format('YYYY-MM-DD') : task.dueDate;\r\n        let curRecurDays = task.recurDays === undefined ? 0 : task.recurDays;\r\n        if (task.type === 'Recurring' || task.type === 'Habit') {\r\n          task.status = 'Not Started';\r\n          task.recurDays = curRecurDays;\r\n          task.dueDate = moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM-DD');\r\n          task.dueWeek = moment(curDueDate).add(curRecurDays, 'days').startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM');\r\n          task.completedDates = [...task.completedDates, \r\n            {\r\n            completedId: this.uuidv4(),\r\n            completedDate: completedDate,\r\n            hours: hours\r\n            }\r\n          ];\r\n        } else if (task.type === 'One-time') {\r\n          task.status = 'Completed';\r\n          task.dueDate = curDueDate;\r\n          task.dueWeek = moment(curDueDate).startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(curDueDate).format('YYYY-MM');\r\n          task.completedDates = [...task.completedDates, \r\n            {\r\n            completedId: this.uuidv4(),\r\n            completedDate: completedDate,\r\n            hours: hours\r\n            }\r\n          ];\r\n        }\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  skipOccurence = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n          let curDueDate = task.dueDate === undefined ? moment().format('YYYY-MM-DD') : task.dueDate;\r\n          let curRecurDays = task.recurDays === undefined ? 0 : task.recurDays;\r\n          task.recurDays = curRecurDays;\r\n          task.dueDate = moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM-DD');\r\n          task.dueWeek = moment(curDueDate).add(curRecurDays, 'days').startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(curDueDate).add(curRecurDays, 'days').format('YYYY-MM');\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  snoozeWeek = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n          let curDueDate = task.dueDate === undefined ? moment().format('YYYY-MM-DD') : task.dueDate;\r\n          task.dueDate = moment(curDueDate).add(7, 'days').format('YYYY-MM-DD');\r\n          task.dueWeek = moment(curDueDate).add(7, 'days').startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(curDueDate).add(7, 'days').format('YYYY-MM');\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  ignoreTask = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n          task.dueDate = moment(task.dueDate).add(1, 'days').format('YYYY-MM-DD');\r\n          task.dueWeek = moment(task.dueDate).add(1, 'days').startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment(task.dueDate).add(1, 'days').format('YYYY-MM');\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  makeCurrent = (id) => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      if (task.id === id) {\r\n          task.dueDate = moment().format('YYYY-MM-DD');\r\n          task.dueWeek = moment().startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment().format('YYYY-MM');\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  makeAllActiveCurrent = () => {\r\n    const newTasks = this.state.tasks.map((task) => {\r\n      console.log(task);\r\n      if (task.dueDate <= moment().format('YYYY-MM-DD') && task.status !== 'Completed' && task.dueDate !== undefined) {\r\n          task.dueDate = moment().format('YYYY-MM-DD');\r\n          task.dueWeek = moment().startOf('week').format('YYYY-MM-DD');\r\n          task.dueMonth = moment().format('YYYY-MM');\r\n      }\r\n      return task;\r\n    });\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  // activateTasks = () => {\r\n  //   const newTasks = this.state.tasks.map((task) => {\r\n  //     if (moment().format('YYYY-MM-DD') >= moment(task.activeDate).format('YYYY-MM-DD') && task.status !== 'Completed') {\r\n  //       task.isActive = true;\r\n  //     }\r\n  //     return task;\r\n  //   });\r\n  //   this.setState({\r\n  //     tasks: newTasks,\r\n  //   }, () => this.saveData());\r\n  // }\r\n\r\n  saveTask = (id, task) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState(\r\n      { tasks: [...newTasks, task],\r\n        completedTasks : task.status === 'completed' ? [...this.state.completedTasks, task] : this.state.completedTasks\r\n      }, () => this.saveData()\r\n      );\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    const newTasks = this.state.tasks.filter((task) => task.id !== id)\r\n    this.setState({\r\n      tasks: newTasks,\r\n    }, () => this.saveData());\r\n  }\r\n\r\n  getSortHeaders = (data, keyName) => {\r\n    const lowerKeyName = this.getKeyName(keyName)\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[lowerKeyName] );\r\n      if(i <= -1){\r\n        resArr.push(item[lowerKeyName]);\r\n      }\r\n      return null;\r\n    });\r\n    if (lowerKeyName === 'startTime'){\r\n      let startTimeNoNulls = resArr.filter((task) => task !== null);\r\n      let startTimeDay = startTimeNoNulls.filter((task) => task.includes(\"AM\"));\r\n      let startTimeNight = startTimeNoNulls.filter((task) => task.includes(\"PM\"));\r\n      startTimeDay.sort();\r\n      startTimeNight.sort();\r\n      resArr = [...startTimeDay, ...startTimeNight, null];\r\n    } else {\r\n      resArr.sort();\r\n    }\r\n    this.setState({\r\n      headers: resArr,\r\n      currentSort: keyName,\r\n    })\r\n  }\r\n\r\n  getKeyName = (sortName) => {\r\n    let keyName = '';\r\n    switch (sortName) {\r\n      case 'Category':\r\n        keyName = \"category\";\r\n        break;\r\n      case 'Sub Category':\r\n        keyName = \"subCategory\";\r\n        break;\r\n      case 'Status':\r\n        keyName = \"status\";\r\n        break;\r\n      case 'Priority':\r\n        keyName = \"priority\";\r\n        break;\r\n      case 'Hours':\r\n        keyName = \"hours\";\r\n        break;\r\n      case 'Start Time':\r\n        keyName = \"startTime\";\r\n        break;\r\n      case 'Assigned':\r\n        keyName = \"assigned\";\r\n        break;\r\n      case 'Contact':\r\n        keyName = \"contact\";\r\n        break;\r\n      case 'Due Date':\r\n        keyName = \"dueDate\";\r\n        break;\r\n      case 'Due Week':\r\n        keyName = \"dueWeek\";\r\n        break;\r\n      case 'Due Month':\r\n        keyName = \"dueMonth\";\r\n        break;\r\n      default:\r\n        keyName = \"\";\r\n    }\r\n    return keyName;\r\n  }\r\n\r\n  getUniqueValues = (data, fieldName, arrayName) => {\r\n    let resArr = [];\r\n    data.filter((item) => {\r\n      let i = resArr.findIndex(x => x === item[fieldName] );\r\n      if(i <= -1){\r\n        resArr.push(item[fieldName]);\r\n      }\r\n      return null;\r\n    });\r\n    resArr.sort((a,b) => (a > b) ? 1 : -1);\r\n    this.setState({\r\n      [arrayName]: resArr\r\n    })\r\n  }\r\n  \r\n  uuidv4 = () => {\r\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      setAnchorEl: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setAnchorEl: false\r\n    });\r\n  };\r\n\r\n  handleTitleChange = (e) => {\r\n    this.setState({\r\n      trackerName: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSortChange = (sortOption) => {\r\n    this.getSortHeaders(this.state.tasks, sortOption)\r\n  };\r\n\r\n  handleFilterChange = (filterOption) => {\r\n    this.setState({\r\n      filterOption\r\n    })\r\n  };\r\n\r\n  handleCategoryFilterChange = (category) => {\r\n    const { categoryFilter } = this.state;\r\n    if (category === 'All'){\r\n      this.setState({\r\n        categoryFilter: ['All'],\r\n    })} else if (categoryFilter.includes(category)) {\r\n      const newCategoryFilter = categoryFilter.filter((value) => value !== category)\r\n      this.setState({\r\n        categoryFilter: newCategoryFilter,\r\n      })\r\n    } else {\r\n      const newCategoryFilter = categoryFilter.filter((value) => value !== 'All')\r\n      this.setState({\r\n        categoryFilter: [...newCategoryFilter, category]\r\n      })\r\n    }\r\n  };\r\n\r\n  toggleDisplay = (displayName) => {\r\n    this.setState({\r\n      display: displayName\r\n    })\r\n  }\r\n\r\n  calculatePoints = () => {\r\n    let pointsArray = [];\r\n    const {\r\n      categories,\r\n      tasks,\r\n      reportWeek,\r\n    } = this.state;\r\n\r\n    for (let i = 0; i < categories.length; i++) {\r\n      pointsArray.push({\r\n        category: categories[i],\r\n        totalPoints: 0,\r\n        weeklyPoints: 0,\r\n      })\r\n    }\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      for (let j = 0; j < pointsArray.length; j++) {\r\n        if (pointsArray[j].category === tasks[i].category) {\r\n          pointsArray[j].weeklyPoints = parseInt(pointsArray[j].weeklyPoints) + ((tasks[i].weeklyGoal === null || tasks[i].weeklyGoal === '' ) ? 0 : parseInt(tasks[i].weeklyGoal))\r\n          for (let k = 0; k < tasks[i].completedDates.length; k++) {\r\n            if (moment(tasks[i].completedDates[k]).format('YYYY-MM-DD') >= reportWeek && moment(tasks[i].completedDates[k]).format('YYYY-MM-DD') < moment(reportWeek).add(7, 'days').format('YYYYMMDD')) {\r\n              const newPoints = (tasks[i].points === null || tasks[i].points === '') ? 0 : parseInt(tasks[i].points);\r\n              pointsArray[j].totalPoints = parseInt(pointsArray[j].totalPoints) + newPoints;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      categoryReport: pointsArray,\r\n    })\r\n  }\r\n\r\n  updateReportWeek = async (direction) => {\r\n    if (direction === 1){\r\n      this.setState({\r\n        reportWeek: moment(this.state.reportWeek).add(7, 'days').format('YYYY-MM-DD')\r\n      }, () => this.calculatePoints())\r\n    } else {\r\n      this.setState({\r\n        reportWeek: moment(this.state.reportWeek).subtract(7, 'days').format('YYYY-MM-DD')\r\n      }, () => this.calculatePoints())\r\n    }\r\n  }\r\n\r\n  launchReport = async () => {\r\n    await this.handleClose();\r\n    await this.calculatePoints();\r\n    await this.toggleDisplay('Report');\r\n  }\r\n\r\n  launchAddList = async () => {\r\n    await this.handleClose();\r\n    await this.toggleDisplay('AddRelatedList');\r\n  }\r\n\r\n  launchNewCompleted = (curTaskDetails) => {\r\n    this.setState({\r\n      completedForm: 'Add',\r\n      taskDetails: curTaskDetails\r\n    },\r\n    () => this.toggleDisplay('Completed'));\r\n  }\r\n\r\n  launchEditCompleted = (curTaskDetails, completedDetails) => {\r\n    this.setState({\r\n      completedForm: 'Edit',\r\n      completedDetails: completedDetails,\r\n      taskDetails: curTaskDetails\r\n    },\r\n    () => this.toggleDisplay('Completed'));\r\n  }\r\n\r\n  launchCompleteCompleted = (id) => {\r\n    const taskDetail = this.state.tasks.filter((task) => task.id === id)\r\n    this.setState({\r\n      mode: 'Edit',\r\n      completedForm: 'Complete',\r\n      taskDetails: taskDetail[0]\r\n    },\r\n    () => this.toggleDisplay('Completed'));\r\n  }\r\n\r\n  saveCompleted = (id, data) => {\r\n    const newCompleted = this.state.taskDetails.completedDates.filter((item) => item.completedId !== id)\r\n    let newTaskDetails = this.state.taskDetails;\r\n    newTaskDetails.completedDates = [...newCompleted, data];\r\n    this.setState({ \r\n      taskDetails: newTaskDetails,\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  addCompleted = (completed) => {\r\n    let newTaskDetails = this.state.taskDetails;\r\n    const newCompleted = [...newTaskDetails.completedDates, completed]\r\n    newTaskDetails.completedDates = newCompleted;\r\n    this.setState({ \r\n      taskDetails: newTaskDetails,\r\n    },\r\n    () => this.toggleDisplay('Details'));\r\n  }\r\n\r\n  render() {\r\n\r\n    if(this.state.debugMode === true){\r\n        console.log(this.state);\r\n    }\r\n\r\n    const {\r\n      classes\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar \r\n          position=\"fixed\" \r\n          color=\"primary\"\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={this.handleMenu}\r\n                >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={this.state.anchorEl}\r\n                  getContentAnchorEl={null}\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  open={this.state.setAnchorEl}\r\n                  onClose={this.handleClose}\r\n                >\r\n                  <input \r\n                    type=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    name=\"file\" \r\n                    onChange={this.getFile}\r\n                    accept=\".json\"\r\n                    />\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <MenuItem onClick={() => this.getFile()}>Import JSON</MenuItem>\r\n                  </label>\r\n                  <MenuItem onClick={() => this.exportJSON()}>Export Data</MenuItem>\r\n                  <MenuItem onClick={() => this.createNew()}>Create New</MenuItem>\r\n                  <MenuItem onClick={() => this.launchReport()}>Show Report</MenuItem>\r\n                  <MenuItem onClick={() => this.makeAllActiveCurrent()}>Make Tasks Current</MenuItem>\r\n                  <MenuItem onClick={() => this.launchAddList()}>Add Related List</MenuItem>\r\n                </Menu>\r\n              <Typography variant=\"h6\">\r\n                  Task Tracker\r\n              </Typography>\r\n              <div className={classes.grow} />       \r\n              <div className={classes.addButton}>\r\n                <SortAlt\r\n                  currentSort={this.state.currentSort}\r\n                  handleSortChange={this.handleSortChange}\r\n                />\r\n              </div>\r\n              <div className={classes.addButton}>\r\n                <ActiveFilter\r\n                  filterOption={this.state.filterOption}\r\n                  handleFilterChange={this.handleFilterChange}\r\n                />\r\n              </div>\r\n              <div className={classes.addButton}>\r\n                <CategoryFilter\r\n                  handleCategoryFilterChange={this.handleCategoryFilterChange}\r\n                  categories={this.state.categories}\r\n                  categoryFilter={this.state.categoryFilter}\r\n                />\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Toolbar />\r\n          {this.state.display === 'Tasks' &&\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  fontStyle:'italic',\r\n                  color:'#bbb',\r\n                }}>\r\n                  {this.state.lastSaved === null ? 'Not Saved' : 'Last Saved: ' + this.state.lastSaved}\r\n              </div>\r\n              <TextField\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                  style: {\r\n                    display: 'block',\r\n                    fontSize: '2em',\r\n                    marginTop: '0.3em',\r\n                    marginBottom: '0.3em',\r\n                    // padding: 0\r\n                  },\r\n                }}\r\n                value={this.state.trackerName}\r\n                onChange={this.handleTitleChange}\r\n              />\r\n              <Divider />\r\n              <div className={classes.taskContainer}>\r\n                {this.state.headers.map ((header, i) => (\r\n                  <TaskGroup\r\n                    tasks={this.state.tasks}\r\n                    header={header}\r\n                    key={i}\r\n                    completeTask={this.completeTask}\r\n                    launchDetails={this.launchDetails}\r\n                    ignoreTask={this.ignoreTask}\r\n                    makeCurrent={this.makeCurrent}\r\n                    snoozeWeek={this.snoozeWeek}\r\n                    skipOccurence={this.skipOccurence}\r\n                    getKeyName={this.getKeyName}\r\n                    currentSort={this.state.currentSort}\r\n                    filterOption={this.state.filterOption}\r\n                    categoryFilter={this.state.categoryFilter}\r\n                    launchCompleteCompleted={this.launchCompleteCompleted}\r\n                    />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n          {this.state.display === 'Details' &&\r\n            <TaskDetails\r\n              toggleDisplay={this.toggleDisplay}\r\n              mode={this.state.mode}\r\n              categories={this.state.categories}\r\n              subcategories={this.state.subcategories}\r\n              assignedUsers={this.state.assignedUsers}\r\n              contactUsers={this.state.contactUsers}\r\n              createTask={this.createTask}\r\n              taskDetails={this.state.taskDetails}\r\n              saveTask={this.saveTask}\r\n              deleteTask={this.deleteTask}\r\n              launchNewCompleted={this.launchNewCompleted}\r\n              launchEditCompleted={this.launchEditCompleted}\r\n              uuidv4={this.uuidv4}\r\n            />\r\n          }\r\n          {this.state.display === 'Report' &&\r\n            <Report\r\n              categoryReport={this.state.categoryReport}\r\n              toggleDisplay={this.toggleDisplay}\r\n              updateReportWeek={this.updateReportWeek}\r\n              reportWeek={this.state.reportWeek}\r\n            />\r\n          }\r\n          {this.state.display === 'Completed' &&\r\n            <CompletedDetail\r\n              type={this.state.completedForm}\r\n              toggleDisplay={this.toggleDisplay}\r\n              saveCompleted={this.saveCompleted}\r\n              addCompleted={this.addCompleted}\r\n              completedDetails={this.state.completedDetails}\r\n              taskDetails={this.state.taskDetails}\r\n              completeCompletedTask={this.completeCompletedTask}\r\n            />\r\n          }\r\n          {this.state.display !== 'Details' &&\r\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n              <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={() => this.getServerData()}\r\n                >\r\n                <RefreshIcon />\r\n              </IconButton>\r\n              <div className={classes.addButton}>\r\n                <RelatedLists\r\n                  relatedLists={this.state.relatedLists}\r\n                  changeList={this.changeList}\r\n                />\r\n              </div>       \r\n                <Fab \r\n                  color=\"secondary\" \r\n                  aria-label=\"add\" \r\n                  className={classes.fabButton}\r\n                  onClick={() => this.launchNewTask()}\r\n                  >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </Toolbar>\r\n            </AppBar>\r\n          }\r\n          {this.state.display === 'AddRelatedList' &&\r\n            <AddRelatedList\r\n              relatedLists={this.state.relatedLists}\r\n              toggleDisplay={this.toggleDisplay}\r\n              addListValue={this.addListValue}\r\n          />\r\n          }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Main)","import React from 'react';\nimport Main from './components/Main';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { teal, indigo } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: teal[500],\n    },\n    secondary: {\n      main: indigo[500],\n    },\n  },\n\n  typography: {\n\n  },\n  overrides: {\n    MuiAutocomplete: {\n      // paper: {\n      //   backgroundColor: 'blue'\n      // },\n      // option: {\n      //   backgroundColor: 'green'\n      // },\n      // listbox: {\n      //   backgroundColor: '#bbdefb',\n      // }\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}